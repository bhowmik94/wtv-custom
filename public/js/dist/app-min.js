$(document).ready(function(){var t=".MultiCarousel",e=".MultiCarousel-inner",n="";function r(){var r=0,i=0,o="",a="",s=$(t).width(),c=$("body").width();$(e).each(function(){i+=1;var t=$(this).find(".item").length;o=$(this).parent().attr("data-items"),a=o.split(","),$(this).parent().attr("id","MultiCarousel"+i),c>=1200?(r=a[3],n=s/r):c>=992?(r=a[2],n=s/r):c>=768?(r=a[1],n=s/r):(r=a[0],n=s/r),$(this).css({transform:"translateX(0px)",width:n*t}),$(this).find(".item").each(function(){$(this).outerWidth(n)}),$(".leftLst").addClass("over"),$(".rightLst").removeClass("over")})}function i(t,r){var i="#"+$(r).parent().attr("id");!function(t,r,i){var o="",a=$(r+" "+e).css("transform").match(/-?[\d\.]+/g),s=Math.abs(a[4]);if(0==t)o=parseInt(s)-parseInt(n*i),$(r+" .rightLst").removeClass("over"),o<=n/2&&(o=0,$(r+" .leftLst").addClass("over"));else if(1==t){var c=$(r).find(e).width()-$(r).width();o=parseInt(s)+parseInt(n*i),$(r+" .leftLst").removeClass("over"),o>=c-n/2&&(o=c,$(r+" .rightLst").addClass("over"))}$(r+" "+e).css("transform","translateX("+-o+"px)")}(t,i,$(i).attr("data-slide"))}$(".leftLst, .rightLst").click(function(){i($(this).hasClass("leftLst")?0:1,this)}),r(),$(window).resize(function(){r()})}),function(){function t(){}window.myUtil||(window.myUtil={}),window.myUtil.PlayListDeserializer=t,t.prototype.deserialize=function(t){if(!t)return null;var e={};if(e.paging={page_count:t.paging.page_count,item_count:t.paging.item_count},e.items=[],t.playlists&&t.playlists.length)for(var n=0;n<t.playlists.length;n++){var r=t.playlists[n],i=Math.round(parseFloat(r.total_duration)/60),o=r.video_count;let a=(null==o?"":o)+" video"+(o>1?"s":""),s=i+" min"+(i>1?"s":"");e.items.push({id:r.id,title:r.title,metas:[{icon:"sharp-playlist",text:a},{icon:"clock-icon",text:s}],thumbnailUrl:r.thumbnail.image_640x360||r.thumbnail.default})}return e}}(),function(){function t(){}window.myUtil||(window.myUtil={}),window.myUtil.VideoListDeserializer=t,t.prototype.deserialize=function(t){if(!t)return null;var e={};if(e.paging={page_count:t.paging.page_count,item_count:t.paging.item_count},e.items=[],t.videos&&t.videos.length)for(var n=0;n<t.videos.length;n++){var r=t.videos[n],i=Math.round(parseFloat(r.length)/60);let o=i+" min"+(i>1?"s":"");e.items.push({id:r.id,title:r.title,description:r.description,metas:[{icon:"calendar-icon",text:moment.unix(r.added_at).format("DD MMM YYYY")},{icon:"clock-icon",text:o}],thumbnailUrl:r.thumbnail.image_640x360||r.thumbnail.default,playIcon:"sharp-playbutton",thumbnailUrlW1920H1080:r.thumbnail.image_1920x1080||""})}return e}}(),function(){function t(t){if(!t)throw Error("no carousel provided");this.carousel=t}window.myGui||(window.myGui={}),window.myGui.HeroCarouselGuiBuilder=t,t.prototype.buildContent=function(){var t=this.carousel,e=$('<div class="hero-carousel"></div>');t.$dom.append(e),t.carousel=e,t.carousel.slick({infinite:!1,dots:!0}),this.carousel.carousel.on("beforeChange",function(t,e,n,r){if(!e||!e.$slides||0==e.$slides.length)return;let i=e.$slides,o=$(i[r].innerHTML).find("[name=background-image-url]");if(1==o.length){let t=o[0].value;$(".body-background img").attr("src",t)}})},t.prototype.buildItem=function(t){var e=this.carousel;let n=t.thumbnailUrlW1920H1080?t.thumbnailUrlW1920H1080:t.thumbnailUrl;var r=$('<div class="item">                             <div class="carousel-item-info">                                 <img src="'+n+'" style="display: none;" />                                 <input type="hidden" name="background-image-url" value="'+n+'" />                                 <div class="meta"></div>                                 <div class="title">'+t.title+'</div>                                 <div class="desc">'+(t.description?t.description:"")+'</div>                                 <div class="controls">                                     <a class="btn-play" tabindex="0" href="'+(e.options.itemLinkTemplate?e.options.itemLinkTemplate.replace(/{{itemId}}/g,t.id):"javascript:void(0)")+'"><i class="sharp-playbutton-white"></i></a>                                     <span class="text">Play video</span>                                 </div>                             </div>                        </div>');return t.metas&&t.metas.length&&_.forEach(t.metas,function(t){r.find(".meta").append($('<span class="meta-item"><i class="'+t.icon+'"></i>'+t.text+"</span>"))}),r}}(),function(){function t(t){if(!t)throw Error("no carousel provided");this.carousel=t}window.myGui||(window.myGui={}),window.myGui.ListCarouselGuiBuilder=t,t.prototype.buildContent=function(){var t=this.carousel,e=$('<section class="play-list">                              <div class="head">'+(t.options.icon?'<span class="icon"><i class="'+t.options.icon+'"></i></span>':"")+'<span class="head-group">'+(t.options.title?'<span class="title">'+t.options.title+"</span>":"")+(t.options.subtitle?'<span class="time">'+(t.options.subtitle?t.options.subtitle:"")+"</span>":"")+'</span>                              </div>                              <div class="channel-carousel"></div>                            </section>');t.$dom.append(e),t.carousel=t.$dom.find(".channel-carousel");var n=new MobileDetect(window.navigator.userAgent);t.carousel.slick({infinite:!1,dots:!0,slidesToShow:t.slidePageSize||3,slidesToScroll:t.slidePageSize||3,nextArrow:'                 <button class="slick-next slick-arrow">                     <i id="icon-arrow-right" />                 </button>             ',prevArrow:'                 <button class="slick-prev slick-arrow">                     <i id="icon-arrow-left" />                 </button>             ',mobileFirst:!!n.phone(),responsive:[{breakpoint:480,settings:{slidesToShow:1,slidesToScroll:1}},{breakpoint:320,settings:{slidesToShow:1,slidesToScroll:1}}]})},t.prototype.renderItemTitle=function(t){if(t&&t.length&&t.length>39){var e=t.substr(0,36);return e+="..."}return t},t.prototype.buildItem=function(t){var e=this.carousel,n=$('<div class="item">                             <a href="'+(e.options.itemLinkTemplate?e.options.itemLinkTemplate.replace(/{{itemId}}/g,t.id):"javascript:void(0)")+'">                             <div class="content-wrap">                                 <div class="thumbnail">                                     <div class="image">                                         <img src="'+t.thumbnailUrl+'">                                     </div>                                     <div class="icon"><i class="'+(t.playIcon?t.playIcon:"sharp-playlist")+'"></i></div>                                 </div>                                 <div class="info">                                     <div class="meta">                                                                             </div>                                     <div class="title">'+this.renderItemTitle(t.title)+'</div>                                 </div>                             </div>                             </a>                             <div class="slide-unactive-mask"></div>                        </div>');return t.metas&&t.metas.length&&_.forEach(t.metas,function(t){n.find(".info .meta").append($('<span class="meta-item"><i class="'+t.icon+'"></i>'+t.text+"</span>"))}),n},t.prototype.updateHeadTitle=function(t){var e=this.carousel.$dom.find(".play-list .head"),n=e.find(".title");n&&n.length?n.text(t):(n=$('<span class="title">'+t+"</span>"),e.append(n))},t.prototype.updateHeadMetas=function(t){this.carousel;var e=this.carousel.$dom.find(".play-list .head"),n=e.find(".meta");n&&n.length||(n=$('<div class="meta"></div>'),e.prepend(n)),n.html(""),_.forEach(t,function(t){var e=$('<span class="meta-item"><i class="'+t.icon+'"></i>'+t.text+"</span>");n.append(e)})}}(),function(){function t(t){if(!t.selector)throw Error("no selector provided");if(!t.guiBuilder)throw Error("no gui builder provided");this.options=t,this.$dom=$(t.selector),this.guiBuilder=new this.options.guiBuilder(this),this.items=[],this.header={title:"",metas:[]}}window.myGui||(window.myGui={}),window.myGui.ItemCarousel=t,t.prototype.render=function(){this.rendered||(this.guiBuilder.buildContent(),"function"==typeof this.onRenderCompleted&&this.onRenderCompleted(),this.rendered=!0)},t.prototype.addItems=function(t){var e=this;this.rendered||e.render(),t&&t.length&&_.forEach(t,function(t){_.find(e.items,function(e){return String(e.id)==String(t.id)})||(e.addItemToCarousel(t),e.items.push(t))})},t.prototype.addItemToCarousel=function(t){var e=this.guiBuilder.buildItem(t);this.carousel.slick("slickAdd",e)},t.prototype.updateHeadTitle=function(t){this.header.title=t,this.guiBuilder.updateHeadTitle(t)},t.prototype.updateHeadMetas=function(t){var e=this;_.forEach(t,function(t){var n=_.find(e.header.metas,function(e){return t.id&&e.id==t.id});n?(n.icon=t.icon,n.text=t.text):e.header.metas.push(t)}),e.guiBuilder.updateHeadMetas(e.header.metas)}}();var ksdk=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)n.d(r,i,function(e){return t[e]}.bind(null,i));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="/",n(n.s=260)}([function(t,e,n){"use strict";n(13),n(47),n(48),n(59),n(14),n(101),n(9),n(21),n(26);var r=n(23),i=n(62),o=n.n(i),a=n(63),s=n.n(a),c={trace:{label:"trace",value:6},debug:{label:"debug",value:5},info:{label:"info",value:4},error:{label:"error",value:3},warn:{label:"warn",value:2},fatal:{label:"fatal",value:1}};function u(t){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function f(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var l=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object(r.a)(this),this.st=Date.now();var e=s()("ksdn.log")||{},n=e.u,i=e.c,a=e.id,u=e.level;this.id=a||o()(),this.url=n,this.con=i,this.active=!1,this.level=u||c.info}var e,n;return e=t,(n=[{key:"_getConfig",value:function(){return{u:this.url,c:this.con,id:this.id,active:this.active,level:this.level}}},{key:"init",value:function(){return this.url?this.attach(this.url):this._getConfig()}},{key:"toggleConsole",value:function(){this.con=!this.con,this.save()}},{key:"attach",value:function(t){var e=this;return this.url=t,window.WebSocket?(this.ws=new WebSocket(this.url+"/"+this.id),this.ws.onopen=function(){e.active=!0,e.ws&&e.ws.send("".concat(e.st,":start:").concat(e.id))},this.ws.onclose=function(){return e.active=!1},this._getConfig()):this._getConfig()}},{key:"resetId",value:function(){this.id=o()(),this.active&&this.detach(),this.init()}},{key:"detach",value:function(){this.ws&&this.ws.close()}},{key:"save",value:function(){var t;t={u:this.url,c:this.con,id:this.id,level:this.level},s()("ksdn.log",t)}},{key:"l",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];this.m.apply(this,[c.info].concat(e))}},{key:"i",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];this.m.apply(this,[c.info].concat(e))}},{key:"e",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];this.m.apply(this,[c.error].concat(e))}},{key:"w",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];this.m.apply(this,[c.warn].concat(e))}},{key:"f",value:function(){for(var t=arguments.length,e=new Array(t),n=0;n<t;n++)e[n]=arguments[n];this.m.apply(this,[c.fatal].concat(e))}},{key:"m",value:function(t){if(this.enabled()||!(t.value<=this.level.value)){for(var e,n=Date.now()-this.st,r="".concat(n,":").concat(t.label),i=arguments.length,o=new Array(i>1?i-1:0),a=1;a<i;a++)o[a-1]=arguments[a];if(this.active){var s=o.reduce(function(t,e){return t+":"+("object"===u(e)?JSON.stringify(e):e)}),c="".concat(r,":").concat(s);this.ws&&this.ws.send(c)}this.con&&(e=console).log.apply(e,[r].concat(o))}}},{key:"enabled",value:function(){return this.active||this.con}},{key:"setLevel",value:function(t){if(t)switch(t.toLowerCase()){case"trace":this.level=c.trace;break;case"debug":this.level=c.debug;break;case"info":this.level=c.info;break;case"error":this.level=c.error;break;case"warn":this.level=c.warn;break;case"fatal":this.level=c.fatal}}}])&&f(e.prototype,n),t}());l.init(),window.addEventListener("beforeunload",function(){return l.save()}),e.a=l},function(t,e,n){"use strict";n.d(e,"d",function(){return r}),n.d(e,"c",function(){return i}),n.d(e,"a",function(){return o}),n.d(e,"b",function(){return a});var r=function(){},i={MP4:"MP4",HLS:"HLS",DASH:"DASH",SMOOTH:"SMOOTH"},o={ECDN10:"10",ECDN11:"11",WEBRTC:"W"},a={Live:"live",VOD:"vod"}},function(t,e,n){var r=n(4),i=n(55).f,o=n(35),a=n(38),s=n(144),c=n(186),u=n(150);t.exports=function(t,e){var n,f,l,h,p,d=t.target,v=t.global,y=t.stat;if(n=v?r:y?r[d]||s(d,{}):(r[d]||{}).prototype)for(f in e){if(h=e[f],l=t.noTargetGet?(p=i(n,f))&&p.value:n[f],!u(v?f:d+(y?".":"#")+f,t.forced)&&void 0!==l){if(typeof h==typeof l)continue;c(h,l)}(t.sham||l&&l.sham)&&o(h,"sham",!0),a(n,f,h,t)}}},function(t,e){t.exports=function(t){try{return!!t()}catch(t){return!0}}},function(t,e,n){(function(e){var n=function(t){return t&&t.Math==Math&&t};t.exports=n("object"==typeof globalThis&&globalThis)||n("object"==typeof window&&window)||n("object"==typeof self&&self)||n("object"==typeof e&&e)||Function("return this")()}).call(this,n(6))},function(t,e){"function"==typeof Object.create?t.exports=function(t,e){e&&(t.super_=e,t.prototype=Object.create(e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}))}:t.exports=function(t,e){if(e){t.super_=e;var n=function(){};n.prototype=e.prototype,t.prototype=new n,t.prototype.constructor=t}}},function(t,e){var n;n=function(){return this}();try{n=n||new Function("return this")()}catch(t){"object"==typeof window&&(n=window)}t.exports=n},function(t,e,n){var r=n(4),i=n(146),o=n(19),a=n(93),s=n(151),c=n(189),u=i("wks"),f=r.Symbol,l=c?f:f&&f.withoutSetter||a;t.exports=function(t){return o(u,t)||(s&&o(f,t)?u[t]=f[t]:u[t]=l("Symbol."+t)),u[t]}},function(t,e,n){"use strict";var r,i=n(246),o=n(16),a=n(4),s=n(11),c=n(19),u=n(99),f=n(35),l=n(38),h=n(24).f,p=n(78),d=n(98),v=n(7),y=n(93),g=a.Int8Array,b=g&&g.prototype,m=a.Uint8ClampedArray,w=m&&m.prototype,E=g&&p(g),x=b&&p(b),T=Object.prototype,O=T.isPrototypeOf,S=v("toStringTag"),_=y("TYPED_ARRAY_TAG"),k=i&&!!d&&"Opera"!==u(a.opera),A=!1,I={Int8Array:1,Uint8Array:1,Uint8ClampedArray:1,Int16Array:2,Uint16Array:2,Int32Array:4,Uint32Array:4,Float32Array:4,Float64Array:8},C=function(t){return s(t)&&c(I,u(t))};for(r in I)a[r]||(k=!1);if((!k||"function"!=typeof E||E===Function.prototype)&&(E=function(){throw TypeError("Incorrect invocation")},k))for(r in I)a[r]&&d(a[r],E);if((!k||!x||x===T)&&(x=E.prototype,k))for(r in I)a[r]&&d(a[r].prototype,x);if(k&&p(w)!==x&&d(w,x),o&&!c(x,S))for(r in A=!0,h(x,S,{get:function(){return s(this)?this[_]:void 0}}),I)a[r]&&f(a[r],_,r);t.exports={NATIVE_ARRAY_BUFFER_VIEWS:k,TYPED_ARRAY_TAG:A&&_,aTypedArray:function(t){if(C(t))return t;throw TypeError("Target is not a typed array")},aTypedArrayConstructor:function(t){if(d){if(O.call(E,t))return t}else for(var e in I)if(c(I,r)){var n=a[e];if(n&&(t===n||O.call(n,t)))return t}throw TypeError("Target is not a typed array constructor")},exportTypedArrayMethod:function(t,e,n){if(o){if(n)for(var r in I){var i=a[r];i&&c(i.prototype,t)&&delete i.prototype[t]}x[t]&&!n||l(x,t,n?e:k&&b[t]||e)}},exportTypedArrayStaticMethod:function(t,e,n){var r,i;if(o){if(d){if(n)for(r in I)(i=a[r])&&c(i,t)&&delete i[t];if(E[t]&&!n)return;try{return l(E,t,n?e:k&&g[t]||e)}catch(t){}}for(r in I)!(i=a[r])||i[t]&&!n||l(i,t,e)}},isView:function(t){var e=u(t);return"DataView"===e||c(I,e)},isTypedArray:C,TypedArray:E,TypedArrayPrototype:x}},function(t,e,n){var r=n(155),i=n(38),o=n(263);r||i(Object.prototype,"toString",o,{unsafe:!0})},function(t,e,n){"use strict";n.d(e,"a",function(){return i});var r=function(t,e){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,e)};function i(t,e){function n(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}},function(t,e){t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},function(t,e,n){var r,i,o;i=[n(397)],void 0===(o="function"==typeof(r=function(t){"use strict";var e=function(t,n,i){if(void 0===t&&(t=e.DEFAULT_CAPACITY),void 0===n&&(n=e.DEFAULT_ENDIAN),void 0===i&&(i=e.DEFAULT_NOASSERT),!i){if((t|=0)<0)throw RangeError("Illegal capacity");n=!!n,i=!!i}this.buffer=0===t?r:new ArrayBuffer(t),this.view=0===t?null:new Uint8Array(this.buffer),this.offset=0,this.markedOffset=-1,this.limit=t,this.littleEndian=n,this.noAssert=i};e.VERSION="5.0.1",e.LITTLE_ENDIAN=!0,e.BIG_ENDIAN=!1,e.DEFAULT_CAPACITY=16,e.DEFAULT_ENDIAN=e.BIG_ENDIAN,e.DEFAULT_NOASSERT=!1,e.Long=t||null;var n=e.prototype;n.__isByteBuffer__,Object.defineProperty(n,"__isByteBuffer__",{value:!0,enumerable:!1,configurable:!1});var r=new ArrayBuffer(0),i=String.fromCharCode;function o(t){var e=0;return function(){return e<t.length?t.charCodeAt(e++):null}}function a(){var t=[],e=[];return function(){if(0===arguments.length)return e.join("")+i.apply(String,t);t.length+arguments.length>1024&&(e.push(i.apply(String,t)),t.length=0),Array.prototype.push.apply(t,arguments)}}function s(t,e,n,r,i){var o,a,s=8*i-r-1,c=(1<<s)-1,u=c>>1,f=-7,l=n?i-1:0,h=n?-1:1,p=t[e+l];for(l+=h,o=p&(1<<-f)-1,p>>=-f,f+=s;f>0;o=256*o+t[e+l],l+=h,f-=8);for(a=o&(1<<-f)-1,o>>=-f,f+=r;f>0;a=256*a+t[e+l],l+=h,f-=8);if(0===o)o=1-u;else{if(o===c)return a?NaN:1/0*(p?-1:1);a+=Math.pow(2,r),o-=u}return(p?-1:1)*a*Math.pow(2,o-r)}function c(t,e,n,r,i,o){var a,s,c,u=8*o-i-1,f=(1<<u)-1,l=f>>1,h=23===i?Math.pow(2,-24)-Math.pow(2,-77):0,p=r?0:o-1,d=r?1:-1,v=e<0||0===e&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(s=isNaN(e)?1:0,a=f):(a=Math.floor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-a))<1&&(a--,c*=2),(e+=a+l>=1?h/c:h*Math.pow(2,1-l))*c>=2&&(a++,c/=2),a+l>=f?(s=0,a=f):a+l>=1?(s=(e*c-1)*Math.pow(2,i),a+=l):(s=e*Math.pow(2,l-1)*Math.pow(2,i),a=0));i>=8;t[n+p]=255&s,p+=d,s/=256,i-=8);for(a=a<<i|s,u+=i;u>0;t[n+p]=255&a,p+=d,a/=256,u-=8);t[n+p-d]|=128*v}e.accessor=function(){return Uint8Array},e.allocate=function(t,n,r){return new e(t,n,r)},e.concat=function(t,n,r,i){"boolean"!=typeof n&&"string"==typeof n||(i=r,r=n,n=void 0);for(var o,a=0,s=0,c=t.length;s<c;++s)e.isByteBuffer(t[s])||(t[s]=e.wrap(t[s],n)),(o=t[s].limit-t[s].offset)>0&&(a+=o);if(0===a)return new e(0,r,i);var u,f=new e(a,r,i);for(s=0;s<c;)(o=(u=t[s++]).limit-u.offset)<=0||(f.view.set(u.view.subarray(u.offset,u.limit),f.offset),f.offset+=o);return f.limit=f.offset,f.offset=0,f},e.isByteBuffer=function(t){return!0===(t&&t.__isByteBuffer__)},e.type=function(){return ArrayBuffer},e.wrap=function(t,r,i,o){if("string"!=typeof r&&(o=i,i=r,r=void 0),"string"==typeof t)switch(void 0===r&&(r="utf8"),r){case"base64":return e.fromBase64(t,i);case"hex":return e.fromHex(t,i);case"binary":return e.fromBinary(t,i);case"utf8":return e.fromUTF8(t,i);case"debug":return e.fromDebug(t,i);default:throw Error("Unsupported encoding: "+r)}if(null===t||"object"!=typeof t)throw TypeError("Illegal buffer");var a;if(e.isByteBuffer(t))return(a=n.clone.call(t)).markedOffset=-1,a;if(t instanceof Uint8Array)a=new e(0,i,o),t.length>0&&(a.buffer=t.buffer,a.offset=t.byteOffset,a.limit=t.byteOffset+t.byteLength,a.view=new Uint8Array(t.buffer));else if(t instanceof ArrayBuffer)a=new e(0,i,o),t.byteLength>0&&(a.buffer=t,a.offset=0,a.limit=t.byteLength,a.view=t.byteLength>0?new Uint8Array(t):null);else{if("[object Array]"!==Object.prototype.toString.call(t))throw TypeError("Illegal buffer");(a=new e(t.length,i,o)).limit=t.length;for(var s=0;s<t.length;++s)a.view[s]=t[s]}return a},n.writeBitSet=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if(!(t instanceof Array))throw TypeError("Illegal BitSet: Not an array");if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}var r,i=e,o=t.length,a=o>>3,s=0;for(e+=this.writeVarint32(o,e);a--;)r=1&!!t[s++]|(1&!!t[s++])<<1|(1&!!t[s++])<<2|(1&!!t[s++])<<3|(1&!!t[s++])<<4|(1&!!t[s++])<<5|(1&!!t[s++])<<6|(1&!!t[s++])<<7,this.writeByte(r,e++);if(s<o){var c=0;for(r=0;s<o;)r|=(1&!!t[s++])<<c++;this.writeByte(r,e++)}return n?(this.offset=e,this):e-i},n.readBitSet=function(t){var e=void 0===t;e&&(t=this.offset);var n,r=this.readVarint32(t),i=r.value,o=i>>3,a=0,s=[];for(t+=r.length;o--;)n=this.readByte(t++),s[a++]=!!(1&n),s[a++]=!!(2&n),s[a++]=!!(4&n),s[a++]=!!(8&n),s[a++]=!!(16&n),s[a++]=!!(32&n),s[a++]=!!(64&n),s[a++]=!!(128&n);if(a<i){var c=0;for(n=this.readByte(t++);a<i;)s[a++]=!!(n>>c++&1)}return e&&(this.offset=t),s},n.readBytes=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+t>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+"+t+") <= "+this.buffer.byteLength)}var r=this.slice(e,e+t);return n&&(this.offset+=t),r},n.writeBytes=n.append,n.writeInt8=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal value: "+t+" (not an integer)");if(t|=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}e+=1;var r=this.buffer.byteLength;return e>r&&this.resize((r*=2)>e?r:e),e-=1,this.view[e]=t,n&&(this.offset+=1),this},n.writeByte=n.writeInt8,n.readInt8=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+1) <= "+this.buffer.byteLength)}var n=this.view[t];return 128==(128&n)&&(n=-(255-n+1)),e&&(this.offset+=1),n},n.readByte=n.readInt8,n.writeUint8=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal value: "+t+" (not an integer)");if(t>>>=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}e+=1;var r=this.buffer.byteLength;return e>r&&this.resize((r*=2)>e?r:e),e-=1,this.view[e]=t,n&&(this.offset+=1),this},n.writeUInt8=n.writeUint8,n.readUint8=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+1) <= "+this.buffer.byteLength)}var n=this.view[t];return e&&(this.offset+=1),n},n.readUInt8=n.readUint8,n.writeInt16=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal value: "+t+" (not an integer)");if(t|=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}e+=2;var r=this.buffer.byteLength;return e>r&&this.resize((r*=2)>e?r:e),e-=2,this.littleEndian?(this.view[e+1]=(65280&t)>>>8,this.view[e]=255&t):(this.view[e]=(65280&t)>>>8,this.view[e+1]=255&t),n&&(this.offset+=2),this},n.writeShort=n.writeInt16,n.readInt16=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+2) <= "+this.buffer.byteLength)}var n=0;return this.littleEndian?(n=this.view[t],n|=this.view[t+1]<<8):(n=this.view[t]<<8,n|=this.view[t+1]),32768==(32768&n)&&(n=-(65535-n+1)),e&&(this.offset+=2),n},n.readShort=n.readInt16,n.writeUint16=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal value: "+t+" (not an integer)");if(t>>>=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}e+=2;var r=this.buffer.byteLength;return e>r&&this.resize((r*=2)>e?r:e),e-=2,this.littleEndian?(this.view[e+1]=(65280&t)>>>8,this.view[e]=255&t):(this.view[e]=(65280&t)>>>8,this.view[e+1]=255&t),n&&(this.offset+=2),this},n.writeUInt16=n.writeUint16,n.readUint16=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+2>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+2) <= "+this.buffer.byteLength)}var n=0;return this.littleEndian?(n=this.view[t],n|=this.view[t+1]<<8):(n=this.view[t]<<8,n|=this.view[t+1]),e&&(this.offset+=2),n},n.readUInt16=n.readUint16,n.writeInt32=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal value: "+t+" (not an integer)");if(t|=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}e+=4;var r=this.buffer.byteLength;return e>r&&this.resize((r*=2)>e?r:e),e-=4,this.littleEndian?(this.view[e+3]=t>>>24&255,this.view[e+2]=t>>>16&255,this.view[e+1]=t>>>8&255,this.view[e]=255&t):(this.view[e]=t>>>24&255,this.view[e+1]=t>>>16&255,this.view[e+2]=t>>>8&255,this.view[e+3]=255&t),n&&(this.offset+=4),this},n.writeInt=n.writeInt32,n.readInt32=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+4) <= "+this.buffer.byteLength)}var n=0;return this.littleEndian?(n=this.view[t+2]<<16,n|=this.view[t+1]<<8,n|=this.view[t],n+=this.view[t+3]<<24>>>0):(n=this.view[t+1]<<16,n|=this.view[t+2]<<8,n|=this.view[t+3],n+=this.view[t]<<24>>>0),n|=0,e&&(this.offset+=4),n},n.readInt=n.readInt32,n.writeUint32=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal value: "+t+" (not an integer)");if(t>>>=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}e+=4;var r=this.buffer.byteLength;return e>r&&this.resize((r*=2)>e?r:e),e-=4,this.littleEndian?(this.view[e+3]=t>>>24&255,this.view[e+2]=t>>>16&255,this.view[e+1]=t>>>8&255,this.view[e]=255&t):(this.view[e]=t>>>24&255,this.view[e+1]=t>>>16&255,this.view[e+2]=t>>>8&255,this.view[e+3]=255&t),n&&(this.offset+=4),this},n.writeUInt32=n.writeUint32,n.readUint32=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+4) <= "+this.buffer.byteLength)}var n=0;return this.littleEndian?(n=this.view[t+2]<<16,n|=this.view[t+1]<<8,n|=this.view[t],n+=this.view[t+3]<<24>>>0):(n=this.view[t+1]<<16,n|=this.view[t+2]<<8,n|=this.view[t+3],n+=this.view[t]<<24>>>0),e&&(this.offset+=4),n},n.readUInt32=n.readUint32,t&&(n.writeInt64=function(e,n){var r=void 0===n;if(r&&(n=this.offset),!this.noAssert){if("number"==typeof e)e=t.fromNumber(e);else if("string"==typeof e)e=t.fromString(e);else if(!(e&&e instanceof t))throw TypeError("Illegal value: "+e+" (not an integer or Long)");if("number"!=typeof n||n%1!=0)throw TypeError("Illegal offset: "+n+" (not an integer)");if((n>>>=0)<0||n+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+n+" (+0) <= "+this.buffer.byteLength)}"number"==typeof e?e=t.fromNumber(e):"string"==typeof e&&(e=t.fromString(e)),n+=8;var i=this.buffer.byteLength;n>i&&this.resize((i*=2)>n?i:n),n-=8;var o=e.low,a=e.high;return this.littleEndian?(this.view[n+3]=o>>>24&255,this.view[n+2]=o>>>16&255,this.view[n+1]=o>>>8&255,this.view[n]=255&o,n+=4,this.view[n+3]=a>>>24&255,this.view[n+2]=a>>>16&255,this.view[n+1]=a>>>8&255,this.view[n]=255&a):(this.view[n]=a>>>24&255,this.view[n+1]=a>>>16&255,this.view[n+2]=a>>>8&255,this.view[n+3]=255&a,n+=4,this.view[n]=o>>>24&255,this.view[n+1]=o>>>16&255,this.view[n+2]=o>>>8&255,this.view[n+3]=255&o),r&&(this.offset+=8),this},n.writeLong=n.writeInt64,n.readInt64=function(e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+8) <= "+this.buffer.byteLength)}var r=0,i=0;this.littleEndian?(r=this.view[e+2]<<16,r|=this.view[e+1]<<8,r|=this.view[e],r+=this.view[e+3]<<24>>>0,e+=4,i=this.view[e+2]<<16,i|=this.view[e+1]<<8,i|=this.view[e],i+=this.view[e+3]<<24>>>0):(i=this.view[e+1]<<16,i|=this.view[e+2]<<8,i|=this.view[e+3],i+=this.view[e]<<24>>>0,e+=4,r=this.view[e+1]<<16,r|=this.view[e+2]<<8,r|=this.view[e+3],r+=this.view[e]<<24>>>0);var o=new t(r,i,!1);return n&&(this.offset+=8),o},n.readLong=n.readInt64,n.writeUint64=function(e,n){var r=void 0===n;if(r&&(n=this.offset),!this.noAssert){if("number"==typeof e)e=t.fromNumber(e);else if("string"==typeof e)e=t.fromString(e);else if(!(e&&e instanceof t))throw TypeError("Illegal value: "+e+" (not an integer or Long)");if("number"!=typeof n||n%1!=0)throw TypeError("Illegal offset: "+n+" (not an integer)");if((n>>>=0)<0||n+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+n+" (+0) <= "+this.buffer.byteLength)}"number"==typeof e?e=t.fromNumber(e):"string"==typeof e&&(e=t.fromString(e)),n+=8;var i=this.buffer.byteLength;n>i&&this.resize((i*=2)>n?i:n),n-=8;var o=e.low,a=e.high;return this.littleEndian?(this.view[n+3]=o>>>24&255,this.view[n+2]=o>>>16&255,this.view[n+1]=o>>>8&255,this.view[n]=255&o,n+=4,this.view[n+3]=a>>>24&255,this.view[n+2]=a>>>16&255,this.view[n+1]=a>>>8&255,this.view[n]=255&a):(this.view[n]=a>>>24&255,this.view[n+1]=a>>>16&255,this.view[n+2]=a>>>8&255,this.view[n+3]=255&a,n+=4,this.view[n]=o>>>24&255,this.view[n+1]=o>>>16&255,this.view[n+2]=o>>>8&255,this.view[n+3]=255&o),r&&(this.offset+=8),this},n.writeUInt64=n.writeUint64,n.readUint64=function(e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+8) <= "+this.buffer.byteLength)}var r=0,i=0;this.littleEndian?(r=this.view[e+2]<<16,r|=this.view[e+1]<<8,r|=this.view[e],r+=this.view[e+3]<<24>>>0,e+=4,i=this.view[e+2]<<16,i|=this.view[e+1]<<8,i|=this.view[e],i+=this.view[e+3]<<24>>>0):(i=this.view[e+1]<<16,i|=this.view[e+2]<<8,i|=this.view[e+3],i+=this.view[e]<<24>>>0,e+=4,r=this.view[e+1]<<16,r|=this.view[e+2]<<8,r|=this.view[e+3],r+=this.view[e]<<24>>>0);var o=new t(r,i,!0);return n&&(this.offset+=8),o},n.readUInt64=n.readUint64),n.writeFloat32=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof t)throw TypeError("Illegal value: "+t+" (not a number)");if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}e+=4;var r=this.buffer.byteLength;return e>r&&this.resize((r*=2)>e?r:e),e-=4,c(this.view,t,e,this.littleEndian,23,4),n&&(this.offset+=4),this},n.writeFloat=n.writeFloat32,n.readFloat32=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+4) <= "+this.buffer.byteLength)}var n=s(this.view,t,this.littleEndian,23,4);return e&&(this.offset+=4),n},n.readFloat=n.readFloat32,n.writeFloat64=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof t)throw TypeError("Illegal value: "+t+" (not a number)");if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}e+=8;var r=this.buffer.byteLength;return e>r&&this.resize((r*=2)>e?r:e),e-=8,c(this.view,t,e,this.littleEndian,52,8),n&&(this.offset+=8),this},n.writeDouble=n.writeFloat64,n.readFloat64=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+8>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+8) <= "+this.buffer.byteLength)}var n=s(this.view,t,this.littleEndian,52,8);return e&&(this.offset+=8),n},n.readDouble=n.readFloat64,e.MAX_VARINT32_BYTES=5,e.calculateVarint32=function(t){return(t>>>=0)<128?1:t<16384?2:t<1<<21?3:t<1<<28?4:5},e.zigZagEncode32=function(t){return((t|=0)<<1^t>>31)>>>0},e.zigZagDecode32=function(t){return t>>>1^-(1&t)|0},n.writeVarint32=function(t,n){var r=void 0===n;if(r&&(n=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal value: "+t+" (not an integer)");if(t|=0,"number"!=typeof n||n%1!=0)throw TypeError("Illegal offset: "+n+" (not an integer)");if((n>>>=0)<0||n+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+n+" (+0) <= "+this.buffer.byteLength)}var i,o=e.calculateVarint32(t);n+=o;var a=this.buffer.byteLength;for(n>a&&this.resize((a*=2)>n?a:n),n-=o,t>>>=0;t>=128;)i=127&t|128,this.view[n++]=i,t>>>=7;return this.view[n++]=t,r?(this.offset=n,this):o},n.writeVarint32ZigZag=function(t,n){return this.writeVarint32(e.zigZagEncode32(t),n)},n.readVarint32=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+1) <= "+this.buffer.byteLength)}var n,r=0,i=0;do{if(!this.noAssert&&t>this.limit){var o=Error("Truncated");throw o.truncated=!0,o}n=this.view[t++],r<5&&(i|=(127&n)<<7*r),++r}while(0!=(128&n));return i|=0,e?(this.offset=t,i):{value:i,length:r}},n.readVarint32ZigZag=function(t){var n=this.readVarint32(t);return"object"==typeof n?n.value=e.zigZagDecode32(n.value):n=e.zigZagDecode32(n),n},t&&(e.MAX_VARINT64_BYTES=10,e.calculateVarint64=function(e){"number"==typeof e?e=t.fromNumber(e):"string"==typeof e&&(e=t.fromString(e));var n=e.toInt()>>>0,r=e.shiftRightUnsigned(28).toInt()>>>0,i=e.shiftRightUnsigned(56).toInt()>>>0;return 0==i?0==r?n<16384?n<128?1:2:n<1<<21?3:4:r<16384?r<128?5:6:r<1<<21?7:8:i<128?9:10},e.zigZagEncode64=function(e){return"number"==typeof e?e=t.fromNumber(e,!1):"string"==typeof e?e=t.fromString(e,!1):!1!==e.unsigned&&(e=e.toSigned()),e.shiftLeft(1).xor(e.shiftRight(63)).toUnsigned()},e.zigZagDecode64=function(e){return"number"==typeof e?e=t.fromNumber(e,!1):"string"==typeof e?e=t.fromString(e,!1):!1!==e.unsigned&&(e=e.toSigned()),e.shiftRightUnsigned(1).xor(e.and(t.ONE).toSigned().negate()).toSigned()},n.writeVarint64=function(n,r){var i=void 0===r;if(i&&(r=this.offset),!this.noAssert){if("number"==typeof n)n=t.fromNumber(n);else if("string"==typeof n)n=t.fromString(n);else if(!(n&&n instanceof t))throw TypeError("Illegal value: "+n+" (not an integer or Long)");if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}"number"==typeof n?n=t.fromNumber(n,!1):"string"==typeof n?n=t.fromString(n,!1):!1!==n.unsigned&&(n=n.toSigned());var o=e.calculateVarint64(n),a=n.toInt()>>>0,s=n.shiftRightUnsigned(28).toInt()>>>0,c=n.shiftRightUnsigned(56).toInt()>>>0;r+=o;var u=this.buffer.byteLength;switch(r>u&&this.resize((u*=2)>r?u:r),r-=o,o){case 10:this.view[r+9]=c>>>7&1;case 9:this.view[r+8]=9!==o?128|c:127&c;case 8:this.view[r+7]=8!==o?s>>>21|128:s>>>21&127;case 7:this.view[r+6]=7!==o?s>>>14|128:s>>>14&127;case 6:this.view[r+5]=6!==o?s>>>7|128:s>>>7&127;case 5:this.view[r+4]=5!==o?128|s:127&s;case 4:this.view[r+3]=4!==o?a>>>21|128:a>>>21&127;case 3:this.view[r+2]=3!==o?a>>>14|128:a>>>14&127;case 2:this.view[r+1]=2!==o?a>>>7|128:a>>>7&127;case 1:this.view[r]=1!==o?128|a:127&a}return i?(this.offset+=o,this):o},n.writeVarint64ZigZag=function(t,n){return this.writeVarint64(e.zigZagEncode64(t),n)},n.readVarint64=function(e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+1) <= "+this.buffer.byteLength)}var r=e,i=0,o=0,a=0,s=0;if(i=127&(s=this.view[e++]),128&s&&(i|=(127&(s=this.view[e++]))<<7,(128&s||this.noAssert&&void 0===s)&&(i|=(127&(s=this.view[e++]))<<14,(128&s||this.noAssert&&void 0===s)&&(i|=(127&(s=this.view[e++]))<<21,(128&s||this.noAssert&&void 0===s)&&(o=127&(s=this.view[e++]),(128&s||this.noAssert&&void 0===s)&&(o|=(127&(s=this.view[e++]))<<7,(128&s||this.noAssert&&void 0===s)&&(o|=(127&(s=this.view[e++]))<<14,(128&s||this.noAssert&&void 0===s)&&(o|=(127&(s=this.view[e++]))<<21,(128&s||this.noAssert&&void 0===s)&&(a=127&(s=this.view[e++]),(128&s||this.noAssert&&void 0===s)&&(a|=(127&(s=this.view[e++]))<<7,128&s||this.noAssert&&void 0===s))))))))))throw Error("Buffer overrun");var c=t.fromBits(i|o<<28,o>>>4|a<<24,!1);return n?(this.offset=e,c):{value:c,length:e-r}},n.readVarint64ZigZag=function(n){var r=this.readVarint64(n);return r&&r.value instanceof t?r.value=e.zigZagDecode64(r.value):r=e.zigZagDecode64(r),r}),n.writeCString=function(t,e){var n=void 0===e;n&&(e=this.offset);var r,i=t.length;if(!this.noAssert){if("string"!=typeof t)throw TypeError("Illegal str: Not a string");for(r=0;r<i;++r)if(0===t.charCodeAt(r))throw RangeError("Illegal str: Contains NULL-characters");if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}i=f.calculateUTF16asUTF8(o(t))[1],e+=i+1;var a=this.buffer.byteLength;return e>a&&this.resize((a*=2)>e?a:e),e-=i+1,f.encodeUTF16toUTF8(o(t),function(t){this.view[e++]=t}.bind(this)),this.view[e++]=0,n?(this.offset=e,this):i},n.readCString=function(t){var e=void 0===t;if(e&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+1) <= "+this.buffer.byteLength)}var n,r=t,i=-1;return f.decodeUTF8toUTF16(function(){if(0===i)return null;if(t>=this.limit)throw RangeError("Illegal range: Truncated data, "+t+" < "+this.limit);return 0===(i=this.view[t++])?null:i}.bind(this),n=a(),!0),e?(this.offset=t,n()):{string:n(),length:t-r}},n.writeIString=function(t,e){var n=void 0===e;if(n&&(e=this.offset),!this.noAssert){if("string"!=typeof t)throw TypeError("Illegal str: Not a string");if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}var r,i=e;r=f.calculateUTF16asUTF8(o(t),this.noAssert)[1],e+=4+r;var a=this.buffer.byteLength;if(e>a&&this.resize((a*=2)>e?a:e),e-=4+r,this.littleEndian?(this.view[e+3]=r>>>24&255,this.view[e+2]=r>>>16&255,this.view[e+1]=r>>>8&255,this.view[e]=255&r):(this.view[e]=r>>>24&255,this.view[e+1]=r>>>16&255,this.view[e+2]=r>>>8&255,this.view[e+3]=255&r),e+=4,f.encodeUTF16toUTF8(o(t),function(t){this.view[e++]=t}.bind(this)),e!==i+4+r)throw RangeError("Illegal range: Truncated data, "+e+" == "+(e+4+r));return n?(this.offset=e,this):e-i},n.readIString=function(t){var n=void 0===t;if(n&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+4>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+4) <= "+this.buffer.byteLength)}var r=t,i=this.readUint32(t),o=this.readUTF8String(i,e.METRICS_BYTES,t+=4);return t+=o.length,n?(this.offset=t,o.string):{string:o.string,length:t-r}},e.METRICS_CHARS="c",e.METRICS_BYTES="b",n.writeUTF8String=function(t,e){var n,r=void 0===e;if(r&&(e=this.offset),!this.noAssert){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: "+e+" (not an integer)");if((e>>>=0)<0||e+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+e+" (+0) <= "+this.buffer.byteLength)}var i=e;n=f.calculateUTF16asUTF8(o(t))[1],e+=n;var a=this.buffer.byteLength;return e>a&&this.resize((a*=2)>e?a:e),e-=n,f.encodeUTF16toUTF8(o(t),function(t){this.view[e++]=t}.bind(this)),r?(this.offset=e,this):e-i},n.writeString=n.writeUTF8String,e.calculateUTF8Chars=function(t){return f.calculateUTF16asUTF8(o(t))[0]},e.calculateUTF8Bytes=function(t){return f.calculateUTF16asUTF8(o(t))[1]},e.calculateString=e.calculateUTF8Bytes,n.readUTF8String=function(t,n,r){"number"==typeof n&&(r=n,n=void 0);var i=void 0===r;if(i&&(r=this.offset),void 0===n&&(n=e.METRICS_CHARS),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal length: "+t+" (not an integer)");if(t|=0,"number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}var o,s=0,c=r;if(n===e.METRICS_CHARS){if(o=a(),f.decodeUTF8(function(){return s<t&&r<this.limit?this.view[r++]:null}.bind(this),function(t){++s,f.UTF8toUTF16(t,o)}),s!==t)throw RangeError("Illegal range: Truncated data, "+s+" == "+t);return i?(this.offset=r,o()):{string:o(),length:r-c}}if(n===e.METRICS_BYTES){if(!this.noAssert){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+t>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+"+t+") <= "+this.buffer.byteLength)}var u=r+t;if(f.decodeUTF8toUTF16(function(){return r<u?this.view[r++]:null}.bind(this),o=a(),this.noAssert),r!==u)throw RangeError("Illegal range: Truncated data, "+r+" == "+u);return i?(this.offset=r,o()):{string:o(),length:r-c}}throw TypeError("Unsupported metrics: "+n)},n.readString=n.readUTF8String,n.writeVString=function(t,n){var r=void 0===n;if(r&&(n=this.offset),!this.noAssert){if("string"!=typeof t)throw TypeError("Illegal str: Not a string");if("number"!=typeof n||n%1!=0)throw TypeError("Illegal offset: "+n+" (not an integer)");if((n>>>=0)<0||n+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+n+" (+0) <= "+this.buffer.byteLength)}var i,a,s=n;i=f.calculateUTF16asUTF8(o(t),this.noAssert)[1],a=e.calculateVarint32(i),n+=a+i;var c=this.buffer.byteLength;if(n>c&&this.resize((c*=2)>n?c:n),n-=a+i,n+=this.writeVarint32(i,n),f.encodeUTF16toUTF8(o(t),function(t){this.view[n++]=t}.bind(this)),n!==s+i+a)throw RangeError("Illegal range: Truncated data, "+n+" == "+(n+i+a));return r?(this.offset=n,this):n-s},n.readVString=function(t){var n=void 0===t;if(n&&(t=this.offset),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+1>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+1) <= "+this.buffer.byteLength)}var r=t,i=this.readVarint32(t),o=this.readUTF8String(i.value,e.METRICS_BYTES,t+=i.length);return t+=o.length,n?(this.offset=t,o.string):{string:o.string,length:t-r}},n.append=function(t,n,r){"number"!=typeof n&&"string"==typeof n||(r=n,n=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.noAssert){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}t instanceof e||(t=e.wrap(t,n));var o=t.limit-t.offset;if(o<=0)return this;r+=o;var a=this.buffer.byteLength;return r>a&&this.resize((a*=2)>r?a:r),r-=o,this.view.set(t.view.subarray(t.offset,t.limit),r),t.offset+=o,i&&(this.offset+=o),this},n.appendTo=function(t,e){return t.append(this,e),this},n.assert=function(t){return this.noAssert=!t,this},n.capacity=function(){return this.buffer.byteLength},n.clear=function(){return this.offset=0,this.limit=this.buffer.byteLength,this.markedOffset=-1,this},n.clone=function(t){var n=new e(0,this.littleEndian,this.noAssert);return t?(n.buffer=new ArrayBuffer(this.buffer.byteLength),n.view=new Uint8Array(n.buffer)):(n.buffer=this.buffer,n.view=this.view),n.offset=this.offset,n.markedOffset=this.markedOffset,n.limit=this.limit,n},n.compact=function(t,e){if(void 0===t&&(t=this.offset),void 0===e&&(e=this.limit),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal end: Not an integer");if(e>>>=0,t<0||t>e||e>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+e+" <= "+this.buffer.byteLength)}if(0===t&&e===this.buffer.byteLength)return this;var n=e-t;if(0===n)return this.buffer=r,this.view=null,this.markedOffset>=0&&(this.markedOffset-=t),this.offset=0,this.limit=0,this;var i=new ArrayBuffer(n),o=new Uint8Array(i);return o.set(this.view.subarray(t,e)),this.buffer=i,this.view=o,this.markedOffset>=0&&(this.markedOffset-=t),this.offset=0,this.limit=n,this},n.copy=function(t,n){if(void 0===t&&(t=this.offset),void 0===n&&(n=this.limit),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof n||n%1!=0)throw TypeError("Illegal end: Not an integer");if(n>>>=0,t<0||t>n||n>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+n+" <= "+this.buffer.byteLength)}if(t===n)return new e(0,this.littleEndian,this.noAssert);var r=n-t,i=new e(r,this.littleEndian,this.noAssert);return i.offset=0,i.limit=r,i.markedOffset>=0&&(i.markedOffset-=t),this.copyTo(i,0,t,n),i},n.copyTo=function(t,n,r,i){var o,a;if(!this.noAssert&&!e.isByteBuffer(t))throw TypeError("Illegal target: Not a ByteBuffer");if(n=(a=void 0===n)?t.offset:0|n,r=(o=void 0===r)?this.offset:0|r,i=void 0===i?this.limit:0|i,n<0||n>t.buffer.byteLength)throw RangeError("Illegal target range: 0 <= "+n+" <= "+t.buffer.byteLength);if(r<0||i>this.buffer.byteLength)throw RangeError("Illegal source range: 0 <= "+r+" <= "+this.buffer.byteLength);var s=i-r;return 0===s?t:(t.ensureCapacity(n+s),t.view.set(this.view.subarray(r,i),n),o&&(this.offset+=s),a&&(t.offset+=s),this)},n.ensureCapacity=function(t){var e=this.buffer.byteLength;return e<t?this.resize((e*=2)>t?e:t):this},n.fill=function(t,e,n){var r=void 0===e;if(r&&(e=this.offset),"string"==typeof t&&t.length>0&&(t=t.charCodeAt(0)),void 0===e&&(e=this.offset),void 0===n&&(n=this.limit),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal value: "+t+" (not an integer)");if(t|=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal begin: Not an integer");if(e>>>=0,"number"!=typeof n||n%1!=0)throw TypeError("Illegal end: Not an integer");if(n>>>=0,e<0||e>n||n>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+n+" <= "+this.buffer.byteLength)}if(e>=n)return this;for(;e<n;)this.view[e++]=t;return r&&(this.offset=e),this},n.flip=function(){return this.limit=this.offset,this.offset=0,this},n.mark=function(t){if(t=void 0===t?this.offset:t,!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal offset: "+t+" (not an integer)");if((t>>>=0)<0||t+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+t+" (+0) <= "+this.buffer.byteLength)}return this.markedOffset=t,this},n.order=function(t){if(!this.noAssert&&"boolean"!=typeof t)throw TypeError("Illegal littleEndian: Not a boolean");return this.littleEndian=!!t,this},n.LE=function(t){return this.littleEndian=void 0===t||!!t,this},n.BE=function(t){return this.littleEndian=void 0!==t&&!t,this},n.prepend=function(t,n,r){"number"!=typeof n&&"string"==typeof n||(r=n,n=void 0);var i=void 0===r;if(i&&(r=this.offset),!this.noAssert){if("number"!=typeof r||r%1!=0)throw TypeError("Illegal offset: "+r+" (not an integer)");if((r>>>=0)<0||r+0>this.buffer.byteLength)throw RangeError("Illegal offset: 0 <= "+r+" (+0) <= "+this.buffer.byteLength)}t instanceof e||(t=e.wrap(t,n));var o=t.limit-t.offset;if(o<=0)return this;var a=o-r;if(a>0){var s=new ArrayBuffer(this.buffer.byteLength+a),c=new Uint8Array(s);c.set(this.view.subarray(r,this.buffer.byteLength),o),this.buffer=s,this.view=c,this.offset+=a,this.markedOffset>=0&&(this.markedOffset+=a),this.limit+=a,r+=a}else new Uint8Array(this.buffer);return this.view.set(t.view.subarray(t.offset,t.limit),r-o),t.offset=t.limit,i&&(this.offset-=o),this},n.prependTo=function(t,e){return t.prepend(this,e),this},n.printDebug=function(t){"function"!=typeof t&&(t=console.log.bind(console)),t(this.toString()+"\n-------------------------------------------------------------------\n"+this.toDebug(!0))},n.remaining=function(){return this.limit-this.offset},n.reset=function(){return this.markedOffset>=0?(this.offset=this.markedOffset,this.markedOffset=-1):this.offset=0,this},n.resize=function(t){if(!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal capacity: "+t+" (not an integer)");if((t|=0)<0)throw RangeError("Illegal capacity: 0 <= "+t)}if(this.buffer.byteLength<t){var e=new ArrayBuffer(t),n=new Uint8Array(e);n.set(this.view),this.buffer=e,this.view=n}return this},n.reverse=function(t,e){if(void 0===t&&(t=this.offset),void 0===e&&(e=this.limit),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal end: Not an integer");if(e>>>=0,t<0||t>e||e>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+e+" <= "+this.buffer.byteLength)}return t===e?this:(Array.prototype.reverse.call(this.view.subarray(t,e)),this)},n.skip=function(t){if(!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal length: "+t+" (not an integer)");t|=0}var e=this.offset+t;if(!this.noAssert&&(e<0||e>this.buffer.byteLength))throw RangeError("Illegal length: 0 <= "+this.offset+" + "+t+" <= "+this.buffer.byteLength);return this.offset=e,this},n.slice=function(t,e){if(void 0===t&&(t=this.offset),void 0===e&&(e=this.limit),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal end: Not an integer");if(e>>>=0,t<0||t>e||e>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+e+" <= "+this.buffer.byteLength)}var n=this.clone();return n.offset=t,n.limit=e,n},n.toBuffer=function(t){var e=this.offset,n=this.limit;if(!this.noAssert){if("number"!=typeof e||e%1!=0)throw TypeError("Illegal offset: Not an integer");if(e>>>=0,"number"!=typeof n||n%1!=0)throw TypeError("Illegal limit: Not an integer");if(n>>>=0,e<0||e>n||n>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+e+" <= "+n+" <= "+this.buffer.byteLength)}if(!t&&0===e&&n===this.buffer.byteLength)return this.buffer;if(e===n)return r;var i=new ArrayBuffer(n-e);return new Uint8Array(i).set(new Uint8Array(this.buffer).subarray(e,n),0),i},n.toArrayBuffer=n.toBuffer,n.toString=function(t,e,n){if(void 0===t)return"ByteBufferAB(offset="+this.offset+",markedOffset="+this.markedOffset+",limit="+this.limit+",capacity="+this.capacity()+")";switch("number"==typeof t&&(n=e=t="utf8"),t){case"utf8":return this.toUTF8(e,n);case"base64":return this.toBase64(e,n);case"hex":return this.toHex(e,n);case"binary":return this.toBinary(e,n);case"debug":return this.toDebug();case"columns":return this.toColumns();default:throw Error("Unsupported encoding: "+t)}};var u=function(){for(var t={},e=[65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,48,49,50,51,52,53,54,55,56,57,43,47],n=[],r=0,i=e.length;r<i;++r)n[e[r]]=r;return t.encode=function(t,n){for(var r,i;null!==(r=t());)n(e[r>>2&63]),i=(3&r)<<4,null!==(r=t())?(n(e[63&((i|=r>>4&15)|r>>4&15)]),i=(15&r)<<2,null!==(r=t())?(n(e[63&(i|r>>6&3)]),n(e[63&r])):(n(e[63&i]),n(61))):(n(e[63&i]),n(61),n(61))},t.decode=function(t,e){var r,i,o;function a(t){throw Error("Illegal character code: "+t)}for(;null!==(r=t());)if(void 0===(i=n[r])&&a(r),null!==(r=t())&&(void 0===(o=n[r])&&a(r),e(i<<2>>>0|(48&o)>>4),null!==(r=t()))){if(void 0===(i=n[r])){if(61===r)break;a(r)}if(e((15&o)<<4>>>0|(60&i)>>2),null!==(r=t())){if(void 0===(o=n[r])){if(61===r)break;a(r)}e((3&i)<<6>>>0|o)}}},t.test=function(t){return/^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(t)},t}();n.toBase64=function(t,e){if(void 0===t&&(t=this.offset),void 0===e&&(e=this.limit),e|=0,(t|=0)<0||e>this.capacity||t>e)throw RangeError("begin, end");var n;return u.encode(function(){return t<e?this.view[t++]:null}.bind(this),n=a()),n()},e.fromBase64=function(t,n){if("string"!=typeof t)throw TypeError("str");var r=new e(t.length/4*3,n),i=0;return u.decode(o(t),function(t){r.view[i++]=t}),r.limit=i,r},e.btoa=function(t){return e.fromBinary(t).toBase64()},e.atob=function(t){return e.fromBase64(t).toBinary()},n.toBinary=function(t,e){if(void 0===t&&(t=this.offset),void 0===e&&(e=this.limit),e|=0,(t|=0)<0||e>this.capacity()||t>e)throw RangeError("begin, end");if(t===e)return"";for(var n=[],r=[];t<e;)n.push(this.view[t++]),n.length>=1024&&(r.push(String.fromCharCode.apply(String,n)),n=[]);return r.join("")+String.fromCharCode.apply(String,n)},e.fromBinary=function(t,n){if("string"!=typeof t)throw TypeError("str");for(var r,i=0,o=t.length,a=new e(o,n);i<o;){if((r=t.charCodeAt(i))>255)throw RangeError("illegal char code: "+r);a.view[i++]=r}return a.limit=o,a},n.toDebug=function(t){for(var e,n=-1,r=this.buffer.byteLength,i="",o="",a="";n<r;){if(-1!==n&&(i+=(e=this.view[n])<16?"0"+e.toString(16).toUpperCase():e.toString(16).toUpperCase(),t&&(o+=e>32&&e<127?String.fromCharCode(e):".")),++n,t&&n>0&&n%16==0&&n!==r){for(;i.length<51;)i+=" ";a+=i+o+"\n",i=o=""}n===this.offset&&n===this.limit?i+=n===this.markedOffset?"!":"|":n===this.offset?i+=n===this.markedOffset?"[":"<":n===this.limit?i+=n===this.markedOffset?"]":">":i+=n===this.markedOffset?"'":t||0!==n&&n!==r?" ":""}if(t&&" "!==i){for(;i.length<51;)i+=" ";a+=i+o+"\n"}return t?a:i},e.fromDebug=function(t,n,r){for(var i,o,a=t.length,s=new e((a+1)/3|0,n,r),c=0,u=0,f=!1,l=!1,h=!1,p=!1,d=!1;c<a;){switch(i=t.charAt(c++)){case"!":if(!r){if(l||h||p){d=!0;break}l=h=p=!0}s.offset=s.markedOffset=s.limit=u,f=!1;break;case"|":if(!r){if(l||p){d=!0;break}l=p=!0}s.offset=s.limit=u,f=!1;break;case"[":if(!r){if(l||h){d=!0;break}l=h=!0}s.offset=s.markedOffset=u,f=!1;break;case"<":if(!r){if(l){d=!0;break}l=!0}s.offset=u,f=!1;break;case"]":if(!r){if(p||h){d=!0;break}p=h=!0}s.limit=s.markedOffset=u,f=!1;break;case">":if(!r){if(p){d=!0;break}p=!0}s.limit=u,f=!1;break;case"'":if(!r){if(h){d=!0;break}h=!0}s.markedOffset=u,f=!1;break;case" ":f=!1;break;default:if(!r&&f){d=!0;break}if(o=parseInt(i+t.charAt(c++),16),!r&&(isNaN(o)||o<0||o>255))throw TypeError("Illegal str: Not a debug encoded string");s.view[u++]=o,f=!0}if(d)throw TypeError("Illegal str: Invalid symbol at "+c)}if(!r){if(!l||!p)throw TypeError("Illegal str: Missing offset or limit");if(u<s.buffer.byteLength)throw TypeError("Illegal str: Not a debug encoded string (is it hex?) "+u+" < "+a)}return s},n.toHex=function(t,e){if(t=void 0===t?this.offset:t,e=void 0===e?this.limit:e,!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal end: Not an integer");if(e>>>=0,t<0||t>e||e>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+e+" <= "+this.buffer.byteLength)}for(var n,r=new Array(e-t);t<e;)(n=this.view[t++])<16?r.push("0",n.toString(16)):r.push(n.toString(16));return r.join("")},e.fromHex=function(t,n,r){if(!r){if("string"!=typeof t)throw TypeError("Illegal str: Not a string");if(t.length%2!=0)throw TypeError("Illegal str: Length not a multiple of 2")}for(var i,o=t.length,a=new e(o/2|0,n),s=0,c=0;s<o;s+=2){if(i=parseInt(t.substring(s,s+2),16),!r&&(!isFinite(i)||i<0||i>255))throw TypeError("Illegal str: Contains non-hex characters");a.view[c++]=i}return a.limit=c,a};var f=function(){var t={MAX_CODEPOINT:1114111,encodeUTF8:function(t,e){var n=null;for("number"==typeof t&&(n=t,t=function(){return null});null!==n||null!==(n=t());)n<128?e(127&n):n<2048?(e(n>>6&31|192),e(63&n|128)):n<65536?(e(n>>12&15|224),e(n>>6&63|128),e(63&n|128)):(e(n>>18&7|240),e(n>>12&63|128),e(n>>6&63|128),e(63&n|128)),n=null},decodeUTF8:function(t,e){for(var n,r,i,o,a=function(t){t=t.slice(0,t.indexOf(null));var e=Error(t.toString());throw e.name="TruncatedError",e.bytes=t,e};null!==(n=t());)if(0==(128&n))e(n);else if(192==(224&n))null===(r=t())&&a([n,r]),e((31&n)<<6|63&r);else if(224==(240&n))(null===(r=t())||null===(i=t()))&&a([n,r,i]),e((15&n)<<12|(63&r)<<6|63&i);else{if(240!=(248&n))throw RangeError("Illegal starting byte: "+n);(null===(r=t())||null===(i=t())||null===(o=t()))&&a([n,r,i,o]),e((7&n)<<18|(63&r)<<12|(63&i)<<6|63&o)}},UTF16toUTF8:function(t,e){for(var n,r=null;null!==(n=null!==r?r:t());)n>=55296&&n<=57343&&null!==(r=t())&&r>=56320&&r<=57343?(e(1024*(n-55296)+r-56320+65536),r=null):e(n);null!==r&&e(r)},UTF8toUTF16:function(t,e){var n=null;for("number"==typeof t&&(n=t,t=function(){return null});null!==n||null!==(n=t());)n<=65535?e(n):(e(55296+((n-=65536)>>10)),e(n%1024+56320)),n=null},encodeUTF16toUTF8:function(e,n){t.UTF16toUTF8(e,function(e){t.encodeUTF8(e,n)})},decodeUTF8toUTF16:function(e,n){t.decodeUTF8(e,function(e){t.UTF8toUTF16(e,n)})},calculateCodePoint:function(t){return t<128?1:t<2048?2:t<65536?3:4},calculateUTF8:function(t){for(var e,n=0;null!==(e=t());)n+=e<128?1:e<2048?2:e<65536?3:4;return n},calculateUTF16asUTF8:function(e){var n=0,r=0;return t.UTF16toUTF8(e,function(t){++n,r+=t<128?1:t<2048?2:t<65536?3:4}),[n,r]}};return t}();return n.toUTF8=function(t,e){if(void 0===t&&(t=this.offset),void 0===e&&(e=this.limit),!this.noAssert){if("number"!=typeof t||t%1!=0)throw TypeError("Illegal begin: Not an integer");if(t>>>=0,"number"!=typeof e||e%1!=0)throw TypeError("Illegal end: Not an integer");if(e>>>=0,t<0||t>e||e>this.buffer.byteLength)throw RangeError("Illegal range: 0 <= "+t+" <= "+e+" <= "+this.buffer.byteLength)}var n;try{f.decodeUTF8toUTF16(function(){return t<e?this.view[t++]:null}.bind(this),n=a())}catch(n){if(t!==e)throw RangeError("Illegal range: Truncated data, "+t+" != "+e)}return n()},e.fromUTF8=function(t,n,r){if(!r&&"string"!=typeof t)throw TypeError("Illegal str: Not a string");var i=new e(f.calculateUTF16asUTF8(o(t),!0)[1],n,r),a=0;return f.encodeUTF16toUTF8(o(t),function(t){i.view[a++]=t}),i.limit=a,i},e})?r.apply(e,i):r)||(t.exports=o)},function(t,e,n){"use strict";var r=n(2),i=n(4),o=n(57),a=n(76),s=n(16),c=n(151),u=n(189),f=n(3),l=n(19),h=n(111),p=n(11),d=n(17),v=n(36),y=n(41),g=n(92),b=n(64),m=n(66),w=n(112),E=n(95),x=n(192),T=n(149),O=n(55),S=n(24),_=n(142),k=n(35),A=n(38),I=n(146),C=n(110),j=n(94),P=n(93),R=n(7),L=n(193),N=n(194),D=n(58),U=n(44),M=n(37).forEach,B=C("hidden"),F=R("toPrimitive"),H=U.set,z=U.getterFor("Symbol"),q=Object.prototype,G=i.Symbol,$=o("JSON","stringify"),V=O.f,W=S.f,Y=x.f,J=_.f,Z=I("symbols"),K=I("op-symbols"),X=I("string-to-symbol-registry"),Q=I("symbol-to-string-registry"),tt=I("wks"),et=i.QObject,nt=!et||!et.prototype||!et.prototype.findChild,rt=s&&f(function(){return 7!=m(W({},"a",{get:function(){return W(this,"a",{value:7}).a}})).a})?function(t,e,n){var r=V(q,e);r&&delete q[e],W(t,e,n),r&&t!==q&&W(q,e,r)}:W,it=function(t,e){var n=Z[t]=m(G.prototype);return H(n,{type:"Symbol",tag:t,description:e}),s||(n.description=e),n},ot=u?function(t){return"symbol"==typeof t}:function(t){return Object(t)instanceof G},at=function(t,e,n){t===q&&at(K,e,n),d(t);var r=g(e,!0);return d(n),l(Z,r)?(n.enumerable?(l(t,B)&&t[B][r]&&(t[B][r]=!1),n=m(n,{enumerable:b(0,!1)})):(l(t,B)||W(t,B,b(1,{})),t[B][r]=!0),rt(t,r,n)):W(t,r,n)},st=function(t,e){d(t);var n=y(e),r=w(n).concat(lt(n));return M(r,function(e){s&&!ct.call(n,e)||at(t,e,n[e])}),t},ct=function(t){var e=g(t,!0),n=J.call(this,e);return!(this===q&&l(Z,e)&&!l(K,e))&&(!(n||!l(this,e)||!l(Z,e)||l(this,B)&&this[B][e])||n)},ut=function(t,e){var n=y(t),r=g(e,!0);if(n!==q||!l(Z,r)||l(K,r)){var i=V(n,r);return!i||!l(Z,r)||l(n,B)&&n[B][r]||(i.enumerable=!0),i}},ft=function(t){var e=Y(y(t)),n=[];return M(e,function(t){l(Z,t)||l(j,t)||n.push(t)}),n},lt=function(t){var e=t===q,n=Y(e?K:y(t)),r=[];return M(n,function(t){!l(Z,t)||e&&!l(q,t)||r.push(Z[t])}),r};c||(A((G=function(){if(this instanceof G)throw TypeError("Symbol is not a constructor");var t=arguments.length&&void 0!==arguments[0]?String(arguments[0]):void 0,e=P(t),n=function(t){this===q&&n.call(K,t),l(this,B)&&l(this[B],e)&&(this[B][e]=!1),rt(this,e,b(1,t))};return s&&nt&&rt(q,e,{configurable:!0,set:n}),it(e,t)}).prototype,"toString",function(){return z(this).tag}),A(G,"withoutSetter",function(t){return it(P(t),t)}),_.f=ct,S.f=at,O.f=ut,E.f=x.f=ft,T.f=lt,L.f=function(t){return it(R(t),t)},s&&(W(G.prototype,"description",{configurable:!0,get:function(){return z(this).description}}),a||A(q,"propertyIsEnumerable",ct,{unsafe:!0}))),r({global:!0,wrap:!0,forced:!c,sham:!c},{Symbol:G}),M(w(tt),function(t){N(t)}),r({target:"Symbol",stat:!0,forced:!c},{for:function(t){var e=String(t);if(l(X,e))return X[e];var n=G(e);return X[e]=n,Q[n]=e,n},keyFor:function(t){if(!ot(t))throw TypeError(t+" is not a symbol");if(l(Q,t))return Q[t]},useSetter:function(){nt=!0},useSimple:function(){nt=!1}}),r({target:"Object",stat:!0,forced:!c,sham:!s},{create:function(t,e){return void 0===e?m(t):st(m(t),e)},defineProperty:at,defineProperties:st,getOwnPropertyDescriptor:ut}),r({target:"Object",stat:!0,forced:!c},{getOwnPropertyNames:ft,getOwnPropertySymbols:lt}),r({target:"Object",stat:!0,forced:f(function(){T.f(1)})},{getOwnPropertySymbols:function(t){return T.f(v(t))}}),$&&r({target:"JSON",stat:!0,forced:!c||f(function(){var t=G();return"[null]"!=$([t])||"{}"!=$({a:t})||"{}"!=$(Object(t))})},{stringify:function(t,e,n){for(var r,i=[t],o=1;arguments.length>o;)i.push(arguments[o++]);if(r=e,(p(e)||void 0!==t)&&!ot(t))return h(e)||(e=function(t,e){if("function"==typeof r&&(e=r.call(this,t,e)),!ot(e))return e}),i[1]=e,$.apply(null,i)}}),G.prototype[F]||k(G.prototype,F,G.prototype.valueOf),D(G,"Symbol"),j[B]=!0},function(t,e,n){"use strict";var r=n(41),i=n(152),o=n(97),a=n(44),s=n(153),c=a.set,u=a.getterFor("Array Iterator");t.exports=s(Array,"Array",function(t,e){c(this,{type:"Array Iterator",target:r(t),index:0,kind:e})},function(){var t=u(this),e=t.target,n=t.kind,r=t.index++;return!e||r>=e.length?(t.target=void 0,{value:void 0,done:!0}):"keys"==n?{value:r,done:!1}:"values"==n?{value:e[r],done:!1}:{value:[r,e[r]],done:!1}},"values"),o.Arguments=o.Array,i("keys"),i("values"),i("entries")},function(t,e,n){"use strict";var r=n(2),i=n(205);r({target:"Array",proto:!0,forced:[].forEach!=i},{forEach:i})},function(t,e,n){var r=n(3);t.exports=!r(function(){return 7!=Object.defineProperty({},1,{get:function(){return 7}})[1]})},function(t,e,n){var r=n(11);t.exports=function(t){if(!r(t))throw TypeError(String(t)+" is not an object");return t}},function(t,e,n){var r=n(4),i=n(203),o=n(205),a=n(35);for(var s in i){var c=r[s],u=c&&c.prototype;if(u&&u.forEach!==o)try{a(u,"forEach",o)}catch(t){u.forEach=o}}},function(t,e){var n={}.hasOwnProperty;t.exports=function(t,e){return n.call(t,e)}},function(t,e,n){var r=n(65),i=Math.min;t.exports=function(t){return t>0?i(r(t),9007199254740991):0}},function(t,e,n){"use strict";var r=n(160).charAt,i=n(44),o=n(153),a=i.set,s=i.getterFor("String Iterator");o(String,"String",function(t){a(this,{type:"String Iterator",string:String(t),index:0})},function(){var t,e=s(this),n=e.string,i=e.index;return i>=n.length?{value:void 0,done:!0}:(t=r(n,i),e.index+=t.length,{value:t,done:!1})})},function(t,e,n){"use strict";var r=n(2),i=n(37).filter,o=n(117),a=n(49),s=o("filter"),c=a("filter");r({target:"Array",proto:!0,forced:!s||!c},{filter:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){"use strict";function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function i(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}n(13),n(47),n(48),n(14),n(9),n(269),n(270),n(271),n(71),n(21),n(26),e.a=function(t){if(!t)throw Error('autobind: "context" argument not specified');var e=!0,n=!1,o=void 0;try{for(var a,s=function(t){var e=[];do{var n=!0,r=!1,i=void 0;try{for(var o,a=Reflect.ownKeys(t)[Symbol.iterator]();!(n=(o=a.next()).done);n=!0){var s=o.value;e.push([t,s])}}catch(t){r=!0,i=t}finally{try{n||null==a.return||a.return()}finally{if(r)throw i}}}while((t=Reflect.getPrototypeOf(t))&&t!==Object.prototype);return e}(t.constructor.prototype)[Symbol.iterator]();!(e=(a=s.next()).done);e=!0){var c=i(a.value,2),u=c[0],f=c[1];if("constructor"!==f){var l=Reflect.getOwnPropertyDescriptor(u,f);l&&"function"===r(l.value)&&(t[f]=t[f].bind(t))}}}catch(t){n=!0,o=t}finally{try{e||null==s.return||s.return()}finally{if(n)throw o}}return t}},function(t,e,n){var r=n(16),i=n(184),o=n(17),a=n(92),s=Object.defineProperty;e.f=r?s:function(t,e,n){if(o(t),e=a(e,!0),o(n),i)try{return s(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported");return"value"in n&&(t[e]=n.value),t}},function(t,e,n){"use strict";var r,i,o,a,s=n(2),c=n(76),u=n(4),f=n(57),l=n(264),h=n(38),p=n(113),d=n(58),v=n(114),y=n(11),g=n(68),b=n(69),m=n(56),w=n(145),E=n(156),x=n(115),T=n(70),O=n(158).set,S=n(265),_=n(266),k=n(267),A=n(201),I=n(268),C=n(44),j=n(150),P=n(7),R=n(159),L=P("species"),N="Promise",D=C.get,U=C.set,M=C.getterFor(N),B=l,F=u.TypeError,H=u.document,z=u.process,q=f("fetch"),G=A.f,$=G,V="process"==m(z),W=!!(H&&H.createEvent&&u.dispatchEvent),Y=j(N,function(){if(w(B)===String(B)){if(66===R)return!0;if(!V&&"function"!=typeof PromiseRejectionEvent)return!0}if(c&&!B.prototype.finally)return!0;if(R>=51&&/native code/.test(B))return!1;var t=B.resolve(1),e=function(t){t(function(){},function(){})};return(t.constructor={})[L]=e,!(t.then(function(){})instanceof e)}),J=Y||!x(function(t){B.all(t).catch(function(){})}),Z=function(t){var e;return!(!y(t)||"function"!=typeof(e=t.then))&&e},K=function(t,e,n){if(!e.notified){e.notified=!0;var r=e.reactions;S(function(){for(var i=e.value,o=1==e.state,a=0;r.length>a;){var s,c,u,f=r[a++],l=o?f.ok:f.fail,h=f.resolve,p=f.reject,d=f.domain;try{l?(o||(2===e.rejection&&et(t,e),e.rejection=1),!0===l?s=i:(d&&d.enter(),s=l(i),d&&(d.exit(),u=!0)),s===f.promise?p(F("Promise-chain cycle")):(c=Z(s))?c.call(s,h,p):h(s)):p(i)}catch(t){d&&!u&&d.exit(),p(t)}}e.reactions=[],e.notified=!1,n&&!e.rejection&&Q(t,e)})}},X=function(t,e,n){var r,i;W?((r=H.createEvent("Event")).promise=e,r.reason=n,r.initEvent(t,!1,!0),u.dispatchEvent(r)):r={promise:e,reason:n},(i=u["on"+t])?i(r):"unhandledrejection"===t&&k("Unhandled promise rejection",n)},Q=function(t,e){O.call(u,function(){var n,r=e.value;if(tt(e)&&(n=I(function(){V?z.emit("unhandledRejection",r,t):X("unhandledrejection",t,r)}),e.rejection=V||tt(e)?2:1,n.error))throw n.value})},tt=function(t){return 1!==t.rejection&&!t.parent},et=function(t,e){O.call(u,function(){V?z.emit("rejectionHandled",t):X("rejectionhandled",t,e.value)})},nt=function(t,e,n,r){return function(i){t(e,n,i,r)}},rt=function(t,e,n,r){e.done||(e.done=!0,r&&(e=r),e.value=n,e.state=2,K(t,e,!0))},it=function(t,e,n,r){if(!e.done){e.done=!0,r&&(e=r);try{if(t===n)throw F("Promise can't be resolved itself");var i=Z(n);i?S(function(){var r={done:!1};try{i.call(n,nt(it,t,r,e),nt(rt,t,r,e))}catch(n){rt(t,r,n,e)}}):(e.value=n,e.state=1,K(t,e,!1))}catch(n){rt(t,{done:!1},n,e)}}};Y&&(B=function(t){b(this,B,N),g(t),r.call(this);var e=D(this);try{t(nt(it,this,e),nt(rt,this,e))}catch(t){rt(this,e,t)}},(r=function(t){U(this,{type:N,done:!1,notified:!1,parent:!1,reactions:[],rejection:!1,state:0,value:void 0})}).prototype=p(B.prototype,{then:function(t,e){var n=M(this),r=G(T(this,B));return r.ok="function"!=typeof t||t,r.fail="function"==typeof e&&e,r.domain=V?z.domain:void 0,n.parent=!0,n.reactions.push(r),0!=n.state&&K(this,n,!1),r.promise},catch:function(t){return this.then(void 0,t)}}),i=function(){var t=new r,e=D(t);this.promise=t,this.resolve=nt(it,t,e),this.reject=nt(rt,t,e)},A.f=G=function(t){return t===B||t===o?new i(t):$(t)},c||"function"!=typeof l||(a=l.prototype.then,h(l.prototype,"then",function(t,e){var n=this;return new B(function(t,e){a.call(n,t,e)}).then(t,e)},{unsafe:!0}),"function"==typeof q&&s({global:!0,enumerable:!0,forced:!0},{fetch:function(t){return _(B,q.apply(u,arguments))}}))),s({global:!0,wrap:!0,forced:Y},{Promise:B}),d(B,N,!1,!0),v(N),o=f(N),s({target:N,stat:!0,forced:Y},{reject:function(t){var e=G(this);return e.reject.call(void 0,t),e.promise}}),s({target:N,stat:!0,forced:c||Y},{resolve:function(t){return _(c&&this===o?B:this,t)}}),s({target:N,stat:!0,forced:J},{all:function(t){var e=this,n=G(e),r=n.resolve,i=n.reject,o=I(function(){var n=g(e.resolve),o=[],a=0,s=1;E(t,function(t){var c=a++,u=!1;o.push(void 0),s++,n.call(e,t).then(function(t){u||(u=!0,o[c]=t,--s||r(o))},i)}),--s||r(o)});return o.error&&i(o.value),n.promise},race:function(t){var e=this,n=G(e),r=n.reject,i=I(function(){var i=g(e.resolve);E(t,function(t){i.call(e,t).then(n.resolve,r)})});return i.error&&r(i.value),n.promise}})},function(t,e,n){var r=n(4),i=n(203),o=n(14),a=n(35),s=n(7),c=s("iterator"),u=s("toStringTag"),f=o.values;for(var l in i){var h=r[l],p=h&&h.prototype;if(p){if(p[c]!==f)try{a(p,c,f)}catch(t){p[c]=f}if(p[u]||a(p,u,l),i[l])for(var d in o)if(p[d]!==o[d])try{a(p,d,o[d])}catch(t){p[d]=o[d]}}}},function(t,e,n){"use strict";n(13),n(22),n(15),n(101),n(72),n(79),n(31),n(32),n(80),n(28),n(18);var r=n(0),i=n(23),o=n(181),a=n.n(o),s=n(85),c=n(88),u=n.n(c),f=n(132),l=n(51),h=n(1);function p(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function d(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?p(Object(n),!0).forEach(function(e){v(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function v(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var y=h.a.ECDN10,g=h.a.ECDN11,b=function(t,e){t[e]&&t[e].data&&0===t[e].data.length&&delete t[e]},m=n(63),w=n.n(m),E=n(62),x=n.n(E);function T(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function O(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var S=function(t){return Object.getOwnPropertyNames(t).reduce(function(e,n){return e[n]=function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?T(Object(n),!0).forEach(function(e){O(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):T(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}({name:n},t[n]),e},{})},_=S({canplay:{code:1},canplaythrough:{code:2},complete:{code:3},durationchange:{code:4,metadata:"dur"},emptied:{code:5},ended:{code:6},loadeddata:{code:7},loadedmetadata:{code:8},pause:{code:9},play:{code:10},playing:{code:11},ratechange:{code:12,metadata:"rate"},seeked:{code:13,metadata:"pos"},seeking:{code:14,metadata:"pos"},stalled:{code:15},suspend:{code:16},waiting:{code:17}}),k=S({pageunload:{code:101}});function A(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function I(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?A(Object(n),!0).forEach(function(e){C(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):A(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function C(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function j(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}n(47),n(48),n(59),n(127),n(14),n(9),n(71),n(21),n(26),n(60);var P=function(t){return t===1/0?-1:1e3*t};function R(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function L(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function N(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function D(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var U=function(t,e){var n=e.add,i=e.set,o=e.stop,a=e.start,s=function(){var e=t.duration;e>0&&i({duration:P(e)})},c=function(e){return function(){var i=e.name,c=e.code,u=e.metadata;r.a.i("player event:",e),n(function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?N(Object(n),!0).forEach(function(e){D(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):N(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}({e:c},function(e){switch(u){case"rate":return{rate:t.playbackRate};case"dur":return{dur:P(t.duration)};case"pos":return{pos:t.currentTime};default:return}}()));var f=_.durationchange,l=_.ended,h=_.canplay,p=_.canplaythrough,d=_.play;switch(i){case f.name:return s();case l.name:return o();case d.name:case h.name:case p.name:return a();default:return}}};s(),Object.getOwnPropertyNames(_).map(function(t){return _[t]}).forEach(function(e){var n=c(e);t.addEventListener(e.name,n)})},M=n(255);function B(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function F(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?B(Object(n),!0).forEach(function(e){H(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):B(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function H(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function z(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var q,G=function(t){return"portal"===t.integration.name},$=function(t){return{general:{playGuid:t},events:{data:[]},detection:{data:[]},priming:{data:[]}}},V=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object(i.a)(this),t.reporters.push(this);var r,o=e||{},a=o.seed,s=o.start,c=o.user,u=o.config;this.user=c,this.config=u||{},this.playGuid=Object(M.a)(a),this.startTime=s||Date.now(),this.storedInfo=((r=w()("ksdn.r"))&&r.browserUserGuid||(r={browserUserGuid:x()()},w()("ksdn.r",r)),r),this.contentSet=!1,this.sdkConfig=n,this.sdkConfig.setReportInterval(this.config.iar);var f=this.storedInfo,l=f.browserUserGuid,h=f.ecdn10,p=f.ecdn11,d=this.sdkConfig,v=d.version,y=d.integration;this.merged=$(),this.pending=F({},$(),{general:F({playGuid:this.playGuid,v:v,browserUserGuid:l},c&&{user:c},{start:this.startTime,integration:y})},h&&{ecdn10:h},{},p&&{ecdn11:p})}var e,n;return e=t,(n=[{key:"timestamp",value:function(t){return(t=null==t?Date.now():t)-this.startTime}},{key:"add",value:function(e){if(!this.cleaned){e.t=this.timestamp(e.t);var n=e.status;null!=n&&(e.status=n<100?"timeout":"".concat(n));var i=e.e,o=e.type;if(i){var s=_.durationchange.code;if(G(this.sdkConfig)&&i===s){if(this.ignoreDurationChange)return;this.ignoreDurationChange=!0,e.dur=-1}var c=_.seeking.code;if(i===c){if((a()(this.pending.events.data)||a()(this.merged.events.data)).e===c)return void(this.finalSeeking=e)}else this.finalSeeking&&(this.pending.events.data.push(this.finalSeeking),this.finalSeeking=null);this.pending.events.data.push(e)}else{var u=t.Type,f=u.WEBRTC,l=u.ECDN10,h=u.ECDN11;switch(o){case f:case l:case h:if(!0===e.success&&(r.a.i("a.d",o,e.method,e.v),function(t){var e=w()("ksdn.r");e&&e.browserUserGuid||(e={browserUserGuid:x()()}),t&&(e.lastDetection=t),w()("ksdn.r",e)}({type:o,v:e.v,date:Date.now()})),!1===e.success){r.a.f("a.d.f",o,e.method,e.status);var p=this.storedInfo.lastDetection;p&&(e.lastDetection=p)}this.pending.detection.data.push(e);break;default:this.pending.priming.data.push(e)}}var d=(this.merged,this.pending,{conditionCritical:null,conditionExpedite:null}),v=d.conditionCritical,y=d.conditionExpedite;(!v||!this.flagCritical(v))&&y&&this.expedite(y)}}},{key:"set",value:function(e,n){if(!this.cleaned){G(this.sdkConfig)&&e.duration&&(e.duration=-1),n=n||t.Sections.General;var r=this.merged[n],i=Object.getOwnPropertyNames(e).reduce(function(t,n){return r&&r[n]||(t[n]=e[n]),t},{});this.pending[n]=Object.assign(i,this.pending[n]),n===t.Type.ECDN10&&e.content&&(this.contentSet=!0),i.duration&&!this.started&&this.start(!0,!0)}}},{key:"merge",value:function(){var t=this.merged,e=this.pending,n=this.playGuid;this.merged=function(t,e){var n,r,i,o=t.general,a=t.ecdn10,s=t.ecdn11,c=t.events,f=t.detection,l=t.priming;return e=u()(e),o.hb=(o.hb||[]).concat(e.general.t),delete e.general.t,delete e.general.critical,delete e.general.expedited,(n=c.data).push.apply(n,j(e.events.data)),(r=f.data).push.apply(r,j(e.detection.data)),(i=l.data).push.apply(i,j(e.priming.data)),{general:I({},o,{},e.general),ecdn10:I({},a,{},e.ecdn10),ecdn11:I({},s,{},e.ecdn11),events:c,detection:f,priming:l}}(t,e),this.pending=$(n)}},{key:"send",value:function(t){if(!this.cleaned){var e=this.pending,n=this.config,i=this.platform,o=this.rpk,a=this.jwt,c=this.contentSet;e.general.t=this.timestamp();var h=function(t){var e=t.config,n=t.platform,i=t.isFinal,o=t.pending,a=t.rpk,s=t.jwt,c=t.contentSet;if(n===y&&o.ecdn10){var h=o.ecdn10,p=h.agent,v=h.deliveryGuid;o.ecdn10.agent=d({},p,{deliveryGuid:v})}var m,w,E=d({},u()(o));switch(b(E,"events"),b(E,"detection"),b(E,"priming"),n){case y:var x=e.b;if(!x)return;if(!c)return;m="".concat(Object(l.a)(x),"/api/integration/report/play"),a&&(E.token=a);break;case g:if(!s||!e.sth)return;m="".concat(Object(l.a)(e.sth),"/api/stats/play"),w={Authorization:"Bearer ".concat(s)};var T=Object(f.a)(s);r.a.i("sending report",T),E={contentId:T.cid,tenantId:T.tid,record:E};break;default:return}return{method:"POST",url:m,async:!i,body:E,headers:w}}({config:n,platform:i,contentSet:c,isFinal:t,pending:e,rpk:o,jwt:a});h?(Object(s.a)(h).then(function(){r.a.i("report",h.body)}).catch(function(){r.a.f("report",h.body)}),this.merge()):r.a.w("report","not.ready",e)}}},{key:"expedite",value:function(t){t&&(this.pending.general.expedited=t),this.start(!0,!0)}},{key:"attachVideoElement",value:function(t){if(!this.cleaned){var e=this.add,n=this.set,r=this.stop,i=this.start;U(t,{add:e,set:n,stop:r,start:i})}}},{key:"attachAmpPlayer",value:function(t){this.cleaned||function(t,e){var n=e.add,r=e.set,i=e.stop,o=e.start,a=function(){var e=t.duration();e>0&&r({duration:P(e)})},s=function(e){var r=e.name,s=e.code,c=e.metadata;return function(){n(function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?R(Object(n),!0).forEach(function(e){L(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):R(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}({e:s},function(e){switch(c){case"rate":return{rate:t.playbackRate()};case"dur":return{dur:P(t.duration())};case"pos":return{pos:t.currentTime()};default:return}}()));var e=_.durationchange,u=_.ended,f=_.canplay,l=_.canplaythrough,h=_.play;switch(r){case e.name:return a();case u.name:return i();case h.name:case f.name:case l.name:return o();default:return}}};a(),Object.getOwnPropertyNames(_).map(function(t){return _[t]}).forEach(function(e){var n=s(e);t.addEventListener(e.name,n)})}(t,{add:this.add,set:this.set,stop:this.stop,start:this.start})}},{key:"flagCritical",value:function(t){var e=Math.random()<.05;return this.pending.general.critical=t,e&&!this.hasExpeditedOnCritical&&(this.hasExpeditedOnCritical=!0,this.expedite("critical")),e}},{key:"start",value:function(t,e){this.cleaned||this.intervalToken&&!t||(this.started=!0,clearInterval(this.intervalToken),this.intervalToken=setInterval(this.send,this.sdkConfig.reportInterval),e&&this.send())}},{key:"stop",value:function(){this.intervalToken&&(clearInterval(this.intervalToken),this.intervalToken=null,this.send(!0))}},{key:"cleanup",value:function(){this.stop(),this.merged=null,this.pending=null,this.cleaned=!0}}])&&z(e.prototype,n),t}();V.reporters=[],window.addEventListener("beforeunload",function(){V.reporters.forEach(function(t){t.add({e:k.pageunload.code}),t.cleanup()})}),(q=V).Type={WEBRTC:"webrtc",ECDN10:"ecdn10",ECDN11:"ecdn11",PUBLISH_CHECK:"publishCheck",PUBLISH:"publish",SESSION:"session",PREFETCH:"prefetch",RESTART:"restart"},q.Sections={General:"general",ECDN10:"ecdn10",ECDN11:"ecdn11"},q.Error={UNSUPPORTED:"unsupportedBrowser"};var W=V;n.d(e,"a",function(){return W})},function(t,e,n){var r=n(2),i=n(36),o=n(112);r({target:"Object",stat:!0,forced:n(3)(function(){o(1)})},{keys:function(t){return o(i(t))}})},function(t,e,n){"use strict";var r=n(5),i=n(233);function o(){i.call(this)}r(o,i),o.prototype.removeAllListeners=function(t){t?delete this._listeners[t]:this._listeners={}},o.prototype.once=function(t,e){var n=this,r=!1;this.on(t,function i(){n.removeListener(t,i),r||(r=!0,e.apply(this,arguments))})},o.prototype.emit=function(){var t=arguments[0],e=this._listeners[t];if(e){for(var n=arguments.length,r=new Array(n-1),i=1;i<n;i++)r[i-1]=arguments[i];for(var o=0;o<e.length;o++)e[o].apply(this,r)}},o.prototype.on=o.prototype.addListener=i.prototype.addEventListener,o.prototype.removeListener=i.prototype.removeEventListener,t.exports.EventEmitter=o},function(t,e,n){"use strict";n.d(e,"b",function(){return a}),n.d(e,"a",function(){return s}),n.d(e,"c",function(){return c});var r,i=n(1);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var a="kollectiveSDN",s=(o(r={},i.c.SMOOTH,{tech:"FlashSS",mime:"application/vnd.ms-sstr+xml"}),o(r,i.c.DASH,{tech:"AzureHtml5JS",mime:"application/dash+xml"}),r),c={sdnInitSuccess:"sdnInitSuccess",sdnInitFailure:"sdnInitFailure",sdnFatalError:"sdnFatalError"}},function(t,e,n){var r=n(2),i=n(3),o=n(41),a=n(55).f,s=n(16),c=i(function(){a(1)});r({target:"Object",stat:!0,forced:!s||c,sham:!s},{getOwnPropertyDescriptor:function(t,e){return a(o(t),e)}})},function(t,e,n){var r=n(2),i=n(16),o=n(147),a=n(41),s=n(55),c=n(116);r({target:"Object",stat:!0,sham:!i},{getOwnPropertyDescriptors:function(t){for(var e,n,r=a(t),i=s.f,u=o(r),f={},l=0;u.length>l;)void 0!==(n=i(r,e=u[l++]))&&c(f,e,n);return f}})},function(t,e,n){"use strict";n.d(e,"a",function(){return f});var r=n(10),i=n(109),o=n(90),a=n(46),s=n(74),c=n(34),u=n(53),f=function(t){function e(n,r,i){var a=t.call(this)||this;switch(a.syncErrorValue=null,a.syncErrorThrown=!1,a.syncErrorThrowable=!1,a.isStopped=!1,arguments.length){case 0:a.destination=o.a;break;case 1:if(!n){a.destination=o.a;break}if("object"==typeof n){n instanceof e?(a.syncErrorThrowable=n.syncErrorThrowable,a.destination=n,n.add(a)):(a.syncErrorThrowable=!0,a.destination=new l(a,n));break}default:a.syncErrorThrowable=!0,a.destination=new l(a,n,r,i)}return a}return r.a(e,t),e.prototype[s.a]=function(){return this},e.create=function(t,n,r){var i=new e(t,n,r);return i.syncErrorThrowable=!1,i},e.prototype.next=function(t){this.isStopped||this._next(t)},e.prototype.error=function(t){this.isStopped||(this.isStopped=!0,this._error(t))},e.prototype.complete=function(){this.isStopped||(this.isStopped=!0,this._complete())},e.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this))},e.prototype._next=function(t){this.destination.next(t)},e.prototype._error=function(t){this.destination.error(t),this.unsubscribe()},e.prototype._complete=function(){this.destination.complete(),this.unsubscribe()},e.prototype._unsubscribeAndRecycle=function(){var t=this._parentOrParents;return this._parentOrParents=null,this.unsubscribe(),this.closed=!1,this.isStopped=!1,this._parentOrParents=t,this},e}(a.a),l=function(t){function e(e,n,r,a){var s,c=t.call(this)||this;c._parentSubscriber=e;var u=c;return Object(i.a)(n)?s=n:n&&(s=n.next,r=n.error,a=n.complete,n!==o.a&&(u=Object.create(n),Object(i.a)(u.unsubscribe)&&c.add(u.unsubscribe.bind(u)),u.unsubscribe=c.unsubscribe.bind(c))),c._context=u,c._next=s,c._error=r,c._complete=a,c}return r.a(e,t),e.prototype.next=function(t){if(!this.isStopped&&this._next){var e=this._parentSubscriber;c.a.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?this.__tryOrSetError(e,this._next,t)&&this.unsubscribe():this.__tryOrUnsub(this._next,t)}},e.prototype.error=function(t){if(!this.isStopped){var e=this._parentSubscriber,n=c.a.useDeprecatedSynchronousErrorHandling;if(this._error)n&&e.syncErrorThrowable?(this.__tryOrSetError(e,this._error,t),this.unsubscribe()):(this.__tryOrUnsub(this._error,t),this.unsubscribe());else if(e.syncErrorThrowable)n?(e.syncErrorValue=t,e.syncErrorThrown=!0):Object(u.a)(t),this.unsubscribe();else{if(this.unsubscribe(),n)throw t;Object(u.a)(t)}}},e.prototype.complete=function(){var t=this;if(!this.isStopped){var e=this._parentSubscriber;if(this._complete){var n=function(){return t._complete.call(t._context)};c.a.useDeprecatedSynchronousErrorHandling&&e.syncErrorThrowable?(this.__tryOrSetError(e,n),this.unsubscribe()):(this.__tryOrUnsub(n),this.unsubscribe())}else this.unsubscribe()}},e.prototype.__tryOrUnsub=function(t,e){try{t.call(this._context,e)}catch(t){if(this.unsubscribe(),c.a.useDeprecatedSynchronousErrorHandling)throw t;Object(u.a)(t)}},e.prototype.__tryOrSetError=function(t,e,n){if(!c.a.useDeprecatedSynchronousErrorHandling)throw new Error("bad call");try{e.call(this._context,n)}catch(e){return c.a.useDeprecatedSynchronousErrorHandling?(t.syncErrorValue=e,t.syncErrorThrown=!0,!0):(Object(u.a)(e),!0)}return!1},e.prototype._unsubscribe=function(){var t=this._parentSubscriber;this._context=null,this._parentSubscriber=null,t.unsubscribe()},e}(f)},function(t,e,n){"use strict";n.d(e,"a",function(){return i});var r=!1,i={Promise:void 0,set useDeprecatedSynchronousErrorHandling(t){t&&(new Error).stack,r=t},get useDeprecatedSynchronousErrorHandling(){return r}}},function(t,e,n){var r=n(16),i=n(24),o=n(64);t.exports=r?function(t,e,n){return i.f(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},function(t,e,n){var r=n(75);t.exports=function(t){return Object(r(t))}},function(t,e,n){var r=n(67),i=n(91),o=n(36),a=n(20),s=n(195),c=[].push,u=function(t){var e=1==t,n=2==t,u=3==t,f=4==t,l=6==t,h=5==t||l;return function(p,d,v,y){for(var g,b,m=o(p),w=i(m),E=r(d,v,3),x=a(w.length),T=0,O=y||s,S=e?O(p,x):n?O(p,0):void 0;x>T;T++)if((h||T in w)&&(b=E(g=w[T],T,m),t))if(e)S[T]=b;else if(b)switch(t){case 3:return!0;case 5:return g;case 6:return T;case 2:c.call(S,g)}else if(f)return!1;return l?-1:u||f?f:S}};t.exports={forEach:u(0),map:u(1),filter:u(2),some:u(3),every:u(4),find:u(5),findIndex:u(6)}},function(t,e,n){var r=n(4),i=n(35),o=n(19),a=n(144),s=n(145),c=n(44),u=c.get,f=c.enforce,l=String(String).split("String");(t.exports=function(t,e,n,s){var c=!!s&&!!s.unsafe,u=!!s&&!!s.enumerable,h=!!s&&!!s.noTargetGet;"function"==typeof n&&("string"!=typeof e||o(n,"name")||i(n,"name",e),f(n).source=l.join("string"==typeof e?e:"")),t!==r?(c?!h&&t[e]&&(u=!0):delete t[e],u?t[e]=n:i(t,e,n)):u?t[e]=n:a(e,n)})(Function.prototype,"toString",function(){return"function"==typeof this&&u(this).source||s(this)})},function(t,e,n){"use strict";var r=n(134);t.exports={getOrigin:function(t){if(!t)return null;var e=new r(t);if("file:"===e.protocol)return null;var n=e.port;return n||(n="https:"===e.protocol?"443":"80"),e.protocol+"//"+e.hostname+":"+n},isOriginEqual:function(t,e){return this.getOrigin(t)===this.getOrigin(e)},isSchemeEqual:function(t,e){return t.split(":")[0]===e.split(":")[0]},addPath:function(t,e){var n=t.split("?");return n[0]+e+(n[1]?"?"+n[1]:"")},addQuery:function(t,e){return t+(-1===t.indexOf("?")?"?"+e:"&"+e)}}},function(t,e,n){t.exports=n(174)},function(t,e,n){var r=n(91),i=n(75);t.exports=function(t){return r(i(t))}},function(t,e,n){"use strict";var r=n(33),i=n(74),o=n(90),a=n(89);function s(){}var c=n(34);n.d(e,"a",function(){return u});var u=function(){function t(t){this._isScalar=!1,t&&(this._subscribe=t)}return t.prototype.lift=function(e){var n=new t;return n.source=this,n.operator=e,n},t.prototype.subscribe=function(t,e,n){var a=this.operator,s=function(t,e,n){if(t){if(t instanceof r.a)return t;if(t[i.a])return t[i.a]()}return t||e||n?new r.a(t,e,n):new r.a(o.a)}(t,e,n);if(a?s.add(a.call(s,this.source)):s.add(this.source||c.a.useDeprecatedSynchronousErrorHandling&&!s.syncErrorThrowable?this._subscribe(s):this._trySubscribe(s)),c.a.useDeprecatedSynchronousErrorHandling&&s.syncErrorThrowable&&(s.syncErrorThrowable=!1,s.syncErrorThrown))throw s.syncErrorValue;return s},t.prototype._trySubscribe=function(t){try{return this._subscribe(t)}catch(e){c.a.useDeprecatedSynchronousErrorHandling&&(t.syncErrorThrown=!0,t.syncErrorValue=e),function(t){for(;t;){var e=t,n=e.closed,i=e.destination,o=e.isStopped;if(n||o)return!1;t=i&&i instanceof r.a?i:null}return!0}(t)?t.error(e):console.warn(e)}},t.prototype.forEach=function(t,e){var n=this;return new(e=f(e))(function(e,r){var i;i=n.subscribe(function(e){try{t(e)}catch(t){r(t),i&&i.unsubscribe()}},r,e)})},t.prototype._subscribe=function(t){var e=this.source;return e&&e.subscribe(t)},t.prototype[a.a]=function(){return this},t.prototype.pipe=function(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];return 0===t.length?this:function(t){return t?1===t.length?t[0]:function(e){return t.reduce(function(t,e){return e(t)},e)}:s}(t)(this)},t.prototype.toPromise=function(t){var e=this;return new(t=f(t))(function(t,n){var r;e.subscribe(function(t){return r=t},function(t){return n(t)},function(){return t(r)})})},t.create=function(e){return new t(e)},t}();function f(t){if(t||(t=c.a.Promise||Promise),!t)throw new Error("no Promise impl found");return t}},function(t,e,n){"use strict";n(13),n(59),n(22),n(15),n(128),n(31),n(32),n(28),n(18);var r=n(86),i=n(1);function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function a(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach(function(e){s(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function c(t,e){if(null==t)return{};var n,r,i=function(t,e){if(null==t)return{};var n,r,i={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(i[n]=t[n]);return i}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(i[n]=t[n])}return i}function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function f(t,e){var n=function(){switch(e){case i.c.MP4:return"content.mp4";case i.c.HLS:return"chunklist.m3u8";case i.c.DASH:return"playlist.ism/Manifest(format=mpd-time-csf)";case i.c.SMOOTH:return"playlist.ism/Manifest";default:return""}}();return"stream/".concat(t,"/").concat(n)}function l(t,e){var n=t.protocol,r=t.host,i=t.port;return"".concat(n,"://").concat(r,":").concat(i,"/").concat(e)}function h(){if(!this.config)throw Error("ECDN10AgentAPI lacks config")}var p=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n;return e=t,(n=[{key:"detect",value:function(t){var e=this,n=t||{},r=n.callback,o=c(n,["callback"]);r=r||i.d;var a,s,u,f={protocol:"https",host:o.hostHTTPS||"client.kontiki.com",port:o.portHTTPS||31015},l={protocol:"http",host:o.hostHTTP||"127.0.0.1",port:o.portHTTP||31013},h=this.config?[this.config]:[f,(a=window.Mozilla,s=a&&(a.isFirefox||a.isLikeFirefox),u=window.chrome&&!/Edg(e|iOS|A)\/|SamsungBrowser/i.test(navigator.userAgent),null!=window.isSecureContext&&!(!s&&!u)&&l)].filter(Boolean);!function t(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[];if(h.length){var i=h.shift(),o=Date.now(),a=function(e){n.push({start:o,t:Date.now(),protocol:i.protocol,request:e}),t(n)};e.makeRequest({uri:"kontiki/kontiki/cache/RetrieveAgentData",onSuccess:function(t,a){e.config=i,r({success:{protocol:i.protocol,data:t,request:a,start:o},failures:n})},onFailure:a,onTimeout:a},i)}else r({failures:n})}()}},{key:"startSession",value:function(t){var e=t.body,n=e.ktoken,r=e.appContext;this.makeRequest(a({method:"POST",uri:"".concat("api/v1/setSessionData","?ktoken=").concat(n,"&appContext=").concat(r)},t))}},{key:"getDeliveryGuid",value:function(t){var e=t.urn;delete t.urn,this.makeRequest(a({uri:"".concat("api/v1/contentDeliveryGuid","?urn=").concat(e)},t))}},{key:"prefetch",value:function(t){var e=t.urn,n=t.streamType,r=c(t,["urn","streamType"]);this.makeRequest(a({uri:f(e,n),timeout:5e3,expectJson:!1},r))}},{key:"longpoll",value:function(t){this.makeRequest(a({uri:"api/v1/longpoll",timeout:3e4,ignoreEdgeTimeout:!0},t))}},{key:"stopStream",value:function(t){this.makeRequest(a({uri:"api/v1/stopStream"},t))}},{key:"makeRequest",value:function(t,e){e||h.call(this);var n=t||{},i=n.uri,o=n.timeout,s=c(n,["uri","timeout"]);Object(r.a)(a({url:l(e||this.config,i),timeout:o||2e3,jsonContent:!1},s))}},{key:"createStreamURL",value:function(t,e){h.call(this);var n=f(t,e);return l(this.config,n)}}])&&u(e.prototype,n),t}());e.a=p},function(t,e,n){var r,i,o,a=n(261),s=n(4),c=n(11),u=n(35),f=n(19),l=n(110),h=n(94),p=s.WeakMap;if(a){var d=new p,v=d.get,y=d.has,g=d.set;r=function(t,e){return g.call(d,t,e),e},i=function(t){return v.call(d,t)||{}},o=function(t){return y.call(d,t)}}else{var b=l("state");h[b]=!0,r=function(t,e){return u(t,b,e),e},i=function(t){return f(t,b)?t[b]:{}},o=function(t){return f(t,b)}}t.exports={set:r,get:i,has:o,enforce:function(t){return o(t)?i(t):r(t,{})},getterFor:function(t){return function(e){var n;if(!c(e)||(n=i(e)).type!==t)throw TypeError("Incompatible receiver, "+t+" required");return n}}}},function(t,e,n){var r=n(209),i="object"==typeof self&&self&&self.Object===Object&&self,o=r||i||Function("return this")();t.exports=o},function(t,e,n){"use strict";var r=Array.isArray||function(t){return t&&"number"==typeof t.length},i=n(139),o=n(109),a=function(){function t(t){return Error.call(this),this.message=t?t.length+" errors occurred during unsubscription:\n"+t.map(function(t,e){return e+1+") "+t.toString()}).join("\n  "):"",this.name="UnsubscriptionError",this.errors=t,this}return t.prototype=Object.create(Error.prototype),t}();n.d(e,"a",function(){return s});var s=function(){function t(t){this.closed=!1,this._parentOrParents=null,this._subscriptions=null,t&&(this._unsubscribe=t)}var e;return t.prototype.unsubscribe=function(){var e;if(!this.closed){var n=this._parentOrParents,s=this._unsubscribe,u=this._subscriptions;if(this.closed=!0,this._parentOrParents=null,this._subscriptions=null,n instanceof t)n.remove(this);else if(null!==n)for(var f=0;f<n.length;++f)n[f].remove(this);if(Object(o.a)(s))try{s.call(this)}catch(t){e=t instanceof a?c(t.errors):[t]}if(r(u)){f=-1;for(var l=u.length;++f<l;){var h=u[f];if(Object(i.a)(h))try{h.unsubscribe()}catch(t){e=e||[],t instanceof a?e=e.concat(c(t.errors)):e.push(t)}}}if(e)throw new a(e)}},t.prototype.add=function(e){var n=e;if(!e)return t.EMPTY;switch(typeof e){case"function":n=new t(e);case"object":if(n===this||n.closed||"function"!=typeof n.unsubscribe)return n;if(this.closed)return n.unsubscribe(),n;if(!(n instanceof t)){var r=n;(n=new t)._subscriptions=[r]}break;default:throw new Error("unrecognized teardown "+e+" added to Subscription.")}var i=n._parentOrParents;if(null===i)n._parentOrParents=this;else if(i instanceof t){if(i===this)return n;n._parentOrParents=[i,this]}else{if(-1!==i.indexOf(this))return n;i.push(this)}var o=this._subscriptions;return null===o?this._subscriptions=[n]:o.push(n),n},t.prototype.remove=function(t){var e=this._subscriptions;if(e){var n=e.indexOf(t);-1!==n&&e.splice(n,1)}},t.EMPTY=((e=new t).closed=!0,e),t}();function c(t){return t.reduce(function(t,e){return t.concat(e instanceof a?e.errors:e)},[])}},function(t,e,n){"use strict";var r=n(2),i=n(16),o=n(4),a=n(19),s=n(11),c=n(24).f,u=n(186),f=o.Symbol;if(i&&"function"==typeof f&&(!("description"in f.prototype)||void 0!==f().description)){var l={},h=function(){var t=arguments.length<1||void 0===arguments[0]?void 0:String(arguments[0]),e=this instanceof h?new f(t):void 0===t?f():f(t);return""===t&&(l[e]=!0),e};u(h,f);var p=h.prototype=f.prototype;p.constructor=h;var d=p.toString,v="Symbol(test)"==String(f("test")),y=/^Symbol\((.*)\)[^)]+$/;c(p,"description",{configurable:!0,get:function(){var t=s(this)?this.valueOf():this,e=d.call(t);if(a(l,t))return"";var n=v?e.slice(7,-1):e.replace(y,"$1");return""===n?void 0:n}}),r({global:!0,forced:!0},{Symbol:h})}},function(t,e,n){n(194)("iterator")},function(t,e,n){var r=n(16),i=n(3),o=n(19),a=Object.defineProperty,s={},c=function(t){throw t};t.exports=function(t,e){if(o(s,t))return s[t];e||(e={});var n=[][t],u=!!o(e,"ACCESSORS")&&e.ACCESSORS,f=o(e,0)?e[0]:c,l=o(e,1)?e[1]:void 0;return s[t]=!!n&&!i(function(){if(u&&!r)return!0;var t={length:-1};u?a(t,1,{enumerable:!0,get:c}):t[1]=1,n.call(t,f,l)})}},function(t,e,n){(function(t,r){var i;(function(){var o=n(377),a={function:!0,object:!0},s=a[typeof e]&&e&&!e.nodeType&&e,c=a[typeof window]&&window||this,u=s&&a[typeof t]&&t&&!t.nodeType&&"object"==typeof r&&r;function f(t,e){t||(t=c.Object()),e||(e=c.Object());var n=t.Number||c.Number,r=t.String||c.String,i=t.Object||c.Object,o=t.Date||c.Date,s=t.SyntaxError||c.SyntaxError,u=t.TypeError||c.TypeError,l=t.Math||c.Math,h=t.JSON||c.JSON;"object"==typeof h&&h&&(e.stringify=h.stringify,e.parse=h.parse);var p=i.prototype,d=p.toString,v=p.hasOwnProperty;function y(t,e){try{t()}catch(t){e&&e()}}var g=new o(-0xc782b5b800cec);function b(t){if(null!=b[t])return b[t];var i;if("bug-string-char-index"==t)i="a"!="a"[0];else if("json"==t)i=b("json-stringify")&&b("date-serialization")&&b("json-parse");else if("date-serialization"==t){if(i=b("json-stringify")&&g){var a=e.stringify;y(function(){i='"-271821-04-20T00:00:00.000Z"'==a(new o(-864e13))&&'"+275760-09-13T00:00:00.000Z"'==a(new o(864e13))&&'"-000001-01-01T00:00:00.000Z"'==a(new o(-621987552e5))&&'"1969-12-31T23:59:59.999Z"'==a(new o(-1))})}}else{var s,c='{"a":[1,true,false,null,"\\u0000\\b\\n\\f\\r\\t"]}';if("json-stringify"==t){var u="function"==typeof(a=e.stringify);u&&((s=function(){return 1}).toJSON=s,y(function(){u="0"===a(0)&&"0"===a(new n)&&'""'==a(new r)&&void 0===a(d)&&void 0===a(void 0)&&void 0===a()&&"1"===a(s)&&"[1]"==a([s])&&"[null]"==a([void 0])&&"null"==a(null)&&"[null,null,null]"==a([void 0,d,null])&&a({a:[s,!0,!1,null,"\0\b\n\f\r\t"]})==c&&"1"===a(null,s)&&"[\n 1,\n 2\n]"==a([1,2],null,1)},function(){u=!1})),i=u}if("json-parse"==t){var f,l=e.parse;"function"==typeof l&&y(function(){0!==l("0")||l(!1)||(s=l(c),(f=5==s.a.length&&1===s.a[0])&&(y(function(){f=!l('"\t"')}),f&&y(function(){f=1!==l("01")}),f&&y(function(){f=1!==l("1.")})))},function(){f=!1}),i=f}}return b[t]=!!i}if(y(function(){g=-109252==g.getUTCFullYear()&&0===g.getUTCMonth()&&1===g.getUTCDate()&&10==g.getUTCHours()&&37==g.getUTCMinutes()&&6==g.getUTCSeconds()&&708==g.getUTCMilliseconds()}),b["bug-string-char-index"]=b["date-serialization"]=b.json=b["json-stringify"]=b["json-parse"]=null,!b("json")){var m=b("bug-string-char-index"),w=function(t,e){var n,r,i,o=0;for(i in(n=function(){this.valueOf=0}).prototype.valueOf=0,r=new n)v.call(r,i)&&o++;return n=r=null,o?w=function(t,e){var n,r,i="[object Function]"==d.call(t);for(n in t)i&&"prototype"==n||!v.call(t,n)||(r="constructor"===n)||e(n);(r||v.call(t,n="constructor"))&&e(n)}:(r=["valueOf","toString","toLocaleString","propertyIsEnumerable","isPrototypeOf","hasOwnProperty","constructor"],w=function(t,e){var n,i,o="[object Function]"==d.call(t),s=!o&&"function"!=typeof t.constructor&&a[typeof t.hasOwnProperty]&&t.hasOwnProperty||v;for(n in t)o&&"prototype"==n||!s.call(t,n)||e(n);for(i=r.length;n=r[--i];)s.call(t,n)&&e(n)}),w(t,e)};if(!b("json-stringify")&&!b("date-serialization")){var E={92:"\\\\",34:'\\"',8:"\\b",12:"\\f",10:"\\n",13:"\\r",9:"\\t"},x=function(t,e){return("000000"+(e||0)).slice(-t)},T=function(t){var e,n,r,i,o,a,s,c,u;if(g)e=function(t){n=t.getUTCFullYear(),r=t.getUTCMonth(),i=t.getUTCDate(),a=t.getUTCHours(),s=t.getUTCMinutes(),c=t.getUTCSeconds(),u=t.getUTCMilliseconds()};else{var f=l.floor,h=[0,31,59,90,120,151,181,212,243,273,304,334],p=function(t,e){return h[e]+365*(t-1970)+f((t-1969+(e=+(e>1)))/4)-f((t-1901+e)/100)+f((t-1601+e)/400)};e=function(t){for(i=f(t/864e5),n=f(i/365.2425)+1970-1;p(n+1,0)<=i;n++);for(r=f((i-p(n,0))/30.42);p(n,r+1)<=i;r++);i=1+i-p(n,r),a=f((o=(t%864e5+864e5)%864e5)/36e5)%24,s=f(o/6e4)%60,c=f(o/1e3)%60,u=o%1e3}}return(T=function(t){return t>-1/0&&t<1/0?(e(t),t=(n<=0||n>=1e4?(n<0?"-":"+")+x(6,n<0?-n:n):x(4,n))+"-"+x(2,r+1)+"-"+x(2,i)+"T"+x(2,a)+":"+x(2,s)+":"+x(2,c)+"."+x(3,u)+"Z",n=r=i=a=s=c=u=null):t=null,t})(t)};if(b("json-stringify")&&!b("date-serialization")){function O(t){return T(this)}var S=e.stringify;e.stringify=function(t,e,n){var r=o.prototype.toJSON;o.prototype.toJSON=O;var i=S(t,e,n);return o.prototype.toJSON=r,i}}else{var _=function(t){var e=t.charCodeAt(0);return E[e]||"\\u00"+x(2,e.toString(16))},k=/[\x00-\x1f\x22\x5c]/g,A=function(t){return k.lastIndex=0,'"'+(k.test(t)?t.replace(k,_):t)+'"'},I=function(t,e,n,r,i,a,s){var c,f,l,h,p,v,g,b,m;if(y(function(){c=e[t]}),"object"==typeof c&&c&&(c.getUTCFullYear&&"[object Date]"==d.call(c)&&c.toJSON===o.prototype.toJSON?c=T(c):"function"==typeof c.toJSON&&(c=c.toJSON(t))),n&&(c=n.call(e,t,c)),null==c)return void 0===c?c:"null";switch("object"==(f=typeof c)&&(l=d.call(c)),l||f){case"boolean":case"[object Boolean]":return""+c;case"number":case"[object Number]":return c>-1/0&&c<1/0?""+c:"null";case"string":case"[object String]":return A(""+c)}if("object"==typeof c){for(g=s.length;g--;)if(s[g]===c)throw u();if(s.push(c),h=[],b=a,a+=i,"[object Array]"==l){for(v=0,g=c.length;v<g;v++)p=I(v,c,n,r,i,a,s),h.push(void 0===p?"null":p);m=h.length?i?"[\n"+a+h.join(",\n"+a)+"\n"+b+"]":"["+h.join(",")+"]":"[]"}else w(r||c,function(t){var e=I(t,c,n,r,i,a,s);void 0!==e&&h.push(A(t)+":"+(i?" ":"")+e)}),m=h.length?i?"{\n"+a+h.join(",\n"+a)+"\n"+b+"}":"{"+h.join(",")+"}":"{}";return s.pop(),m}};e.stringify=function(t,e,n){var r,i,o,s;if(a[typeof e]&&e)if("[object Function]"==(s=d.call(e)))i=e;else if("[object Array]"==s){o={};for(var c,u=0,f=e.length;u<f;)c=e[u++],"[object String]"!=(s=d.call(c))&&"[object Number]"!=s||(o[c]=1)}if(n)if("[object Number]"==(s=d.call(n))){if((n-=n%1)>0)for(n>10&&(n=10),r="";r.length<n;)r+=" "}else"[object String]"==s&&(r=n.length<=10?n:n.slice(0,10));return I("",((c={})[""]=t,c),i,o,r,"",[])}}}if(!b("json-parse")){var C,j,P=r.fromCharCode,R={92:"\\",34:'"',47:"/",98:"\b",116:"\t",110:"\n",102:"\f",114:"\r"},L=function(){throw C=j=null,s()},N=function(){for(var t,e,n,r,i,o=j,a=o.length;C<a;)switch(i=o.charCodeAt(C)){case 9:case 10:case 13:case 32:C++;break;case 123:case 125:case 91:case 93:case 58:case 44:return t=m?o.charAt(C):o[C],C++,t;case 34:for(t="@",C++;C<a;)if((i=o.charCodeAt(C))<32)L();else if(92==i)switch(i=o.charCodeAt(++C)){case 92:case 34:case 47:case 98:case 116:case 110:case 102:case 114:t+=R[i],C++;break;case 117:for(e=++C,n=C+4;C<n;C++)(i=o.charCodeAt(C))>=48&&i<=57||i>=97&&i<=102||i>=65&&i<=70||L();t+=P("0x"+o.slice(e,C));break;default:L()}else{if(34==i)break;for(i=o.charCodeAt(C),e=C;i>=32&&92!=i&&34!=i;)i=o.charCodeAt(++C);t+=o.slice(e,C)}if(34==o.charCodeAt(C))return C++,t;L();default:if(e=C,45==i&&(r=!0,i=o.charCodeAt(++C)),i>=48&&i<=57){for(48==i&&(i=o.charCodeAt(C+1))>=48&&i<=57&&L(),r=!1;C<a&&(i=o.charCodeAt(C))>=48&&i<=57;C++);if(46==o.charCodeAt(C)){for(n=++C;n<a&&!((i=o.charCodeAt(n))<48||i>57);n++);n==C&&L(),C=n}if(101==(i=o.charCodeAt(C))||69==i){for(43!=(i=o.charCodeAt(++C))&&45!=i||C++,n=C;n<a&&!((i=o.charCodeAt(n))<48||i>57);n++);n==C&&L(),C=n}return+o.slice(e,C)}r&&L();var s=o.slice(C,C+4);if("true"==s)return C+=4,!0;if("fals"==s&&101==o.charCodeAt(C+4))return C+=5,!1;if("null"==s)return C+=4,null;L()}return"$"},D=function(t){var e,n;if("$"==t&&L(),"string"==typeof t){if("@"==(m?t.charAt(0):t[0]))return t.slice(1);if("["==t){for(e=[];"]"!=(t=N());)n?","==t?"]"==(t=N())&&L():L():n=!0,","==t&&L(),e.push(D(t));return e}if("{"==t){for(e={};"}"!=(t=N());)n?","==t?"}"==(t=N())&&L():L():n=!0,","!=t&&"string"==typeof t&&"@"==(m?t.charAt(0):t[0])&&":"==N()||L(),e[t.slice(1)]=D(N());return e}L()}return t},U=function(t,e,n){var r=M(t,e,n);void 0===r?delete t[e]:t[e]=r},M=function(t,e,n){var r,i=t[e];if("object"==typeof i&&i)if("[object Array]"==d.call(i))for(r=i.length;r--;)U(d,w,i);else w(i,function(t){U(i,t,n)});return n.call(t,e,i)};e.parse=function(t,e){var n,r;return C=0,j=""+t,n=D(N()),"$"!=N()&&L(),C=j=null,e&&"[object Function]"==d.call(e)?M(((r={})[""]=n,r),"",e):n}}}return e.runInContext=f,e}if(!u||u.global!==u&&u.window!==u&&u.self!==u||(c=u),s&&!o)f(c,s);else{var l=c.JSON,h=c.JSON3,p=!1,d=f(c,c.JSON3={noConflict:function(){return p||(p=!0,c.JSON=l,c.JSON3=h,l=h=null),d}});c.JSON={parse:d.parse,stringify:d.stringify}}o&&(void 0===(i=function(){return d}.call(e,n,e,t))||(t.exports=i))}).call(this)}).call(this,n(124)(t),n(6))},function(t,e,n){"use strict";var r=/^https?:\/\//;e.a=function(t){return null==t||r.test(t)?t:"https://".concat(t)}},function(t,e,n){"use strict";n.d(e,"c",function(){return r}),n.d(e,"b",function(){return i}),n.d(e,"a",function(){return o}),n(14),n(9),n(25),n(125),n(21),n(26);var r=function(t,e){return new Promise(function(n){setTimeout(function(){n(e)},t)})};function i(t){return"string"==typeof t||t instanceof String}function o(t){var e=function(t){return function(t,e){var n=e.exec(t);return n?parseInt(n[1]):null}(t,/#EXT-X-TARGETDURATION:(\d+)/g)}(t);return e&&(e=e/2*1e3),e}},function(t,e,n){"use strict";function r(t){setTimeout(function(){throw t},0)}n.d(e,"a",function(){return r})},function(t,e,n){"use strict";function r(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function i(t,e,n){return e&&r(t.prototype,e),n&&r(t,n),t}function o(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}n.d(e,"a",function(){return f}),n.d(e,"b",function(){return l}),n(79);var a="INGEST",s="PEER",c=function t(e,n,r){o(this,t),Object.assign(this,{id:e,pos:n,sizeBytes:r})},u=function(){function t(e,n,r,i,a,s,c,u){o(this,t),this.type=e,this.nodeId=n,this.tenantId=r,i&&(this.sourceId=i),this.contentId=a,this.objectId=s,this.timestamp=Math.floor(c),this.requestStart=Math.floor(u)}return i(t,[{key:"startLoading",value:function(t,e){this.loadInit=Math.floor(t),this.sourceId=this.sourceId||e}},{key:"fail",value:function(t,e,n){this.loadInit||(this.loadInit=0),e&&(this.sourceId=e),this.component=new c("payload",0,0),this.status=!1,this.statusCode=n||500,this.requestEnd=Math.floor(t)}},{key:"stop",value:function(t,e){this.requestEnd=Math.floor(t),this.component=new c("payload",0,e),this.statusCode=200,this.status=!0}}]),t}();function f(t,e,n,r,i,o){return new u(s,t,e,n,r,i,Date.now(),o)}function l(t,e,n,r,i,o){return new u(a,t,e,n,r,i,Date.now(),o)}var h=new(function(){function t(){o(this,t),this.firstRequestTime=null,this.peerRequests=[],this.sourceRequests=[]}return i(t,[{key:"clear",value:function(){this.peerRequests=[],this.sourceRequests=[]}},{key:"addPeerRequest",value:function(t){this.firstRequestTime||(this.firstRequestTime=t.timestamp),this.peerRequests.push(t)}},{key:"addSourceRequest",value:function(t){this.firstRequestTime||(this.firstRequestTime=t.timestamp),this.sourceRequests.push(t)}}]),t}());e.c=h},function(t,e,n){var r=n(16),i=n(142),o=n(64),a=n(41),s=n(92),c=n(19),u=n(184),f=Object.getOwnPropertyDescriptor;e.f=r?f:function(t,e){if(t=a(t),e=s(e,!0),u)try{return f(t,e)}catch(t){}if(c(t,e))return o(!i.f.call(t,e),t[e])}},function(t,e){var n={}.toString;t.exports=function(t){return n.call(t).slice(8,-1)}},function(t,e,n){var r=n(187),i=n(4),o=function(t){return"function"==typeof t?t:void 0};t.exports=function(t,e){return arguments.length<2?o(r[t])||o(i[t]):r[t]&&r[t][e]||i[t]&&i[t][e]}},function(t,e,n){var r=n(24).f,i=n(19),o=n(7)("toStringTag");t.exports=function(t,e,n){t&&!i(t=n?t:t.prototype,o)&&r(t,o,{configurable:!0,value:e})}},function(t,e,n){"use strict";var r=n(2),i=n(3),o=n(111),a=n(11),s=n(36),c=n(20),u=n(116),f=n(195),l=n(117),h=n(7),p=n(159),d=h("isConcatSpreadable"),v=p>=51||!i(function(){var t=[];return t[d]=!1,t.concat()[0]!==t}),y=l("concat"),g=function(t){if(!a(t))return!1;var e=t[d];return void 0!==e?!!e:o(t)};r({target:"Array",proto:!0,forced:!v||!y},{concat:function(t){var e,n,r,i,o,a=s(this),l=f(a,0),h=0;for(e=-1,r=arguments.length;e<r;e++)if(o=-1===e?a:arguments[e],g(o)){if(h+(i=c(o.length))>9007199254740991)throw TypeError("Maximum allowed index exceeded");for(n=0;n<i;n++,h++)n in o&&u(l,h,o[n])}else{if(h>=9007199254740991)throw TypeError("Maximum allowed index exceeded");u(l,h++,o)}return l.length=h,l}})},function(t,e,n){"use strict";var r=n(2),i=n(37).map,o=n(117),a=n(49),s=o("map"),c=a("map");r({target:"Array",proto:!0,forced:!s||!c},{map:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){"use strict";(function(e){var r=n(82),i={},o=!1,a=e.chrome&&e.chrome.app&&e.chrome.app.runtime;t.exports={attachEvent:function(t,n){void 0!==e.addEventListener?e.addEventListener(t,n,!1):e.document&&e.attachEvent&&(e.document.attachEvent("on"+t,n),e.attachEvent("on"+t,n))},detachEvent:function(t,n){void 0!==e.addEventListener?e.removeEventListener(t,n,!1):e.document&&e.detachEvent&&(e.document.detachEvent("on"+t,n),e.detachEvent("on"+t,n))},unloadAdd:function(t){if(a)return null;var e=r.string(8);return i[e]=t,o&&setTimeout(this.triggerUnloadCallbacks,0),e},unloadDel:function(t){t in i&&delete i[t]},triggerUnloadCallbacks:function(){for(var t in i)i[t](),delete i[t]}},a||t.exports.attachEvent("unload",function(){o||(o=!0,t.exports.triggerUnloadCallbacks())})}).call(this,n(6))},function(t,e,n){var r=n(272),i=n(204);t.exports=function(t,e,n){var o=e&&n||0;"string"==typeof t&&(e="binary"===t?new Array(16):null,t=null);var a=(t=t||{}).random||(t.rng||r)();if(a[6]=15&a[6]|64,a[8]=63&a[8]|128,e)for(var s=0;s<16;++s)e[o+s]=a[s];return e||i(a)}},function(t,e,n){!function(e,n){var r={version:"2.10.0",areas:{},apis:{},inherit:function(t,e){for(var n in t)e.hasOwnProperty(n)||Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n));return e},stringify:function(t){return void 0===t||"function"==typeof t?t+"":JSON.stringify(t)},parse:function(t){try{return JSON.parse(t)}catch(e){return t}},fn:function(t,e){for(var n in r.storeAPI[t]=e,r.apis)r.apis[n][t]=e},get:function(t,e){return t.getItem(e)},set:function(t,e,n){t.setItem(e,n)},remove:function(t,e){t.removeItem(e)},key:function(t,e){return t.key(e)},length:function(t){return t.length},clear:function(t){t.clear()},Store:function(t,e,n){var i=r.inherit(r.storeAPI,function(t,e,n){return 0===arguments.length?i.getAll():"function"==typeof e?i.transact(t,e,n):void 0!==e?i.set(t,e,n):"string"==typeof t||"number"==typeof t?i.get(t):"function"==typeof t?i.each(t):t?i.setAll(t,e):i.clear()});i._id=t;try{e.setItem("_-bad-_","wolf"),i._area=e,e.removeItem("_-bad-_")}catch(t){}return i._area||(i._area=r.storage("fake")),i._ns=n||"",r.areas[t]||(r.areas[t]=i._area),r.apis[i._ns+i._id]||(r.apis[i._ns+i._id]=i),i},storeAPI:{area:function(t,e){var n=this[t];return n&&n.area||(n=r.Store(t,e,this._ns),this[t]||(this[t]=n)),n},namespace:function(t,e){if(!t)return this._ns?this._ns.substring(0,this._ns.length-1):"";var n=t,i=this[n];if(!(i&&i.namespace||(i=r.Store(this._id,this._area,this._ns+n+"."),this[n]||(this[n]=i),e)))for(var o in r.areas)i.area(o,r.areas[o]);return i},isFake:function(){return"fake"===this._area.name},toString:function(){return"store"+(this._ns?"."+this.namespace():"")+"["+this._id+"]"},has:function(t){return this._area.has?this._area.has(this._in(t)):!!(this._in(t)in this._area)},size:function(){return this.keys().length},each:function(t,e){for(var n=0,i=r.length(this._area);n<i;n++){var o=this._out(r.key(this._area,n));if(void 0!==o&&!1===t.call(this,o,this.get(o),e))break;i>r.length(this._area)&&(i--,n--)}return e||this},keys:function(t){return this.each(function(t,e,n){n.push(t)},t||[])},get:function(t,e){var n=r.get(this._area,this._in(t));return null!==n?r.parse(n):e||n},getAll:function(t){return this.each(function(t,e,n){n[t]=e},t||{})},transact:function(t,e,n){var r=this.get(t,n),i=e(r);return this.set(t,void 0===i?r:i),this},set:function(t,e,n){var i=this.get(t);return null!=i&&!1===n?e:r.set(this._area,this._in(t),r.stringify(e),n)||i},setAll:function(t,e){var n,r;for(var i in t)r=t[i],this.set(i,r,e)!==r&&(n=!0);return n},add:function(t,e){var n=this.get(t);if(n instanceof Array)e=n.concat(e);else if(null!==n){var i=typeof n;if(i===typeof e&&"object"===i){for(var o in e)n[o]=e[o];e=n}else e=n+e}return r.set(this._area,this._in(t),r.stringify(e)),e},remove:function(t,e){var n=this.get(t,e);return r.remove(this._area,this._in(t)),n},clear:function(){return this._ns?this.each(function(t){r.remove(this._area,this._in(t))},1):r.clear(this._area),this},clearAll:function(){var t=this._area;for(var e in r.areas)r.areas.hasOwnProperty(e)&&(this._area=r.areas[e],this.clear());return this._area=t,this},_in:function(t){return"string"!=typeof t&&(t=r.stringify(t)),this._ns?this._ns+t:t},_out:function(t){return this._ns?t&&0===t.indexOf(this._ns)?t.substring(this._ns.length):void 0:t}},storage:function(t){return r.inherit(r.storageAPI,{items:{},name:t})},storageAPI:{length:0,has:function(t){return this.items.hasOwnProperty(t)},key:function(t){var e=0;for(var n in this.items)if(this.has(n)&&t===e++)return n},setItem:function(t,e){this.has(t)||this.length++,this.items[t]=e},removeItem:function(t){this.has(t)&&(delete this.items[t],this.length--)},getItem:function(t){return this.has(t)?this.items[t]:null},clear:function(){for(var t in this.items)this.removeItem(t)}}},i=r.Store("local",function(){try{return localStorage}catch(t){}}());i.local=i,i._=r,i.area("session",function(){try{return sessionStorage}catch(t){}}()),i.area("page",r.storage("page")),"function"==typeof n&&void 0!==n.amd?n("store2",[],function(){return i}):t.exports?t.exports=i:(e.store&&(r.conflict=e.store),e.store=i)}(this,this&&this.define)},function(t,e){t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},function(t,e){var n=Math.ceil,r=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?r:n)(t)}},function(t,e,n){var r,i=n(17),o=n(190),a=n(148),s=n(94),c=n(191),u=n(143),f=n(110)("IE_PROTO"),l=function(){},h=function(t){return"<script>"+t+"<\/script>"},p=function(){try{r=document.domain&&new ActiveXObject("htmlfile")}catch(t){}var t,e;p=r?function(t){t.write(h("")),t.close();var e=t.parentWindow.Object;return t=null,e}(r):((e=u("iframe")).style.display="none",c.appendChild(e),e.src=String("javascript:"),(t=e.contentWindow.document).open(),t.write(h("document.F=Object")),t.close(),t.F);for(var n=a.length;n--;)delete p.prototype[a[n]];return p()};s[f]=!0,t.exports=Object.create||function(t,e){var n;return null!==t?(l.prototype=i(t),n=new l,l.prototype=null,n[f]=t):n=p(),void 0===e?n:o(n,e)}},function(t,e,n){var r=n(68);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 0:return function(){return t.call(e)};case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,i){return t.call(e,n,r,i)}}return function(){return t.apply(e,arguments)}}},function(t,e){t.exports=function(t){if("function"!=typeof t)throw TypeError(String(t)+" is not a function");return t}},function(t,e){t.exports=function(t,e,n){if(!(t instanceof e))throw TypeError("Incorrect "+(n?n+" ":"")+"invocation");return t}},function(t,e,n){var r=n(17),i=n(68),o=n(7)("species");t.exports=function(t,e){var n,a=r(t).constructor;return void 0===a||null==(n=r(a)[o])?e:i(n)}},function(t,e,n){"use strict";var r=n(38),i=n(17),o=n(3),a=n(202),s=RegExp.prototype,c=s.toString,u=o(function(){return"/a/b"!=c.call({source:"a",flags:"b"})}),f="toString"!=c.name;(u||f)&&r(RegExp.prototype,"toString",function(){var t=i(this),e=String(t.source),n=t.flags;return"/"+e+"/"+String(void 0===n&&t instanceof RegExp&&!("flags"in s)?a.call(t):n)},{unsafe:!0})},function(t,e,n){var r=n(16),i=n(24).f,o=Function.prototype,a=o.toString,s=/^\s*function ([^ (]*)/;!r||"name"in o||i(o,"name",{configurable:!0,get:function(){try{return a.call(this).match(s)[1]}catch(t){return""}}})},function(t,e,n){var r=n(289),i=n(294);t.exports=function(t,e){var n=i(t,e);return r(n)?n:void 0}},function(t,e,n){"use strict";n.d(e,"a",function(){return r});var r="function"==typeof Symbol?Symbol("rxSubscriber"):"@@rxSubscriber_"+Math.random()},function(t,e){t.exports=function(t){if(null==t)throw TypeError("Can't call method on "+t);return t}},function(t,e){t.exports=!1},function(t,e,n){var r=n(65),i=Math.max,o=Math.min;t.exports=function(t,e){var n=r(t);return n<0?i(n+e,0):o(n,e)}},function(t,e,n){var r=n(19),i=n(36),o=n(110),a=n(154),s=o("IE_PROTO"),c=Object.prototype;t.exports=a?Object.getPrototypeOf:function(t){return t=i(t),r(t,s)?t[s]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?c:null}},function(t,e,n){var r=n(2),i=n(206);r({target:"Object",stat:!0,forced:Object.assign!==i},{assign:i})},function(t,e,n){var r=n(2),i=n(3),o=n(192).f;r({target:"Object",stat:!0,forced:i(function(){return!Object.getOwnPropertyNames(1)})},{getOwnPropertyNames:o})},function(t,e){t.exports=function(t){return null!=t&&"object"==typeof t}},function(t,e,n){"use strict";var r=n(371);t.exports={string:function(t){for(var e="abcdefghijklmnopqrstuvwxyz012345".length,n=r.randomBytes(t),i=[],o=0;o<t;o++)i.push("abcdefghijklmnopqrstuvwxyz012345".substr(n[o]%e,1));return i.join("")},number:function(t){return Math.floor(Math.random()*t)},numberString:function(t){var e=(""+(t-1)).length;return(new Array(e+1).join("0")+this.number(t)).slice(-e)}}},function(t,e,n){"use strict";var r=n(5),i=n(39),o=n(234);function a(t,e,n,r){o.call(this,t,e,function(t){return function(e,n,r){var o={};"string"==typeof n&&(o.headers={"Content-type":"text/plain"});var a=i.addPath(e,"/xhr_send"),s=new t("POST",a,n,o);return s.once("finish",function(t){if(s=null,200!==t&&204!==t)return r(new Error("http status "+t));r()}),function(){s.close(),s=null;var t=new Error("Aborted");t.code=1e3,r(t)}}}(r),n,r)}r(a,o),t.exports=a},function(t,e,n){"use strict";function r(t){var e=t.playerElement();return e&&e.getElementsByTagName("video")[0]}function i(t){var e=t.el();return e&&e.getElementsByTagName("video")[0]}n.d(e,"a",function(){return r}),n.d(e,"b",function(){return i})},function(t,e,n){"use strict";n(13),n(22),n(15),n(31),n(32),n(28),n(9),n(25),n(18);var r=n(86);function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}e.a=function(t){return new Promise(function(e,n){Object(r.a)(function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach(function(e){o(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}({},t,{onSuccess:function(t,n){return e({data:t,request:n})},onFailure:n,onTimeout:n}))})}},function(t,e,n){"use strict";(function(t){n(15),n(80),n(18),n(276);var r=n(180),i=n(253),o=n(1);e.a=function(e){var n=e.method||"GET",a=e.url+Object(r.stringify)(e.params,!0),s=e.headers||{},c=null==e.expectJson||e.expectJson,u=null==e.jsonContent||e.jsonContent,f=null==e.async||e.async,l=e.onSuccess||o.d,h=e.onFailure||o.d,p=e.onTimeout||o.d,d=e.timeout||0,v=e.body,y=e.ignoreEdgeTimeout,g=new XMLHttpRequest;g.onreadystatechange=function(){if(g&&g.readyState===XMLHttpRequest.DONE)if(g.status>=200&&g.status<400){var e=c&&g.responseText?JSON.parse(g.responseText):g.responseText;l(e,g)}else g.status>=400?h(g):g.status<100&&t(function(){g.onreadystatechange&&h(g)})},g.open(n,a,f),function(t,e,n,r){var o=Object(i.a)();if(!(e<=0||o&&r)){var a=function(){o&&t.readyState===XMLHttpRequest.DONE||(t.onreadystatechange=null,o||t.abort(),n(t))};o?setTimeout(a,e):(t.ontimeout=a,t.timeout=e)}}(g,d,p,y),e.withCredentials&&(g.withCredentials=e.withCredentials),c&&g.setRequestHeader("Accept","application/json"),"GET"!==n&&u&&g.setRequestHeader("Content-Type","application/json"),Object.getOwnPropertyNames(s).forEach(function(t){g.setRequestHeader(t,s[t])}),g.send(JSON.stringify(v))}}).call(this,n(273).setImmediate)},function(t,e,n){"use strict";n(59);var r=n(23),i=n(1),o=n(51),a=(n(22),n(15),n(14),n(60),n(104),n(9),n(25),n(21),n(18),n(26),n(40)),s=n.n(a),c=(n(174),n(0)),u=(n(13),n(47),n(48),n(127),n(28),n(71),n(183)),f=n.n(u);function l(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function p(t,e,n){return e&&h(t.prototype,e),n&&h(t,n),t}var d=0,v="PENDING",y="ESTABLISHED",g=function(){function t(){l(this,t),this.arr=[]}return p(t,[{key:"push",value:function(t){this.arr.unshift(t)}},{key:"popAll",value:function(){var t=function(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}(this.arr);return this.arr=[],t}}]),t}(),b=new(function(){function t(){l(this,t),this.state=d,this.dispatchQueue=new g}return p(t,[{key:"init",value:function(t,e,n){var r=this,i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{onclose:function(){},onerror:function(){},onopen:function(){},onreconnect:function(){}};this.config=e,this.endpoint=t,this.rpcEndpoint=n,this.tick();var o=i.onclose,a=i.onerror,s=i.onopen,u=i.onreconnect;this.handlers=i,this.idleTimeMs=e.webrtc_idle_shutdown_ms||18e4;var l=this;return this.idleTimer=setInterval(function(){l.lastUsed?Date.now()-l.lastUsed>l.idleTimeMs&&(c.a.i("Socket is idle. Closing."),l.close(),l.state=4,clearTimeout(l.idleTimer)):(c.a.i("lastUsed was unset - ".concat(l.lastUsed),l),l.lastUsed=Date.now())},3e4),new Promise(function(t,e){r.eb=new f.a(r.endpoint,r.config),r.eb.enableReconnect(!0),r.eb.onopen=function(){s&&r.eb.state===f.a.OPEN&&(s(),r.state=1),t()},r.eb.onreconnect=function(){r.state=2,u&&u(),r.dispatchQueue.popAll().forEach(r.dispatch)},r.eb.onerror=function(t){r.state=3,c.a.e(t),a&&a(),e()},r.eb.onclose=function(){r.state=d,o&&o()}})}},{key:"tick",value:function(){return this.lastUsed=Date.now(),this.lastUsed}},{key:"close",value:function(){this.state=d,this.eb.close(),this.eb=null}},{key:"send",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.type,r=e.payload;return this.tick(),1===this.state||2===this.state?new Promise(function(e,i){t.eb.send(n,r,function(t,n){return t?i(t):e(n)})}):4===this.state?this._restart().then(function(){new Promise(function(e,i){t.eb.send(n,r,function(t,n){return t?i(t):e(n)})})}):new Promise(function(t,e){e()})}},{key:"dispatch",value:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=e.type,r=e.payload;this.tick(),1===this.state||2===this.state?this.eb.send(n,r):4===this.state?this._restart().then(function(){t.dispatchQueue.popAll().forEach(t.dispatch)}):this.dispatchQueue.push({type:n,payload:r})}},{key:"_constructMessage",value:function(t,e){return{type:this.rpcEndpoint,payload:{type:t,payload:e}}}},{key:"_restart",value:function(){return c.a.i("Restarting the Signalling connection."),this.init(this.config,this.endpoint,this.rpcEndpoint,this.handlers)}},{key:"registerHandler",value:function(t,e){this.eb.registerHandler(t,e)}},{key:"provideOffer",value:function(t,e,n){this.dispatch(this._constructMessage("PEER_OFFER",{from:e,to:t,offer:n}))}},{key:"provideAnswer",value:function(t,e,n){this.dispatch(this._constructMessage("PEER_ANSWER",{from:e,to:t,answer:n}))}},{key:"sendIceCandidate",value:function(t,e,n){this.dispatch(this._constructMessage("ICE_CANDIDATE",{to:t,from:e,candidate:n}))}},{key:"findPeers",value:function(t,e,n){return n=n||15,this.send(this._constructMessage("DISCOVER_PEERS",{node:t,contentId:e,limit:n}))}},{key:"sendPeerConnectionEvent",value:function(t,e,n,r){var i={nodes:[t,e],connectionState:n};return r&&(i.rtcData=r),this.dispatch(this._constructMessage("PEER_CONNECTION",i))}},{key:"registerHandlers",value:function(t){var e=this;Object.keys(t).forEach(function(n){e.eb.registerHandler(n,t[n])})}},{key:"transferRecord",value:function(t){this.dispatch(this._constructMessage("TRANSFER_RECORD",t))}},{key:"contentStatus",value:function(t){this.dispatch(this._constructMessage("CONTENT_STATUS",t))}}]),t}()),m=(n(395),n(249),n(12)),w=n.n(m),E=n(10),x=n(42),T=n(33),O=n(46),S=function(){function t(){return Error.call(this),this.message="object unsubscribed",this.name="ObjectUnsubscribedError",this}return t.prototype=Object.create(Error.prototype),t}(),_=function(t){function e(e,n){var r=t.call(this)||this;return r.subject=e,r.subscriber=n,r.closed=!1,r}return E.a(e,t),e.prototype.unsubscribe=function(){if(!this.closed){this.closed=!0;var t=this.subject,e=t.observers;if(this.subject=null,e&&0!==e.length&&!t.isStopped&&!t.closed){var n=e.indexOf(this.subscriber);-1!==n&&e.splice(n,1)}}},e}(O.a),k=n(74),A=function(t){function e(e){var n=t.call(this,e)||this;return n.destination=e,n}return E.a(e,t),e}(T.a),I=function(t){function e(){var e=t.call(this)||this;return e.observers=[],e.closed=!1,e.isStopped=!1,e.hasError=!1,e.thrownError=null,e}return E.a(e,t),e.prototype[k.a]=function(){return new A(this)},e.prototype.lift=function(t){var e=new C(this,this);return e.operator=t,e},e.prototype.next=function(t){if(this.closed)throw new S;if(!this.isStopped)for(var e=this.observers,n=e.length,r=e.slice(),i=0;i<n;i++)r[i].next(t)},e.prototype.error=function(t){if(this.closed)throw new S;this.hasError=!0,this.thrownError=t,this.isStopped=!0;for(var e=this.observers,n=e.length,r=e.slice(),i=0;i<n;i++)r[i].error(t);this.observers.length=0},e.prototype.complete=function(){if(this.closed)throw new S;this.isStopped=!0;for(var t=this.observers,e=t.length,n=t.slice(),r=0;r<e;r++)n[r].complete();this.observers.length=0},e.prototype.unsubscribe=function(){this.isStopped=!0,this.closed=!0,this.observers=null},e.prototype._trySubscribe=function(e){if(this.closed)throw new S;return t.prototype._trySubscribe.call(this,e)},e.prototype._subscribe=function(t){if(this.closed)throw new S;return this.hasError?(t.error(this.thrownError),O.a.EMPTY):this.isStopped?(t.complete(),O.a.EMPTY):(this.observers.push(t),new _(this,t))},e.prototype.asObservable=function(){var t=new x.a;return t.source=this,t},e.create=function(t,e){return new C(t,e)},e}(x.a),C=function(t){function e(e,n){var r=t.call(this)||this;return r.destination=e,r.source=n,r}return E.a(e,t),e.prototype.next=function(t){var e=this.destination;e&&e.next&&e.next(t)},e.prototype.error=function(t){var e=this.destination;e&&e.error&&this.destination.error(t)},e.prototype.complete=function(){var t=this.destination;t&&t.complete&&this.destination.complete()},e.prototype._subscribe=function(t){return this.source?this.source.subscribe(t):O.a.EMPTY},e}(I);function j(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!t||0===t.length)return null;var n=e||t.reduce(function(t,e){return t+e.byteLength},0),r=new Uint8Array(n);return t.reduce(function(t,e){return r.set(new Uint8Array(e),t),t+e.byteLength},0),r}function P(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function L(t,e,n){return e&&R(t.prototype,e),n&&R(t,n),t}n(101),n(129),n(398),n(403),n(405),n(406),n(407),n(408),n(409),n(410),n(411),n(412),n(413),n(414),n(415),n(417),n(418),n(419),n(420),n(421),n(422),n(423),n(424),n(425),n(426),n(427),n(428);var N=Object.freeze({HAVE:1,SOURCING:2,PEERING:3,EVICTED:4}),D=Object.freeze({NOTIFY:1,REQUEST:2,AWAIT:3,DATA:4,TEXT:5,DATA_SENTINEL:6,FAILURE:7,CANCEL:8,ACK:9,CLOSE:10}),U=function(){function t(){P(this,t)}return L(t,null,[{key:"decode",value:function(t){var e=w.a.wrap(t);return{key:e.readCString(),state:e.readByte()}}},{key:"encode",value:function(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:N.HAVE;return(new w.a).writeCString(t).writeByte(e).flip().buffer}}]),t}(),M=function(){function t(){P(this,t)}return L(t,null,[{key:"decode",value:function(t){var e=w.a.wrap(t),n=e.readInt32();return{key:e.readCString(),txId:n}}},{key:"encode",value:function(t,e){return(new w.a).writeInt32(t).writeCString(e).flip().buffer}}]),t}(),B=function(){function t(){P(this,t)}return L(t,null,[{key:"decode",value:function(t){var e=w.a.wrap(t),n=e.readInt32();return{key:e.readCString(),txId:n}}},{key:"encode",value:function(t,e){return(new w.a).writeInt32(t).writeCString(e).flip().buffer}}]),t}(),F=function(){function t(){P(this,t)}return L(t,null,[{key:"decode",value:function(t){var e=w.a.wrap(t),n=e.readInt32(),r=e.readCString();return{data:e.toArrayBuffer(),txId:n,key:r}}},{key:"encode",value:function(t,e,n){return(new w.a).writeInt32(t).writeCString(e).append(n).flip().buffer}}]),t}(),H=function(){function t(){P(this,t)}return L(t,null,[{key:"decode",value:function(t){var e=w.a.wrap(t),n=e.readInt32(),r=e.readCString();return{text:e.readCString(),key:r,txId:n}}},{key:"encode",value:function(t,e,n){return(new w.a).writeInt32(t).writeCString(e).writeCString(n).flip().buffer}}]),t}(),z=function(){function t(){P(this,t)}return L(t,null,[{key:"decode",value:function(t){var e=w.a.wrap(t);return{txId:e.readInt32(),key:e.readCString(),originalSizeBytes:e.readInt32()}}},{key:"encode",value:function(t,e,n){return(new w.a).writeInt32(t).writeCString(e).writeInt32(n).flip().buffer}}]),t}(),q=function(){function t(){P(this,t)}return L(t,null,[{key:"decode",value:function(t){var e=w.a.wrap(t),n=e.readInt32();return{key:e.readCString(),txId:n,statusCode:e.readInt32()}}},{key:"encode",value:function(t,e,n){return(new w.a).writeInt32(t).writeCString(e).writeInt32(n).flip().buffer}}]),t}(),G=n(52);function $(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function V(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var W=window.performance,Y=function t(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:W.now();V(this,t),this.peerId=e,this.payload=n,this.ts=r};function J(t,e){return(new w.a).writeByte(t).append(e).flip().buffer}function Z(t){c.a.i(t);var e=new RTCPeerConnection(t.peerConfiguration,t.channelOptions);e.oniceconnectionstatechange=function(e){e.target.iceConnectionState,"failed"===e.target.iceConnectionState&&(c.a.i("Failing connection because ICE connection state transitioned to ".concat(e.target.iceConnectionState),t.peer),t.fail())},e.onicecandidate=function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{candidate:null}).candidate;c.a.i("candidate",e),e&&(t.iceCandidates.push(e),b.sendIceCandidate(t.peer,t.node,function(t){return{candidate:t.candidate,component:t.component,foundation:t.foundation,ip:t.ip,port:t.port,priority:t.priority,protocol:t.protocol,relatedAddress:t.relatedAddress,relatedPort:t.relatedPort,sdpMid:t.sdpMid,sdpMLineIndex:t.sdpMLineIndex,tcpType:t.tcpType,type:t.type,usernameFragment:t.usernameFragment}}(e)))};var n=!1,r=!1;return e.onsignalingstatechange=function(i){var o=e.signalingState;switch(c.a.i("signaling state ".concat(o),i),o){case"stable":(n||r)&&(t.signalingStable=!0,c.a.i("signaling STABLE ".concat(o)),t.addPendingCandidates());break;case"have-local-offer":case"have-remote-offer":c.a.i("have offer"),n=!0;break;case"have-local-pranswer":case"have-remote-pranswer":c.a.i("have answer"),r=!0}},e.onconnectionstatechange=function(){switch(e.connectionState){case"connected":break;case"disconnected":case"failed":c.a.i("Failing connection because connectionState transitiond to ".concat(e.connectionState),t.node,t.peer),t.fail();break;case"closed":c.a.i("Connection state transitiond to ".concat(e.connectionState),t.node,t.peer),t.close()}},e}var K=function(){function t(e,n,r,i){var o=arguments.length>4&&void 0!==arguments[4]?arguments[4]:{};V(this,t),this.cache=e,this.node=n,this.peer=r,this.peerConfiguration=i,this.channelOptions=o,this.peerState=new Map,this.pendingChunks=new Map,this.pendingResponse=new Map,this.state=v,this.iceCandidates=[],this.peerIceCandidates=[],this.connectionRetries=0,this.connectionOffered=!1,this.signalingStable=!1}var e,n;return e=t,(n=[{key:"_incrementRetries",value:function(){this.connectionRetries=this.connectionRetries+1}},{key:"canRetry",value:function(){return this.connectionOffered&&this.connectionRetries<3}},{key:"_buildRtcData",value:function(){var t=this.iceCandidates,e=this.peerIceCandidates,n=this.peerConnection,r={iceCandidates:t,peerIceCandidates:e,node:this.node,peer:this.peer};if(n&&"closed"!=n.signalingState){var i=n.localDescription,o=n.remoteDescription,a=n.currentLocalDescription,s=n.currentRemoteDescription,c=n.pendingLocalDescription,u=n.pendingRemoteDescription,f=n.signalingState,l=n.iceConnectionState;i&&(r.localDescription=i),o&&(r.remoteDescription=o),a&&(r.currentLocalDescription=a),s&&(r.currentRemoteDescription=s),c&&(r.pendingLocalDescription=c),u&&(r.pendingRemoteDescription=u),f&&(r.signalingState=f),l&&(r.iceConnectionState=l)}else r.signalingState="closed";return r}},{key:"onclose",value:function(){}},{key:"onopen",value:function(){}},{key:"offerConnection",value:function(){var t=this;return this._incrementRetries(),this.connectionOffered=!0,b.sendPeerConnectionEvent(this.node,this.peer,v,this._buildRtcData()),this.peerConnection=Z(this),this.dataChannel=this.peerConnection.createDataChannel(this.node.nodeId,this.channelOptions),this.setupDataChannel(),this.peerConnection.createOffer().then(function(e){return t.peerConnection.setLocalDescription(e)}).then(function(){var e=t.peerConnection,n=e.localDescription;b.provideOffer(t.peer,t.node,n),setTimeout(function(){e.remoteDescription||(c.a.i("No remote description set. Assuming the client never received an answer, closing."),t.close())},1e4)})}},{key:"handleAnswer",value:function(t){var e=this;b.sendPeerConnectionEvent(this.node,this.peer,v,this._buildRtcData()),this.peerConnection.setRemoteDescription(t).then(function(){return e.peerConnection.localDescription},function(t){c.a.e(t)})}},{key:"answerConnection",value:function(t){var e=this;this.peerConnection=Z(this),this.peerConnection.ondatachannel=function(t){e.dataChannel=t.channel,e.setupDataChannel()},this.peerConnection.setRemoteDescription(t).then(function(){e.peerConnection.createAnswer().then(function(t){e.peerConnection.setLocalDescription(t),b.provideAnswer(e.peer,e.node,t)},function(t){c.a.e(t)})})}},{key:"addPendingCandidates",value:function(){var t=this;this.peerIceCandidates.forEach(function(e){return t.peerConnection.addIceCandidate(e)})}},{key:"handleIceCandidate",value:function(t){if(null!==t)try{this.peerConnection?(this.peerIceCandidates.push(t),this.signalingStable&&this.peerConnection.addIceCandidate(t)):c.a.e("Received iceCandidate when peerConnection was null.",t)}catch(t){c.a.i("failed to add ice candidate",t)}}},{key:"_cleanupResources",value:function(t){var e=this;this.dataChannel&&this.dataChannel.close(),this.peerConnection&&this.peerConnection.close(),this.pendingResponse&&this.pendingResponse.forEach(function(n){var r="Peer connection ".concat(t?"failed":"closed");n.error({error:{message:r},peerId:e.peer.nodeId})})}},{key:"_retryOrClose",value:function(){this.canRetry()?(c.a.i("Retrying connection. ".concat(this.connectionRetries," previous attempts."),this.node,this.peer),this.offerConnection()):(c.a.i("Closing connection.",this.node,this.peer),this.onclose())}},{key:"fail",value:function(){c.a.i("Failing PeerChannel for peer: "+this.peer.nodeId,this.peer),this._cleanupResources(!0),b.sendPeerConnectionEvent(this.node,this.peer,"FAILED",this._buildRtcData()),this._retryOrClose()}},{key:"close",value:function(t){return c.a.i("Closing PeerChannel for peer: "+this.peer.nodeId,this.peer),this._cleanupResources(!1),b.sendPeerConnectionEvent(this.node,this.peer,"CLOSED",this._buildRtcData()),t?void 0:void this._retryOrClose()}},{key:"setupDataChannel",value:function(){var t;this.dataChannel.onopen=(t=this,function(){t.state=y,t.onopen(),t.cache.keys().forEach(function(e){t.notify(e,N.HAVE)}),b.sendPeerConnectionEvent(t.node,t.peer,t.state,t._buildRtcData())}),this.dataChannel.onerror=function(t){return function(e){c.a.i("data channel error",e,t),t.close()}}(this),this.dataChannel.onclose=function(t){return function(){c.a.i("data channel closed",t),t.close()}}(this),this.dataChannel.onmessage=function(t){return function(e){var n,r;(n=e,r=n.data,r instanceof ArrayBuffer?Promise.resolve(r):"function"==typeof r.arrayBuffer?r.arrayBuffer():Promise.resolve(r)).then(function(e){if(e){b.tick();var n=w.a.wrap(e),r=n.readByte(),i=n.toArrayBuffer();switch(r){case D.NOTIFY:var o=U.decode(i),a=o.key,s=o.state;s===N.EVICTED?t.peerState.delete(a):t.peerState.set(a,s);break;case D.REQUEST:var u=M.decode(i),f=u.key,l=u.txId,h=t.cache.get(f);t.respond(f,h,l);break;case D.AWAIT:var p=B.decode(i),d=p.key,v=p.txId;Promise.race([t.cache.await(v,d),Object(G.c)(4e3,null)]).then(function(e){t.respond(d,e,v)});break;case D.DATA:var y=F.decode(i),g=y.data,m=y.txId,E=new Y(t.peer.nodeId,g,W.now()),x=t.pendingChunks.get(m)||[];x.push(E),t.pendingChunks.set(m,x);break;case D.TEXT:var T=H.decode(i),O=T.text,S=T.txId,_=t.pendingResponse.get(S),k=new Y(t.peer.nodeId,O,W.now());_.next(k),t.pendingResponse.delete(S),_.complete();break;case D.DATA_SENTINEL:var A=z.decode(i),I=t.pendingResponse.get(A.txId);try{var C=t.aggregateChunks(A.txId),j=C.data,P=C.ts;if(j.byteLength===A.originalSizeBytes){var R=new Y(t.peer.nodeId,j,P);I.next(R)}else{var L={error:{message:"Invalid size after unchunking",statusCode:444},peerId:t.peer.nodeId};I.error(L)}}catch(e){var $={error:{message:e.message,statusCode:500},peerId:t.peer.nodeId};I.error($)}finally{t.pendingResponse.delete(A.txId),I.complete()}break;case D.FAILURE:var V=q.decode(i),J=t.pendingResponse.get(V.txId),Z={error:{message:"Failed to Peer data",data:V,statusCode:V.statusCode},peerId:t.peer.nodeId};J.error(Z),t.pendingResponse.delete(V.txId);break;case D.CANCEL:case D.ACK:case D.CLOSE:break;default:c.a.i("unhandled peer message")}}}).catch(function(t){c.a.i("failed to handle datachannel message.",t)})}}(this)}},{key:"getState",value:function(t){return this.peerState.get(t)}},{key:"notify",value:function(t,e){var n=J(D.NOTIFY,U.encode(t,e));try{this.dataChannelSend(n)}catch(t){c.a.i(this,t)}}},{key:"dataChannelSend",value:function(t){try{this.dataChannel.send(t)}catch(t){if(c.a.i("Failed to send on data channel to peer: "+this.peer.nodeId,t),this.dataChannel)switch(this.dataChannel.readyState){case"connecting":case"closing":case"closed":return c.a.i("Closing connection due to DataChannel readyState ".concat(this.dataChannel.readyState),this.dataChannel),void this.close()}if(this.peerConnection)switch(this.peerConnection.connectionState){case"disconnected":case"failed":case"closed":return c.a.i("Closing connection with PeerConnection.connectionState ".concat(this.peerConnection.connectionState),this.peerConnection),void this.close()}}}},{key:"awaitData",value:function(t){var e=this.getTxId(),n=J(D.AWAIT,B.encode(e,t));this.dataChannelSend(n);var r=new I;return this.pendingResponse.set(e,r),r}},{key:"fetchData",value:function(t){var e=this.getTxId(),n=J(D.REQUEST,M.encode(e,t));this.dataChannelSend(n);var r=new I;return this.pendingResponse.set(e,r),r}},{key:"aggregateChunks",value:function(t){var e=this.pendingChunks.get(t);return this.pendingChunks.delete(t),{data:j(e.map(function(t){return t.payload})),ts:e[0].ts}}},{key:"respond",value:function(t,e,n){var r=this;if(e)if(Object(G.b)(e)){var i=J(D.TEXT,H.encode(n,t,e));this.dataChannelSend(i)}else x.a.create(function(t){!function(t,e){for(var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:65536,r=t.byteLength,i=0;i<r;i+=n){e(t.slice(i,i+n))}}(e,function(e){return t.next(e)},32768),t.complete()}).subscribe({next:function(e){var i=J(D.DATA,F.encode(n,t,e));r.dataChannelSend(i)},error:function(){var i=J(D.DATA_SENTINEL,z.encode(n,t,e.byteLength));r.dataChannelSend(i)},complete:function(){var i=J(D.DATA_SENTINEL,z.encode(n,t,e.byteLength));r.dataChannelSend(i)}});else{var o=J(D.FAILURE,q.encode(n,t,408));this.dataChannelSend(o)}}},{key:"getTxId",value:function(){return this.txId||(this.txId=1),this.txId++}}])&&$(e.prototype,n),t}();n(79);var X=function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object.assign(this,e)};function Q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}n(429);var tt=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object.assign(this,e,{node:new X(e.node),peerLimit:e.peerLimit||15})}var e,n;return e=t,(n=[{key:"signalingConfig",get:function(){return{server:this.node.nodeId,transports:["websocket"]}}},{key:"eventBusEndpointURL",get:function(){return new URL(this.eventBusEndpoint,this.baseUrl)}},{key:"localEventBusAddress",get:function(){return this.nodeAddress}},{key:"baseUrl",get:function(){return Object(o.a)(this.hostname)}}])&&Q(e.prototype,n),t}();function et(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function nt(t){return t?"string"==typeof t||t instanceof String?(new TextEncoder).encode(t).byteLength:t.byteLength?t.byteLength:t.length?t.length:0:0}var rt=function(){function t(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:256e6;(function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")})(this,t),this.maxBytes=e,this.cachedBytes=0,this.cache=new Map}var e,n;return e=t,(n=[{key:"get",value:function(t){var e=this.cache.get(t);return e&&(this.cache.delete(t),this.cache.set(t,e)),e}},{key:"set",value:function(t,e){var n=nt(e);if(n>this.maxBytes)c.a.e("payload for ".concat(t," is too large at ").concat(n," bytes."));else{for(this.cache.has(t)&&this.cache.delete(t);this.cachedBytes+n>this.maxBytes;){var r=this.cache.keys().next().value;this.delete(r)}this.cachedBytes=this.cachedBytes+n,this.cache.set(t,e)}}},{key:"has",value:function(t){return this.cache.has(t)}},{key:"keys",value:function(){return this.cache.keys()}},{key:"delete",value:function(t){var e=this.cache.get(t);return this.cachedBytes=this.cachedBytes-nt(e),this.cache.delete(t)}},{key:"onEvict",value:function(){}}])&&et(e.prototype,n),t}();function it(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ot(t,e,n){t.get(e).forEach(function(t){return t(null,n)}),t.delete(e)}var at=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.cache=new rt,this.onPut=e,this.onEvict=n,this.awaits=new Map,this.source=null}var e,n;return e=t,(n=[{key:"keys",value:function(){return Array.from(this.cache.keys())}},{key:"get",value:function(t){return this.cache.get(t)}},{key:"await",value:function(t,e){var n=this.awaits;return this.cache.has(e)?Promise.resolve(this.cache.get(e)):new Promise(function(t,r){var i=n.get(e)||[];i.push(function(e,n){e&&r(e),t(n)}),n.set(e,i)})}},{key:"put",value:function(t,e){this.source||(this.source=t),this.cache.set(t,e),this.onPut(t,e),this.awaits.has(t)&&ot(this.awaits,t,e)}},{key:"evict",value:function(t){var e=this.cache.get(t);this.cache.delete(t),this.onEvict(t,e),this.awaits.has(t)&&ot(this.awaits,t,null)}},{key:"clear",value:function(){this.cache=new rt}}])&&it(e.prototype,n),t}(),st=function t(e,n,r,i,o,a){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object.assign(this,{nodeId:e,contentId:n,objectId:r,status:i,timestamp:o,totalBytes:a})};function ct(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function ut(t,e,n,r,i,o,a){try{var s=t[o](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,i)}function ft(t){return function(){var e=this,n=arguments;return new Promise(function(r,i){var o=t.apply(e,n);function a(t){ut(o,r,i,a,s,"next",t)}function s(t){ut(o,r,i,a,s,"throw",t)}a(void 0)})}}function lt(t,e){return function(){return ft(s.a.mark(function t(e,n){var r;return s.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.prev=0,t.next=3,fetch(e,{method:"GET",mode:"cors",credentials:"include",headers:{Authorization:"Bearer ".concat(n),"Content-Type":"application/json; charset=utf-8","Access-Control-Allow-Origin":"*"}});case 3:return r=t.sent,t.next=6,r.json();case 6:return t.abrupt("return",t.sent);case 9:return t.prev=9,t.t0=t.catch(0),t.abrupt("return",{error:t.t0});case 12:case"end":return t.stop()}},t,null,[[0,9]])})).apply(this,arguments)}.apply(this,arguments)}var ht=function(){function t(e,n,r){var i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.tenantId=n,this.token=r,this.cache=new at(function(t,e){if(e){var n=Object(G.b)(e)?e.length:e.byteLength;i.sendCached(t,n)}else i.sendCached(t,0)},function(t,e){if(e){var n=Object(G.b)(e)?e.length:e.byteLength;i.sendEvicted(t,n)}else i.sendEvicted(t,0)}),this.configUrl=e,this.peerConnections=new Map,this.initPromise=null,this.initialized=!1,this.notifyPeers.bind(this)}var e,n,r;return e=t,(n=[{key:"configure",value:function(t){this.peerConfig=t,this.peerConfig&&(this.node=this.peerConfig.node)}},{key:"setupPeer",value:(r=ft(s.a.mark(function t(e){var n,r,i,o,a=this;return s.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:if(this.peerConfig){t.next=6;break}return t.next=3,lt(this.configUrl,this.token);case 3:n=t.sent,r=new tt(n),this.configure(r);case 6:return e&&e(this.node),i=this.peerConfig.localEventBusAddress,o=this.peerHandler.bind(this),t.abrupt("return",b.init(this.peerConfig.eventBusEndpointURL,this.peerConfig.signalingConfig,this.peerConfig.eventBusAddress,{onopen:function(){b.registerHandler(i,o)},onreconnect:function(){a.findPeers().then(function(t){a.addPeers(t)})}}));case 10:case"end":return t.stop()}},t,this)})),function(t){return r.apply(this,arguments)})},{key:"init",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",e=arguments.length>1?arguments[1]:void 0;if(!this.configUrl)return c.a.e("Requires a Config url to initialize peering"),Promise.resolve(this);if(!this.content||this.content.id!==t.id){this.content=t;var n=this;return this.initPromise||(this.initPromise=this.setupPeer(e)),t&&t.id?this.initPromise.then(function(){return n.initialized=!0,n.findPeers()},function(t){return c.a.i(t)}).then(function(t){return n.addPeers(t),n}):this.initPromise}return Promise.resolve(this)}},{key:"peerHandler",value:function(t,e){if(t)c.a.e(t);else{c.a.i("peerhandler, ".concat(JSON.stringify(e)));var n,r=e.body,i=r.type,o=r.payload,a=o.from;switch(a.nodeId===this.node.nodeId&&c.a.e("received a message from self"),i){case"PEER_OFFER":b.tick(),c.a.i("creating a connection for peer: "+a.nodeId),this.createPeerConnection(a,o.offer);break;case"PEER_ANSWER":b.tick(),(n=this.getPeerConnection(a))&&n.handleAnswer(o.answer);break;case"ICE_CANDIDATE":b.tick(),(n=this.getPeerConnection(a))&&n.handleIceCandidate(o.candidate);break;default:c.a.e("handled unexpected message type: "+o.type)}}}},{key:"findPeers",value:function(){return b.findPeers(this.node,this.content.id,this.peerConfig.peerLimit).then(function(t){return t.body},function(t){return c.a.i(t),[]})}},{key:"addPeers",value:function(){var t=this;(arguments.length>0&&void 0!==arguments[0]?arguments[0]:[]).map(function(t){return new X(t)}).filter(function(e){return!t.peerConnections.has(e.nodeId)}).forEach(function(e){t.createPeerConnection(e)})}},{key:"getPeerConnection",value:function(t){return t.nodeId===this.node.nodeId?(c.a.e("You cannot peer with yourself!"),null):(this.peerConnections.has(t.nodeId)||c.a.i("connection not intialized"),this.peerConnections.get(t.nodeId))}},{key:"createPeerConnection",value:function(t,e){if(t.nodeId!==this.node.nodeId){if(!this.peerConnections.has(t.nodeId)){var n=new K(this.cache,this.node,t,this.peerConfig.peerConfiguration),r=this;n.onclose=function(){r.peerConnections.delete(t.nodeId),r.peerConnections.size},e?n.answerConnection(e):n.offerConnection(),r.peerConnections.set(t.nodeId,n)}}else c.a.e("getting offer from self")}},{key:"getSource",value:function(t){return this.cache.source?this.cache.source:t}},{key:"put",value:function(t,e,n){var r=this;this.cache.put(t,e),this.notifyHave(t),n&&n>0&&setTimeout(function(){r.cache.evict(t),r.notifyEvicted(t)},n)}},{key:"lookup",value:function(t){var e=new Map([[N.HAVE,[]],[N.SOURCING,[]],[N.PEERING,[]]]);this.peerConnections.forEach(function(n){if(n.state===y){var r=n.getState(t);if(r){var i=e.get(r);i.push(n),e.set(r,i)}}});var n=e.get(N.HAVE);if(n.length>0)return n[0].fetchData(t);var r=e.get(N.PEERING);if(r.length>0)return r[0].awaitData(t);var i=e.get(N.SOURCING);return i.length>0&&i[0].awaitData(t)}},{key:"notifyPeering",value:function(t){this.notifyPeers(t,N.PEERING)}},{key:"notifySourcing",value:function(t){this.notifyPeers(t,N.SOURCING)}},{key:"notifyHave",value:function(t){this.notifyPeers(t,N.HAVE)}},{key:"notifyEvicted",value:function(t){this.notifyPeers(t,N.EVICTED)}},{key:"notifyPeers",value:function(t,e){this.peerConnections.forEach(function(n){n&&n.state===y&&n.notify(t,e)})}},{key:"awaitData",value:function(t,e){var n=this;return new Promise(function(r){n.peerConnections.get(t.nodeId).awaitData(e).then(function(t){return r(t)})})}},{key:"sendTransferRecord",value:function(t){try{b.transferRecord(t)}catch(t){c.a.i(t)}}},{key:"sendCached",value:function(t,e){var n=new st(this.node.nodeId,this.content.id,t,"CACHED",Date.now(),e);this.sendContentStatus(n)}},{key:"sendEvicted",value:function(t,e){var n=new st(this.node.nodeId,this.content.id,t,"EVICTED",Date.now(),e);this.sendContentStatus(n)}},{key:"sendContentStatus",value:function(t){try{b.contentStatus(t)}catch(t){c.a.i(t)}}},{key:"shutdown",value:function(){c.a.i("Shutting down the peer manager"),this.initialized=!1,this.peerConnections.forEach(function(t){return t.close(!0)}),this.peerConnections.clear(),b.close(),this.cache.clear()}}])&&ct(e.prototype,n),t}(),pt=n(27);function dt(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}n.d(e,"a",function(){return vt});var vt=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object(r.a)(this);var a=n.content,s=a.id,c=a.tenantId,u=a.token,f=n.detectionSource.url;if(this.bindWebRTC=n.bindWebRTC||i.d,this.peerManager=t.peerManagers[s],this.peerManager)this.peerManager.initialized||(this.initPromise=this.peerManager.init({id:s,url:f}));else{var l=Object(o.a)(n.config.sgh||n.signalHost||"signal.kollective.app"),h="".concat(l,"/api/rtc/").concat(c,"/").concat(s),p=new ht(h,c,u);t.peerManagers[s]=p,this.initPromise=p.init({id:s,url:f},function(t){!function(t,e){var n=e.nodeId,r=e.clientId,i=e.version||"1.0.0";t.set({webrtc:{v:i,nodeId:n,agentId:r}},pt.a.Sections.ECDN11)}(e,t)}),this.peerManager=p}}var e,n;return e=t,(n=[{key:"init",value:function(){return this.initPromise}},{key:"startDelivery",value:function(t){this.playerBinding=this.bindWebRTC(t,this.peerManager)}},{key:"stop",value:function(){this.playerBinding&&this.playerBinding.stop(),this.peerManager&&this.peerManager.shutdown()}}])&&dt(e.prototype,n),t}();vt.peerManagers={}},function(t,e,n){var r=n(277);t.exports=function(t){return r(t,5)}},function(t,e,n){"use strict";n.d(e,"a",function(){return r});var r="function"==typeof Symbol&&Symbol.observable||"@@observable"},function(t,e,n){"use strict";n.d(e,"a",function(){return o});var r=n(34),i=n(53),o={closed:!0,next:function(t){},error:function(t){if(r.a.useDeprecatedSynchronousErrorHandling)throw t;Object(i.a)(t)},complete:function(){}}},function(t,e,n){var r=n(3),i=n(56),o="".split;t.exports=r(function(){return!Object("z").propertyIsEnumerable(0)})?function(t){return"String"==i(t)?o.call(t,""):Object(t)}:Object},function(t,e,n){var r=n(11);t.exports=function(t,e){if(!r(t))return t;var n,i;if(e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;if("function"==typeof(n=t.valueOf)&&!r(i=n.call(t)))return i;if(!e&&"function"==typeof(n=t.toString)&&!r(i=n.call(t)))return i;throw TypeError("Can't convert object to primitive value")}},function(t,e){var n=0,r=Math.random();t.exports=function(t){return"Symbol("+String(void 0===t?"":t)+")_"+(++n+r).toString(36)}},function(t,e){t.exports={}},function(t,e,n){var r=n(188),i=n(148).concat("length","prototype");e.f=Object.getOwnPropertyNames||function(t){return r(t,i)}},function(t,e,n){var r=n(41),i=n(20),o=n(77),a=function(t){return function(e,n,a){var s,c=r(e),u=i(c.length),f=o(a,u);if(t&&n!=n){for(;u>f;)if((s=c[f++])!=s)return!0}else for(;u>f;f++)if((t||f in c)&&c[f]===n)return t||f||0;return!t&&-1}};t.exports={includes:a(!0),indexOf:a(!1)}},function(t,e){t.exports={}},function(t,e,n){var r=n(17),i=n(262);t.exports=Object.setPrototypeOf||("__proto__"in{}?function(){var t,e=!1,n={};try{(t=Object.getOwnPropertyDescriptor(Object.prototype,"__proto__").set).call(n,[]),e=n instanceof Array}catch(t){}return function(n,o){return r(n),i(o),e?t.call(n,o):n.__proto__=o,n}}():void 0)},function(t,e,n){var r=n(155),i=n(56),o=n(7)("toStringTag"),a="Arguments"==i(function(){return arguments}());t.exports=r?i:function(t){var e,n,r;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),o))?n:a?i(e):"Object"==(r=i(e))&&"function"==typeof e.callee?"Arguments":r}},function(t,e,n){var r=n(99),i=n(97),o=n(7)("iterator");t.exports=function(t){if(null!=t)return t[o]||t["@@iterator"]||i[r(t)]}},function(t,e,n){"use strict";var r=n(2),i=n(161).left,o=n(102),a=n(49),s=o("reduce"),c=a("reduce",{1:0});r({target:"Array",proto:!0,forced:!s||!c},{reduce:function(t){return i(this,t,arguments.length,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){"use strict";var r=n(3);t.exports=function(t,e){var n=[][t];return!!n&&r(function(){n.call(null,e||function(){throw 1},1)})}},function(t,e){t.exports=function(t){var e=typeof t;return null!=t&&("object"==e||"function"==e)}},function(t,e,n){"use strict";var r=n(366),i=n(367);t.exports=r("Map",function(t){return function(){return t(this,arguments.length?arguments[0]:void 0)}},i)},function(t,e,n){"use strict";var r=n(5),i=n(235);function o(t,e,n){i.call(this,t,e,n,{noCredentials:!0})}r(o,i),o.enabled=i.enabled,t.exports=o},function(t,e,n){"use strict";(function(e){t.exports={isOpera:function(){return e.navigator&&/opera/i.test(e.navigator.userAgent)},isKonqueror:function(){return e.navigator&&/konqueror/i.test(e.navigator.userAgent)},hasDomain:function(){if(!e.document)return!0;try{return!!e.document.domain}catch(t){return!1}}}}).call(this,n(6))},function(t,e,n){"use strict";(function(e){var r=n(61),i=n(50),o=n(106);t.exports={WPrefix:"_jp",currentWindowId:null,polluteGlobalNamespace:function(){t.exports.WPrefix in e||(e[t.exports.WPrefix]={})},postMessage:function(n,r){e.parent!==e&&e.parent.postMessage(i.stringify({windowId:t.exports.currentWindowId,type:n,data:r||""}),"*")},createIframe:function(t,n){var i,o,a=e.document.createElement("iframe"),s=function(){clearTimeout(i);try{a.onload=null}catch(t){}a.onerror=null},c=function(){a&&(s(),setTimeout(function(){a&&a.parentNode.removeChild(a),a=null},0),r.unloadDel(o))},u=function(t){a&&(c(),n(t))};return a.src=t,a.style.display="none",a.style.position="absolute",a.onerror=function(){u("onerror")},a.onload=function(){clearTimeout(i),i=setTimeout(function(){u("onload timeout")},2e3)},e.document.body.appendChild(a),i=setTimeout(function(){u("timeout")},15e3),o=r.unloadAdd(c),{post:function(t,e){setTimeout(function(){try{a&&a.contentWindow&&a.contentWindow.postMessage(t,e)}catch(t){}},0)},cleanup:c,loaded:s}},createHtmlfile:function(n,i){var o,a,s,c=["Active"].concat("Object").join("X"),u=new e[c]("htmlfile"),f=function(){clearTimeout(o),s.onerror=null},l=function(){u&&(f(),r.unloadDel(a),s.parentNode.removeChild(s),s=u=null,CollectGarbage())},h=function(t){u&&(l(),i(t))};u.open(),u.write('<html><script>document.domain="'+e.document.domain+'";<\/script></html>'),u.close(),u.parentWindow[t.exports.WPrefix]=e[t.exports.WPrefix];var p=u.createElement("div");return u.body.appendChild(p),s=u.createElement("iframe"),p.appendChild(s),s.src=n,s.onerror=function(){h("onerror")},o=setTimeout(function(){h("timeout")},15e3),a=r.unloadAdd(l),{post:function(t,e){try{setTimeout(function(){s&&s.contentWindow&&s.contentWindow.postMessage(t,e)},0)}catch(t){}},cleanup:l,loaded:f}}},t.exports.iframeEnabled=!1,e.document&&(t.exports.iframeEnabled=("function"==typeof e.postMessage||"object"==typeof e.postMessage)&&!o.isKonqueror())}).call(this,n(6))},function(t,e,n){"use strict";var r=n(2),i=n(37).find,o=n(152),a=n(49),s=!0,c=a("find");"find"in[]&&Array(1).find(function(){s=!1}),r({target:"Array",proto:!0,forced:s||!c},{find:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}}),o("find")},function(t,e,n){"use strict";function r(t){return"function"==typeof t}n.d(e,"a",function(){return r})},function(t,e,n){var r=n(146),i=n(93),o=r("keys");t.exports=function(t){return o[t]||(o[t]=i(t))}},function(t,e,n){var r=n(56);t.exports=Array.isArray||function(t){return"Array"==r(t)}},function(t,e,n){var r=n(188),i=n(148);t.exports=Object.keys||function(t){return r(t,i)}},function(t,e,n){var r=n(38);t.exports=function(t,e,n){for(var i in e)r(t,i,e[i],n);return t}},function(t,e,n){"use strict";var r=n(57),i=n(24),o=n(7),a=n(16),s=o("species");t.exports=function(t){var e=r(t),n=i.f;a&&e&&!e[s]&&n(e,s,{configurable:!0,get:function(){return this}})}},function(t,e,n){var r=n(7)("iterator"),i=!1;try{var o=0,a={next:function(){return{done:!!o++}},return:function(){i=!0}};a[r]=function(){return this},Array.from(a,function(){throw 2})}catch(t){}t.exports=function(t,e){if(!e&&!i)return!1;var n=!1;try{var o={};o[r]=function(){return{next:function(){return{done:n=!0}}}},t(o)}catch(t){}return n}},function(t,e,n){"use strict";var r=n(92),i=n(24),o=n(64);t.exports=function(t,e,n){var a=r(e);a in t?i.f(t,a,o(0,n)):t[a]=n}},function(t,e,n){var r=n(3),i=n(7),o=n(159),a=i("species");t.exports=function(t){return o>=51||!r(function(){var e=[];return(e.constructor={})[a]=function(){return{foo:1}},1!==e[t](Boolean).foo})}},function(t,e,n){var r=n(279),i=n(280),o=n(281),a=n(282),s=n(283);function c(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=a,c.prototype.set=s,t.exports=c},function(t,e,n){var r=n(207);t.exports=function(t,e){for(var n=t.length;n--;)if(r(t[n][0],e))return n;return-1}},function(t,e,n){var r=n(163),i=n(290),o=n(291),a=r?r.toStringTag:void 0;t.exports=function(t){return null==t?void 0===t?"[object Undefined]":"[object Null]":a&&a in Object(t)?i(t):o(t)}},function(t,e,n){var r=n(73)(Object,"create");t.exports=r},function(t,e,n){var r=n(304);t.exports=function(t,e){var n=t.__data__;return r(e)?n["string"==typeof e?"string":"hash"]:n.map}},function(t,e,n){var r=n(211),i=n(212);t.exports=function(t,e,n,o){var a=!n;n||(n={});for(var s=-1,c=e.length;++s<c;){var u=e[s],f=o?o(n[u],t[u],u,n,t):void 0;void 0===f&&(f=t[u]),a?i(n,u,f):r(n,u,f)}return n}},function(t,e){t.exports=function(t){return t.webpackPolyfill||(t.deprecate=function(){},t.paths=[],t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),t.webpackPolyfill=1),t}},function(t,e,n){"use strict";var r=n(2),i=n(126);r({target:"RegExp",proto:!0,forced:/./.exec!==i},{exec:i})},function(t,e,n){"use strict";var r,i,o=n(202),a=n(344),s=RegExp.prototype.exec,c=String.prototype.replace,u=s,f=(r=/a/,i=/b*/g,s.call(r,"a"),s.call(i,"a"),0!==r.lastIndex||0!==i.lastIndex),l=a.UNSUPPORTED_Y||a.BROKEN_CARET,h=void 0!==/()??/.exec("")[1];(f||h||l)&&(u=function(t){var e,n,r,i,a=this,u=l&&a.sticky,p=o.call(a),d=a.source,v=0,y=t;return u&&(-1===(p=p.replace("y","")).indexOf("g")&&(p+="g"),y=String(t).slice(a.lastIndex),a.lastIndex>0&&(!a.multiline||a.multiline&&"\n"!==t[a.lastIndex-1])&&(d="(?: "+d+")",y=" "+y,v++),n=new RegExp("^(?:"+d+")",p)),h&&(n=new RegExp("^"+d+"$(?!\\s)",p)),f&&(e=a.lastIndex),r=s.call(u?n:a,y),u?r?(r.input=r.input.slice(v),r[0]=r[0].slice(v),r.index=a.lastIndex,a.lastIndex+=r[0].length):a.lastIndex=0:f&&r&&(a.lastIndex=a.global?r.index+r[0].length:e),h&&r&&r.length>1&&c.call(r[0],n,function(){for(i=1;i<arguments.length-2;i++)void 0===arguments[i]&&(r[i]=void 0)}),r}),t.exports=u},function(t,e,n){var r=n(2),i=n(228);r({target:"Array",stat:!0,forced:!n(115)(function(t){Array.from(t)})},{from:i})},function(t,e,n){"use strict";var r=n(2),i=n(96).indexOf,o=n(102),a=n(49),s=[].indexOf,c=!!s&&1/[1].indexOf(1,-0)<0,u=o("indexOf"),f=a("indexOf",{ACCESSORS:!0,1:0});r({target:"Array",proto:!0,forced:c||!u||!f},{indexOf:function(t){return c?s.apply(this,arguments)||0:i(this,t,arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){"use strict";var r=n(2),i=n(11),o=n(111),a=n(77),s=n(20),c=n(41),u=n(116),f=n(7),l=n(117),h=n(49),p=l("slice"),d=h("slice",{ACCESSORS:!0,0:0,1:2}),v=f("species"),y=[].slice,g=Math.max;r({target:"Array",proto:!0,forced:!p||!d},{slice:function(t,e){var n,r,f,l=c(this),h=s(l.length),p=a(t,h),d=a(void 0===e?h:e,h);if(o(l)&&("function"!=typeof(n=l.constructor)||n!==Array&&!o(n.prototype)?i(n)&&null===(n=n[v])&&(n=void 0):n=void 0,n===Array||void 0===n))return y.call(l,p,d);for(r=new(void 0===n?Array:n)(g(d-p,0)),f=0;p<d;p++,f++)p in l&&u(r,f,l[p]);return r.length=f,r}})},function(t,e,n){"use strict";var r=n(5),i=n(29).EventEmitter;function o(t,e){i.call(this);var n=this;this.bufferPosition=0,this.xo=new e("POST",t,null),this.xo.on("chunk",this._chunkHandler.bind(this)),this.xo.once("finish",function(t,e){n._chunkHandler(t,e),n.xo=null;var r=200===t?"network":"permanent";n.emit("close",null,r),n._cleanup()})}r(o,i),o.prototype._chunkHandler=function(t,e){if(200===t&&e)for(var n=-1;;this.bufferPosition+=n+1){var r=e.slice(this.bufferPosition);if(-1===(n=r.indexOf("\n")))break;var i=r.slice(0,n);i&&this.emit("message",i)}},o.prototype._cleanup=function(){this.removeAllListeners()},o.prototype.abort=function(){this.xo&&(this.xo.close(),this.emit("close",null,"user"),this.xo=null),this._cleanup()},t.exports=o},function(t,e,n){"use strict";var r=n(5),i=n(235);function o(t,e,n,r){i.call(this,t,e,n,r)}r(o,i),o.enabled=i.enabled&&i.supportsCORS,t.exports=o},function(t,e,n){"use strict";n(125),n(226);var r=n(0),i=n(254);e.a=function(t){return function(t){try{return JSON.parse(i.Base64.decode(t))}catch(e){r.a.e("failed to parse jwt input:",t,e)}}(t.split(".")[1])||{}}},function(t,e,n){"use strict";var r=n(1);function i(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var o=new(function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n;return e=t,(n=[{key:"detect",value:function(t){var e=(t||{}).callback;(e=e||r.d)({failures:[]})}}])&&i(e.prototype,n),t}());e.a=o},function(t,e,n){"use strict";(function(e){var r=n(365),i=n(180),o=/^[A-Za-z][A-Za-z0-9+-.]*:\/\//,a=/^([a-z][a-z0-9.+-]*:)?(\/\/)?([\S\s]*)/i,s=new RegExp("^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+");function c(t){return(t||"").toString().replace(s,"")}var u=[["#","hash"],["?","query"],function(t){return t.replace("\\","/")},["/","pathname"],["@","auth",1],[NaN,"host",void 0,1,1],[/:(\d+)$/,"port",void 0,1],[NaN,"hostname",void 0,1,1]],f={hash:1,query:1};function l(t){var n,r=("undefined"!=typeof window?window:void 0!==e?e:"undefined"!=typeof self?self:{}).location||{},i={},a=typeof(t=t||r);if("blob:"===t.protocol)i=new p(unescape(t.pathname),{});else if("string"===a)for(n in i=new p(t,{}),f)delete i[n];else if("object"===a){for(n in t)n in f||(i[n]=t[n]);void 0===i.slashes&&(i.slashes=o.test(t.href))}return i}function h(t){t=c(t);var e=a.exec(t);return{protocol:e[1]?e[1].toLowerCase():"",slashes:!!e[2],rest:e[3]}}function p(t,e,n){if(t=c(t),!(this instanceof p))return new p(t,e,n);var o,a,s,f,d,v,y=u.slice(),g=typeof e,b=this,m=0;for("object"!==g&&"string"!==g&&(n=e,e=null),n&&"function"!=typeof n&&(n=i.parse),e=l(e),o=!(a=h(t||"")).protocol&&!a.slashes,b.slashes=a.slashes||o&&e.slashes,b.protocol=a.protocol||e.protocol||"",t=a.rest,a.slashes||(y[3]=[/(.*)/,"pathname"]);m<y.length;m++)"function"!=typeof(f=y[m])?(s=f[0],v=f[1],s!=s?b[v]=t:"string"==typeof s?~(d=t.indexOf(s))&&("number"==typeof f[2]?(b[v]=t.slice(0,d),t=t.slice(d+f[2])):(b[v]=t.slice(d),t=t.slice(0,d))):(d=s.exec(t))&&(b[v]=d[1],t=t.slice(0,d.index)),b[v]=b[v]||o&&f[3]&&e[v]||"",f[4]&&(b[v]=b[v].toLowerCase())):t=f(t);n&&(b.query=n(b.query)),o&&e.slashes&&"/"!==b.pathname.charAt(0)&&(""!==b.pathname||""!==e.pathname)&&(b.pathname=function(t,e){if(""===t)return e;for(var n=(e||"/").split("/").slice(0,-1).concat(t.split("/")),r=n.length,i=n[r-1],o=!1,a=0;r--;)"."===n[r]?n.splice(r,1):".."===n[r]?(n.splice(r,1),a++):a&&(0===r&&(o=!0),n.splice(r,1),a--);return o&&n.unshift(""),"."!==i&&".."!==i||n.push(""),n.join("/")}(b.pathname,e.pathname)),r(b.port,b.protocol)||(b.host=b.hostname,b.port=""),b.username=b.password="",b.auth&&(f=b.auth.split(":"),b.username=f[0]||"",b.password=f[1]||""),b.origin=b.protocol&&b.host&&"file:"!==b.protocol?b.protocol+"//"+b.host:"null",b.href=b.toString()}p.prototype={set:function(t,e,n){var o=this;switch(t){case"query":"string"==typeof e&&e.length&&(e=(n||i.parse)(e)),o[t]=e;break;case"port":o[t]=e,r(e,o.protocol)?e&&(o.host=o.hostname+":"+e):(o.host=o.hostname,o[t]="");break;case"hostname":o[t]=e,o.port&&(e+=":"+o.port),o.host=e;break;case"host":o[t]=e,/:\d+$/.test(e)?(e=e.split(":"),o.port=e.pop(),o.hostname=e.join(":")):(o.hostname=e,o.port="");break;case"protocol":o.protocol=e.toLowerCase(),o.slashes=!n;break;case"pathname":case"hash":if(e){var a="pathname"===t?"/":"#";o[t]=e.charAt(0)!==a?a+e:e}else o[t]=e;break;default:o[t]=e}for(var s=0;s<u.length;s++){var c=u[s];c[4]&&(o[c[1]]=o[c[1]].toLowerCase())}return o.origin=o.protocol&&o.host&&"file:"!==o.protocol?o.protocol+"//"+o.host:"null",o.href=o.toString(),o},toString:function(t){t&&"function"==typeof t||(t=i.stringify);var e,n=this,r=n.protocol;r&&":"!==r.charAt(r.length-1)&&(r+=":");var o=r+(n.slashes?"//":"");return n.username&&(o+=n.username,n.password&&(o+=":"+n.password),o+="@"),o+=n.host+n.pathname,(e="object"==typeof n.query?t(n.query):n.query)&&(o+="?"!==e.charAt(0)?"?"+e:e),n.hash&&(o+=n.hash),o}},p.extractProtocol=h,p.location=l,p.trimLeft=c,p.qs=i,t.exports=p}).call(this,n(6))},function(t,e,n){"use strict";var r=n(140);e.a=function(t,e,n){t.setXmlHttpRequestFactory(function(t,e){return t()?new r.a(e()):new XMLHttpRequest}.bind(null,e,n))}},function(t,e,n){"use strict";(function(t){n(13),n(22),n(108),n(15),n(72),n(31),n(32),n(80),n(28),n(9),n(25),n(18);var r=n(40),i=n.n(r),o=(n(174),n(0)),a=n(23),s=n(137),c=n(1),u=n(138),f=n(84),l=n(135),h=n(87),p=n(258),d=n(30),v=n(259);function y(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function g(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?y(Object(n),!0).forEach(function(e){b(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):y(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function b(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function m(t,e,n,r,i,o,a){try{var s=t[o](a),c=s.value}catch(t){return void n(t)}s.done?e(c):Promise.resolve(c).then(r,i)}function w(t){return function(){var e=this,n=arguments;return new Promise(function(r,i){var o=t.apply(e,n);function a(t){m(o,r,i,a,s,"next",t)}function s(t){m(o,r,i,a,s,"throw",t)}a(void 0)})}}function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var x=c.c.DASH,T=c.c.HLS,O=c.c.SMOOTH,S=function(){function e(t,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),Object(a.a)(this),this.sdkConfig=n,this.player=t,this.playReady=!1,this.sdnPlaybackFailed=!1,this.configPromise=Promise.resolve(null),this.setupPlayer(t)}var n,r,y,b;return n=e,(r=[{key:"getContext",value:function(){return this.sdkConfig.integration.name}},{key:"getSdnName",value:function(){return d.b}},{key:"initContext",value:function(){}},{key:"prepareReporter",value:function(){}},{key:"setupPlayer",value:function(e){var n=this;this.initContext(),e.addEventListener(t.amp.eventName.sourceset,function(){if(n.sdnPlaybackFailed)return n.playReady=!0,void o.a.f(n.getContext()+":sdn.playback.failed");var t;n.cdnSourceList=e.options_.sourceList,n.configPromise&&n.configPromise.then((t=w(i.a.mark(function t(e){return i.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return n.config=e,o.a.i(n.getContext()+":sdn.config",e),n.prepareReporter(),t.next=5,n.startDelivery();case 5:case"end":return t.stop()}},t)})),function(e){return t.apply(this,arguments)})).catch(function(t){o.a.f(n.getContext()+":sdn.playback.failed",t),n.player.trigger({type:d.c.sdnInitFailure},"no.cfg",t),n.playReady=!0})});var r=e.currentTechName();this.playerSourceType=Object.getOwnPropertyNames(d.a).find(function(t){return d.a[t].tech===r}),this.compatibleDeliveryModes=function(){var t=c.a.ECDN10,e=c.a.ECDN11,r=c.a.WEBRTC;switch(n.playerSourceType){case x:return;case T:return[e,r];case O:return[t];default:return[]}}(),Object(l.a)(e,function(){return n.enableWebRTC},function(){return n.playbackModule.peerManager})}},{key:"getVideoElement",value:function(){return Object(f.a)(this.player)}},{key:"prepareSourceInfo",value:(b=w(i.a.mark(function t(){return i.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.abrupt("return",{sources:this.cdnSourceList});case 1:case"end":return t.stop()}},t,this)})),function(){return b.apply(this,arguments)})},{key:"preparePublishingInfo",value:function(t){return{detection:t}}},{key:"startDelivery",value:(y=w(i.a.mark(function t(){var e,n,r,o,a,c=this;return i.a.wrap(function(t){for(;;)switch(t.prev=t.next){case 0:return t.next=2,this.prepareSourceInfo();case 2:if(this.sourceInfo=t.sent,e=Object(v.a)(this.cdnSourceList)){t.next=8;break}return this.fallbackToCDN(),this.playReady=!0,t.abrupt("return");case 8:n=this.reporter,r=this.config,o=this.compatibleDeliveryModes,a={url:e,sourceType:x},Object(s.a)(n,a,r,o).then(function(t){return c.preparePublishingInfo(t)}).then(function(t){return Promise.resolve(Object(u.a)(t.detection.mode)).then(function(e){var r=e===h.a;c.enableWebRTC=r;var i=c.config,o=c.switchToCDN,s=c.playerSourceType;c.playbackModule=new e(n,g({},t,{detectionSource:a,sourceType:s,config:i,switchToCDN:o}),c.sdkConfig)})}).then(function(){return c.playbackModule.init()}).then(function(){return c.playbackModule.startDelivery(c.sourceInfo)}).then(this.playKollective).catch(this.fallbackToCDN).then(function(){var t=c.getVideoElement();t?(c.reporter.attachVideoElement(t),c.playReady=!0):(c.reporter.attachAmpPlayer(c.player),c.playReady=!0)}).catch(this.fallbackToCDN);case 11:case"end":return t.stop()}},t,this)})),function(){return y.apply(this,arguments)})},{key:"switchToCDN",value:function(t){o.a.e(this.getContext()+":switch2cdn:"+t),this.sdnPlaybackFailed=!0,this.cdnSourceList&&this.player.src(this.cdnSourceList)}},{key:"fallbackToCDN",value:function(t){o.a.e(this.getContext()+":fallback2cdn:"+t),this.playbackModule&&this.playbackModule.stop(),this.sdnPlaybackFailed=!0,this.player.options_.sourceList=this.cdnSourceList,this.player.options_.sdn.name=null}},{key:"playKollective",value:function(t){this.player.options_.sourceList=Object(p.a)(t,this.cdnSourceList),this.player.options_.sdn.name=this.getSdnName()}},{key:"stop",value:function(){o.a.i("Stopping Kollective SDK plugin"),this.playbackModule&&this.playbackModule.stop(),this.reporter&&this.reporter.cleanup()}}])&&E(n.prototype,r),e}();e.a=S}).call(this,n(6))},function(t,e,n){"use strict";n(13),n(47),n(48),n(22),n(15),n(14),n(31),n(32),n(28),n(9),n(25),n(71),n(21),n(18),n(26);var r=n(256),i=n.n(r),o=n(1),a=(n(101),n(27));function s(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var c=o.a.ECDN10,u=o.a.ECDN11,f=o.a.WEBRTC,l=o.b.Live,h=o.b.VOD,p=function(t,e,n){var r,i=e||{},o=i.tpe,p=i.eae,d=i.wel,v=i.wev,y=i.wpl,g=i.wpv;o=null==o||!!o;var b=(n||[c,u,f]).reduce(function(t,e){return t[e]=!0,t},{}),m=function(){try{var t=window.RTCPeerConnection;return!(!t||!t.prototype.createDataChannel)}catch(t){return!1}}(),w=b[f],E=b[c]&&o,x=b[u]&&p,T=!!y,O=!!g,S=w&&d,_=w&&v;m||!S&&!_||t.add({type:a.a.Type.WEBRTC,success:!1,reason:a.a.Error.UNSUPPORTED}),S=S&&m,_=_&&m;var k=p||d||v||!o;return{modeOrder:(r={},s(r,l,[x&&u,T&&S&&f,E&&c,!T&&S&&f].filter(Boolean)),s(r,h,[x&&u,O&&_&&f,E&&c,!O&&_&&f].filter(Boolean)),r),platform:k?u:c}},d=o.a.ECDN10,v=(o.a.ECDN11,n(257)),y=n.n(v);function g(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function b(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?g(Object(n),!0).forEach(function(e){m(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function m(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var w=function(t,e,n,r){return new Promise(function(i,s){e.detect(b({callback:function(e){var n=e.success,c=e.failures;if(r===o.a.ECDN10){var u=a.a.Type.ECDN10;if((c||[]).forEach(function(e){var n=e.start,r=e.t,i=e.protocol,o=e.request.status;t.add({type:u,method:i,t:n}),t.add({type:u,method:i,t:r,status:o,success:!1})}),n){var f=n.start,l=n.protocol,h=n.data,p=h.version,d=h.blackout;if(t.add({type:u,method:l,t:f}),t.add(b({type:u,method:l,success:!0,v:p},d&&{blackout:d})),y()(h.version,"10.6")<0)return void s()}}n?i(n.data):s()}},n),t)})},E=n(43),x=n(133);function T(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function O(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}var S=o.a.ECDN10,_=o.a.ECDN11,k=o.a.WEBRTC,A=function(t,e,n){switch(e){case k:return t.add({type:a.a.Type.WEBRTC,success:!0}),Promise.resolve({mode:e});case _:return w(t,x.a,n).then(function(t){return{mode:e,data:t}});case S:return w(t,E.a,n,e).then(function(t){var r=t.vod_optout,i=1==r||0==r?r:n.voo,o={mode:e,data:t};return i?function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?T(Object(n),!0).forEach(function(e){O(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):T(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}({},o,{vodOptOut:i}):o});default:return Promise.reject({mode:null})}},I=n(141);function C(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function j(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}n.d(e,"a",function(){return L});var P=o.b.Live,R=o.b.VOD;function L(t,e,n,r){var o=p(t,n,r),s=o.modeOrder,c=o.platform;return function r(i,o){var a=function(){return Promise.resolve(o||Object(I.a)(e))},s=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}(i.shift()||[],2),c=s[0],u=s[1];return c===u||o?A(t,o===P?c:u,n).then(function(t){return t.vodOptOut?a().then(function(e){return e===P?{mode:t.mode,data:t.data,playType:e}:Promise.reject(e)}):function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?C(Object(n),!0).forEach(function(e){j(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):C(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}({},t,{playType:o})}).catch(function(t){if(t instanceof Error)throw t;return t&&null===t.mode?t:r(i,t||o)}):a().then(function(t){return i.unshift([c,u]),r(i,t)})}(i()(s[P],s[R])).then(function(e){return e.platform=c,function(t,e){var n=e.mode,r=e.platform,i=e.data;switch(t.platform=r,n){case d:var o={v:i.version,nodeId:i.node_id,machineName:i.machine_name,machineUserGuid:i.machine_user_guid};t.set({agent:o},a.a.Sections.ECDN10)}}(t,e),e})}},function(t,e,n){"use strict";n(9),n(25),n(13),n(22),n(108),n(15),n(14),n(60),n(72),n(79),n(31),n(32),n(28),n(21),n(18),n(26);var r=n(0),i=n(23),o=n(1),a=n(43),s=function(t){var e=t.cmd,n=t.params,i=t.onProgress,o=t.onReady,a=t.switchToCDN;switch(e){case"manifestProgress":return void(n&&("100"===n.percent?o():i(parseInt(n.percent))));case"handleError":case"httpError":return void(n&&404===n.code&&(r.a.f("ecdn10:pac.fnf:"+(n.message?n.message:"")),a()));case"cancelStream":return r.a.f("ecdn10:pac.cs:"+(n&&n.message?n.message:"")),void a();case"switchToCDN":return r.a.f("ecdn10:pac.s2cdn:"+(n&&n.message?n.message:"")),void a();case"artStatus":return void(n&&("ended"!==n.status&&"shutdown"!==n.status||(r.a.f("ecdn10:pac.art:"+n.status),a())));default:return}},c=n(141);function u(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var f=function(){function t(e){var n=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.timeout=e.tas||8e4,this.timeoutLive=e.tle||this.timeout,this.timeoutVOD=e.tvd||this.timeout,this.promise=new Promise(function(t,e){n.reject=e})}var e,n;return e=t,(n=[{key:"init",value:function(t,e,n,r){var i=this;return Promise.resolve(this.timeoutLive===this.timeoutVOD?this.timeoutLive:Promise.resolve(null!=e?e:Object(c.a)({url:n,sourceType:r})).then(function(t){return t===o.b.Live?i.timeoutLive:i.timeoutVOD}).catch(function(){return Math.min(i.timeoutLive,i.timeoutVOD)})).then(function(e){e=Math.max(0,e-t),setTimeout(i.reject,e,"t.a.s")})}},{key:"getPromise",value:function(){return this.promise}}])&&u(e.prototype,n),t}();function l(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function h(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?l(Object(n),!0).forEach(function(e){p(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}function p(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function d(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var v=[{mime:"application/vnd.ms-sstr+xml",type:o.c.SMOOTH},{mime:"application/dash+xml",type:o.c.DASH},{mime:"application/vnd.apple.mpegurl",type:o.c.HLS}],y=function(){function t(e,n,r){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object(i.a)(this);var o=n.content,a=n.detection,s=n.detectionSource,c=n.sourceType,u=n.switchToCDN,l=n.realmId,h=n.realmTicket,p=n.config;this.urn=o.urn,this.sourceType=c,this.switchToCDN=u,this.ktoken=a.data.ktoken,this.authParams={realmId:l,realmTicket:h,appContext:r.integration.name},this.ts=0,this.progress=0,this.longpollStopped=!1;var d=new f(p);d.init(e.timestamp(),a.playType,s.url,c),this.withTimeout=function(t){return Promise.race([d.getPromise(),t])}}var e,n;return e=t,(n=[{key:"init",value:function(){var t=this;return this.withTimeout(new Promise(function(e,n){a.a.startSession({body:Object.assign({ktoken:t.ktoken},t.authParams),onSuccess:function(t,n){return e({data:t,request:n})},onFailure:n,onTimeout:n})}))}},{key:"startDelivery",value:function(t){var e=this;return this.longpollStopped=!1,this.withTimeout(new Promise(function(n,r){a.a.prefetch({urn:e.urn,streamType:e.sourceType,params:{ktoken:e.ktoken},onSuccess:function(){return n(e.longpollPromise(t))},onFailure:function(i){return e.handlePrefetchFailure(i,t,n,r)},onTimeout:function(){return n(e.longpollPromise(t))}})}))}},{key:"handlePrefetchFailure",value:function(t,e,n,r){t&&t.status>=400&&t.status<500?n(this.longpollPromise(e)):r()}},{key:"longpollPromise",value:function(t){var e=this;return new Promise(function(n,r){e.longpoll(t,n,r)})}},{key:"longpoll",value:function(t,e,n){var i=this;a.a.longpoll({params:{ktoken:this.ktoken,ts:this.ts},onSuccess:function(o){var a=o.ts,c=o.cmd,u=o.params;i.ts=a,s({cmd:c,params:u,onReady:function(){r.a.i("ecdn10:a.ready"),e(i.prepareSources(t)),i.listenToAgentCommands()},onProgress:function(o){r.a.i("ecdn10:a.progress="+o),i.progress>0&&0==o?i.stop().then(function(){return i.startDelivery(t)}):(i.progress=o,i.longpoll(t,e,n))},switchToCDN:i.processSwitchToCDN})},onFailure:function(t){r.a.f("ecdn10:a.lp.f="+t.status),n()},onTimeout:function(){r.a.i("ecdn10:a.lp.to"),i.longpoll(t,e,n)}})}},{key:"listenToAgentCommands",value:function(){var t=this;this.longpollStopped||a.a.longpoll({params:{ktoken:this.ktoken,ts:this.ts},onSuccess:function(e){var n=e.ts,r=e.cmd,i=e.params;t.ts=n,s({cmd:r,params:i,switchToCDN:t.processSwitchToCDN}),t.listenToAgentCommands()},onFailure:function(t){r.a.f("ecdn10:a.ac.f="+t.status)},onTimeout:function(){r.a.i("ecdn10:a.ac.to"),t.listenToAgentCommands()}})}},{key:"processSwitchToCDN",value:function(){this.stop(),this.switchToCDN&&this.switchToCDN()}},{key:"prepareSources",value:function(t){var e=this;if(t&&t.sources){var n=t.sources.map(function(t){var n=a.a.createStreamURL(e.urn,v.find(function(e){return e.mime===t.mime}).type);return h({},t,{kurl:n})});return h({},t,{sources:n})}return t}},{key:"stop",value:function(){var t=this;return this.progress=0,this.longpollStopped=!0,new Promise(function(e){a.a.stopStream({params:Object.assign({urn:t.urn},t.authParams),onSuccess:e,onFailure:e,onTimeout:e})})}}])&&d(e.prototype,n),t}();function g(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var b=function(){function t(){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t)}var e,n;return e=t,(n=[{key:"init",value:function(){}},{key:"startDelivery",value:function(){}},{key:"stop",value:function(){}}])&&g(e.prototype,n),t}(),m=n(87),w=o.a.ECDN10,E=o.a.ECDN11,x=o.a.WEBRTC;e.a=function(t){switch(t){case x:return m.a;case w:return y;case E:return b;default:return Promise.reject("no.p")}}},function(t,e,n){"use strict";function r(t){return null!==t&&"object"==typeof t}n.d(e,"a",function(){return r})},function(t,e,n){"use strict";n(59),n(15),n(129);var r=n(0),i=n(23),o=n(10),a=n(33),s=function(){function t(){return Error.call(this),this.message="argument out of range",this.name="ArgumentOutOfRangeError",this}return t.prototype=Object.create(Error.prototype),t}(),c=n(42);new c.a(function(t){return t.complete()});var u=function(){function t(t){if(this.total=t,this.total<0)throw new s}return t.prototype.call=function(t,e){return e.subscribe(new f(t,this.total))},t}(),f=function(t){function e(e,n){var r=t.call(this,e)||this;return r.total=n,r.ring=new Array,r.count=0,r}return o.a(e,t),e.prototype._next=function(t){var e=this.ring,n=this.total,r=this.count++;e.length<n?e.push(t):e[r%n]=t},e.prototype._complete=function(){var t=this.destination,e=this.count;if(e>0)for(var n=this.count>=this.total?this.total:this.count,r=this.ring,i=0;i<n;i++){var o=e++%n;t.next(r[o])}t.complete()},e}(a.a),l=function(t){function e(e,n){var r=t.call(this,e,n)||this;return r.scheduler=e,r.work=n,r.pending=!1,r}return o.a(e,t),e.prototype.schedule=function(t,e){if(void 0===e&&(e=0),this.closed)return this;this.state=t;var n=this.id,r=this.scheduler;return null!=n&&(this.id=this.recycleAsyncId(r,n,e)),this.pending=!0,this.delay=e,this.id=this.id||this.requestAsyncId(r,this.id,e),this},e.prototype.requestAsyncId=function(t,e,n){return void 0===n&&(n=0),setInterval(t.flush.bind(t,this),n)},e.prototype.recycleAsyncId=function(t,e,n){if(void 0===n&&(n=0),null!==n&&this.delay===n&&!1===this.pending)return e;clearInterval(e)},e.prototype.execute=function(t,e){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var n=this._execute(t,e);if(n)return n;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null))},e.prototype._execute=function(t,e){var n=!1,r=void 0;try{this.work(t)}catch(t){n=!0,r=!!t&&t||new Error(t)}if(n)return this.unsubscribe(),r},e.prototype._unsubscribe=function(){var t=this.id,e=this.scheduler,n=e.actions,r=n.indexOf(this);this.work=null,this.state=null,this.pending=!1,this.scheduler=null,-1!==r&&n.splice(r,1),null!=t&&(this.id=this.recycleAsyncId(e,t,null)),this.delay=null},e}(function(t){function e(e,n){return t.call(this)||this}return o.a(e,t),e.prototype.schedule=function(t,e){return void 0===e&&(e=0),this},e}(n(46).a)),h=function(){function t(e,n){void 0===n&&(n=t.now),this.SchedulerAction=e,this.now=n}return t.prototype.schedule=function(t,e,n){return void 0===e&&(e=0),new this.SchedulerAction(this,t).schedule(n,e)},t.now=function(){return Date.now()},t}(),p=new(function(t){function e(n,r){void 0===r&&(r=h.now);var i=t.call(this,n,function(){return e.delegate&&e.delegate!==i?e.delegate.now():r()})||this;return i.actions=[],i.active=!1,i.scheduled=void 0,i}return o.a(e,t),e.prototype.schedule=function(n,r,i){return void 0===r&&(r=0),e.delegate&&e.delegate!==this?e.delegate.schedule(n,r,i):t.prototype.schedule.call(this,n,r,i)},e.prototype.flush=function(t){var e=this.actions;if(this.active)e.push(t);else{var n;this.active=!0;do{if(n=t.execute(t.state,t.delay))break}while(t=e.shift());if(this.active=!1,n){for(;t=e.shift();)t.unsubscribe();throw n}}},e}(h))(l),d=function(){function t(){return Error.call(this),this.message="Timeout has occurred",this.name="TimeoutError",this}return t.prototype=Object.create(Error.prototype),t}(),v=function(t){function e(){return null!==t&&t.apply(this,arguments)||this}return o.a(e,t),e.prototype.notifyNext=function(t,e,n,r,i){this.destination.next(e)},e.prototype.notifyError=function(t,e){this.destination.error(t)},e.prototype.notifyComplete=function(t){this.destination.complete()},e}(a.a),y=function(t){function e(e,n,r){var i=t.call(this)||this;return i.parent=e,i.outerValue=n,i.outerIndex=r,i.index=0,i}return o.a(e,t),e.prototype._next=function(t){this.parent.notifyNext(this.outerValue,t,this.outerIndex,this.index++,this)},e.prototype._error=function(t){this.parent.notifyError(t,this),this.unsubscribe()},e.prototype._complete=function(){this.parent.notifyComplete(this),this.unsubscribe()},e}(a.a),g=n(53);var b="function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator",m=n(89),w=n(139);var E=function(){function t(t,e,n,r){this.waitFor=t,this.absoluteTimeout=e,this.withObservable=n,this.scheduler=r}return t.prototype.call=function(t,e){return e.subscribe(new x(t,this.absoluteTimeout,this.waitFor,this.withObservable,this.scheduler))},t}(),x=function(t){function e(e,n,r,i,o){var a=t.call(this,e)||this;return a.absoluteTimeout=n,a.waitFor=r,a.withObservable=i,a.scheduler=o,a.action=null,a.scheduleTimeout(),a}return o.a(e,t),e.dispatchTimeout=function(t){var e=t.withObservable;t._unsubscribeAndRecycle(),t.add(function(t,e,n,r,i){if(void 0===i&&(i=new y(t,void 0,void 0)),!i.closed)return e instanceof c.a?e.subscribe(i):function(t){if(t&&"function"==typeof t[m.a])return o=t,function(t){var e=o[m.a]();if("function"!=typeof e.subscribe)throw new TypeError("Provided object does not correctly implement Symbol.observable");return e.subscribe(t)};if((i=t)&&"number"==typeof i.length&&"function"!=typeof i)return r=t,function(t){for(var e=0,n=r.length;e<n&&!t.closed;e++)t.next(r[e]);t.complete()};if(function(t){return!!t&&"function"!=typeof t.subscribe&&"function"==typeof t.then}(t))return n=t,function(t){return n.then(function(e){t.closed||(t.next(e),t.complete())},function(e){return t.error(e)}).then(null,g.a),t};if(t&&"function"==typeof t[b])return e=t,function(t){for(var n=e[b]();;){var r=n.next();if(r.done){t.complete();break}if(t.next(r.value),t.closed)break}return"function"==typeof n.return&&t.add(function(){n.return&&n.return()}),t};var e,n,r,i,o,a=Object(w.a)(t)?"an invalid object":"'"+t+"'";throw new TypeError("You provided "+a+" where a stream was expected. You can provide an Observable, Promise, Array, or Iterable.")}(e)(i)}(t,e))},e.prototype.scheduleTimeout=function(){var t=this.action;t?this.action=t.schedule(this,this.waitFor):this.add(this.action=this.scheduler.schedule(e.dispatchTimeout,this.waitFor,this))},e.prototype._next=function(e){this.absoluteTimeout||this.scheduleTimeout(),t.prototype._next.call(this,e)},e.prototype._unsubscribe=function(){this.action=null,this.scheduler=null,this.withObservable=null},e}(v);function T(t,e){return void 0===e&&(e=p),function(t,e,n){return void 0===n&&(n=p),function(r){var i,o=(i=t)instanceof Date&&!isNaN(+i),a=o?+t-n.now():Math.abs(t);return r.lift(new E(a,o,e,n))}}(t,function(t,e){return new c.a(function(e){return e.error(t)})}(new d),e)}var O=n(1),S=n(54);function _(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function k(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function A(t,e,n){return e&&k(t.prototype,e),n&&k(t,n),t}n.d(e,"a",function(){return M});var I=XMLHttpRequest,C=I.HEADERS_RECEIVED,j=I.LOADING,P=I.DONE,R=["readyState","response","responseText","status","statusText"],L=["onabort","onerror","ontimeout","onreadystatechange","onload","onloadend","onloadstart","onprogress"],N=function(t){return t},D=function(t,e){if(!(t instanceof Event))return t;var n={};for(var r in t)n[r]=t[r];return n.currentTarget=e,n.target=e,n},U=function(){function t(e,n){_(this,t),Object(i.a)(this),this.peerManager=n,this.manifestUrl=n.content.url,this.kxhr=e,this.xhr=new XMLHttpRequest,this.state={},this.mirror(),this.setupHooks()}return A(t,[{key:"setupHooks",value:function(){var t=this;L.forEach(function(e){t.xhr[e]=function(n){if(!t.peering){t.mirror();var r=D(n,t.kxhr);if((t.kxhr[e]||O.d).bind(t.kxhr)(r),t.intercepting){var i="".concat(e,"Hook");(t[i]||O.d)(n)}}}})}},{key:"mirror",value:function(){var t=this;R.forEach(function(e){if(!t.peering)try{t.state[e]=t.xhr[e]}catch(t){}t.kxhr[e]=t.state[e]})}},{key:"open",value:function(){var t;this.url||(this.method=arguments.length<=0?void 0:arguments[0],this.url=arguments.length<=1?void 0:arguments[1],(t=this.xhr).open.apply(t,arguments),this.mirror())}},{key:"send",value:function(t){this.intercepting=!t&&/^GET$/gi.test(this.method)&&this.url!==this.manifestUrl,this.timeout=this.kxhr.timeout,this.xhr.timeout=this.timeout,this.xhr.msCaching=this.kxhr.msCaching,this.xhr.responseType=this.kxhr.responseType||"",this.peerManager&&this.peerManager.initialized&&this.intercepting?this.intercept():(this.xhr.send(t),this.mirror())}},{key:"getResponseHeader",value:function(){var t;if(!this.peering)return(t=this.xhr).getResponseHeader.apply(t,arguments);var e=arguments.length<=0?void 0:arguments[0];return/^content-type$/gi.test(e)?/Fragments\(video/gi.test(this.url)?"video/mp4":/Fragments\(audio/gi.test(this.url)?"audio/mp4":void 0:void 0}},{key:"setRequestHeader",value:function(){var t;this.xhr&&(t=this.xhr).setRequestHeader.apply(t,arguments)}},{key:"abort",value:function(){if(this.peering){if(!this.kxhr)return;this.kxhr.onabort(),this.cleanup()}else{var t;(t=this.xhr).abort.apply(t,arguments)}}},{key:"onabortHook",value:function(){this.cleanup()}},{key:"intercept",value:function(){this.interceptTime=performance.now();var t=this.peerManager.lookup(this.url);t?this.peerContent(t):this.sourceContent()}},{key:"peerContent",value:function(t){var e=this,n=this.peerManager,i=this.url,o=this.interceptTime,a=this.timeout;this.peering=!0,n.notifyPeering(i);var s,c=Object(S.a)(n.node.nodeId,n.tenantId,null,n.content.id,i,o);this.subscription=t.pipe((1,function(t){return t.lift(new u(1))}),a?T(a):N).subscribe({next:function(t){var o=t.peerId,a=t.payload,u=t.ts;if(s=a.slice(0).buffer){c.startLoading(u,o);var f=a.byteLength;c.stop(u,f),n.put(i,a)}else r.a.e("Received null or empty payload for ".concat(e.url," from peer ").concat(o))},error:function(t){r.a.e("Failed to receive from peer.",t);var i=t.peerId,o=t.error;c.fail(performance.now(),i,o?o.statusCode:500),n.sendTransferRecord(c),e.sourceContent()},complete:function(){null==s||null==s?(r.a.e("Received null or empty payload for ".concat(e.url,". Sourcing content")),e.sourceContent()):(n.sendTransferRecord(c),e.kxhr&&(function(){if(e.kxhr.onloadstart){var t=D(new ProgressEvent("loadstart"),e.kxhr);e.kxhr.onloadstart(t)}}(),function(){if(e.state.status=200,e.state.statusText="OK",e.state.readyState=C,e.mirror(),e.kxhr.onreadystatechange){var t=D(new Event("readystatechange"),e.kxhr);e.kxhr.onreadystatechange(t)}}(),function(t){if(r.a.enabled()&&r.a.i(e.peering?"peering":"sourcing",t.byteLength,t,e.url),e.state.response=t,e.state.readyState=j,e.mirror(),e.kxhr.onreadystatechange){var n=D(new Event("readystatechange"),e.kxhr);e.kxhr.onreadystatechange(n)}}(s),function(){if(e.state.readyState=P,e.mirror(),e.kxhr.onreadystatechange){var t=D(new Event("readystatechange"),e.kxhr);e.kxhr.onreadystatechange(t)}}(),function(){if(e.kxhr.onload){var t=D(new ProgressEvent("load"),e.kxhr);e.kxhr.onload(t)}}(),function(){if(e.kxhr.onloadend){var t=D(new ProgressEvent("loadend"),e.kxhr);e.kxhr.onloadend(t)}e.cleanup()}()))}})}},{key:"sourceContent",value:function(){var t=this,e=this.peerManager,n=this.url,r=this.xhr,i=this.interceptTime,o=performance.now();this.peering=!1;var a=o-i;if(this.timeout&&(r.timeout=Math.max(0,r.timeout-a),r.timeout<=50))return setTimeout(function(){var e=D(new ProgressEvent("timeout"));t.kxhr.ontimeout(e),t.cleanup()},r.timeout);this.sourceRequestEvent=Object(S.b)(e.node.nodeId,e.tenantId,e.content.url,e.content.id,n,o),e.notifySourcing(n),this.xhr.send(),this.mirror()}},{key:"onreadystatechangeHook",value:function(){var t=this.peerManager,e=this.xhr,n=this.url,i=this.sourceRequestEvent,o=e.readyState,a=e.status,s=performance.now();if(null!=i.loadInit||o!==C&&o!==j||i.startLoading(s),o===P&&a>=200&&a<300){var c=e.response.slice(0),u=c.byteLength;r.a.enabled()&&r.a.i(this.peering?"peering":"sourcing",u,e.response,this.url),t.put(n,c),i.stop(s,u),t.sendTransferRecord(i)}}},{key:"onloadendHook",value:function(){this.cleanup()}},{key:"cleanup",value:function(){var t=this;L.forEach(function(e){t.xhr[e]=null}),this.xhr=null,this.kxhr=null}}]),t}(),M=function(){function t(e){_(this,t),Object(i.a)(this),this.kollective=new U(this,e)}return A(t,[{key:"open",value:function(){var t;(t=this.kollective).open.apply(t,arguments)}},{key:"setRequestHeader",value:function(){var t;(t=this.kollective).setRequestHeader.apply(t,arguments)}},{key:"send",value:function(){var t;(t=this.kollective).send.apply(t,arguments)}},{key:"getResponseHeader",value:function(){var t;return(t=this.kollective).getResponseHeader.apply(t,arguments)}},{key:"abort",value:function(){var t;(t=this.kollective).abort.apply(t,arguments)}},{key:"addEventListener",value:function(){}}]),t}()},function(t,e,n){"use strict";n(9),n(25);var r=n(85),i=(n(22),n(128),n(361),n(60),n(129),n(125),n(226),n(362),n(134)),o=n.n(i),a=function(t){return t.indexOf("#EXT-X-ENDLIST")<0},s=n(1),c=function(t){return Object(r.a)({url:t,expectJson:!1}).then(function(t){return t.data})};e.a=function(t){var e=t.url,n=t.sourceType;return c(e).then(function(t){switch(n){case s.c.HLS:return function(t,e){var n=function(t,e){var n=t.split("\n").map(function(t){return t.trim()}).filter(Boolean).filter(function(t){return"#"!==t[0]})[0];if(!n||!e||n.indexOf("://")>=0)return n;n="/"===n[0]?n:"/".concat(n);var r=new o.a(e);return r.query="",r.hash="",r.pathname=(r.pathname||"").split("/").slice(0,-1).join("/")+n,"".concat(r)}(t,e);return n?c(n).then(a):Promise.reject()}(t,e);case s.c.DASH:return function(t){try{return"static"!==(new DOMParser).parseFromString(t,"text/xml").getElementsByTagName("MPD")[0].attributes.getNamedItem("type").value}catch(t){return!0}}(t);default:return Promise.reject()}}).then(function(t){return t?s.b.Live:s.b.VOD}).catch(function(){throw Error("Play type cannot be determined")})}},function(t,e,n){"use strict";var r={}.propertyIsEnumerable,i=Object.getOwnPropertyDescriptor,o=i&&!r.call({1:2},1);e.f=o?function(t){var e=i(this,t);return!!e&&e.enumerable}:r},function(t,e,n){var r=n(4),i=n(11),o=r.document,a=i(o)&&i(o.createElement);t.exports=function(t){return a?o.createElement(t):{}}},function(t,e,n){var r=n(4),i=n(35);t.exports=function(t,e){try{i(r,t,e)}catch(n){r[t]=e}return e}},function(t,e,n){var r=n(185),i=Function.toString;"function"!=typeof r.inspectSource&&(r.inspectSource=function(t){return i.call(t)}),t.exports=r.inspectSource},function(t,e,n){var r=n(76),i=n(185);(t.exports=function(t,e){return i[t]||(i[t]=void 0!==e?e:{})})("versions",[]).push({version:"3.6.4",mode:r?"pure":"global",copyright:"© 2020 Denis Pushkarev (zloirock.ru)"})},function(t,e,n){var r=n(57),i=n(95),o=n(149),a=n(17);t.exports=r("Reflect","ownKeys")||function(t){var e=i.f(a(t)),n=o.f;return n?e.concat(n(t)):e}},function(t,e){t.exports=["constructor","hasOwnProperty","isPrototypeOf","propertyIsEnumerable","toLocaleString","toString","valueOf"]},function(t,e){e.f=Object.getOwnPropertySymbols},function(t,e,n){var r=n(3),i=/#|\.prototype\./,o=function(t,e){var n=s[a(t)];return n==u||n!=c&&("function"==typeof e?r(e):!!e)},a=o.normalize=function(t){return String(t).replace(i,".").toLowerCase()},s=o.data={},c=o.NATIVE="N",u=o.POLYFILL="P";t.exports=o},function(t,e,n){var r=n(3);t.exports=!!Object.getOwnPropertySymbols&&!r(function(){return!String(Symbol())})},function(t,e,n){var r=n(7),i=n(66),o=n(24),a=r("unscopables"),s=Array.prototype;null==s[a]&&o.f(s,a,{configurable:!0,value:i(null)}),t.exports=function(t){s[a][t]=!0}},function(t,e,n){"use strict";var r=n(2),i=n(196),o=n(78),a=n(98),s=n(58),c=n(35),u=n(38),f=n(7),l=n(76),h=n(97),p=n(197),d=p.IteratorPrototype,v=p.BUGGY_SAFARI_ITERATORS,y=f("iterator"),g=function(){return this};t.exports=function(t,e,n,f,p,b,m){i(n,e,f);var w,E,x,T=function(t){if(t===p&&A)return A;if(!v&&t in _)return _[t];switch(t){case"keys":case"values":case"entries":return function(){return new n(this,t)}}return function(){return new n(this)}},O=e+" Iterator",S=!1,_=t.prototype,k=_[y]||_["@@iterator"]||p&&_[p],A=!v&&k||T(p),I="Array"==e&&_.entries||k;if(I&&(w=o(I.call(new t)),d!==Object.prototype&&w.next&&(l||o(w)===d||(a?a(w,d):"function"!=typeof w[y]&&c(w,y,g)),s(w,O,!0,!0),l&&(h[O]=g))),"values"==p&&k&&"values"!==k.name&&(S=!0,A=function(){return k.call(this)}),l&&!m||_[y]===A||c(_,y,A),h[e]=A,p)if(E={values:T("values"),keys:b?A:T("keys"),entries:T("entries")},m)for(x in E)!v&&!S&&x in _||u(_,x,E[x]);else r({target:e,proto:!0,forced:v||S},E);return E}},function(t,e,n){var r=n(3);t.exports=!r(function(){function t(){}return t.prototype.constructor=null,Object.getPrototypeOf(new t)!==t.prototype})},function(t,e,n){var r={};r[n(7)("toStringTag")]="z",t.exports="[object z]"===String(r)},function(t,e,n){var r=n(17),i=n(157),o=n(20),a=n(67),s=n(100),c=n(198),u=function(t,e){this.stopped=t,this.result=e};(t.exports=function(t,e,n,f,l){var h,p,d,v,y,g,b,m=a(e,n,f?2:1);if(l)h=t;else{if("function"!=typeof(p=s(t)))throw TypeError("Target is not iterable");if(i(p)){for(d=0,v=o(t.length);v>d;d++)if((y=f?m(r(b=t[d])[0],b[1]):m(t[d]))&&y instanceof u)return y;return new u(!1)}h=p.call(t)}for(g=h.next;!(b=g.call(h)).done;)if("object"==typeof(y=c(h,m,b.value,f))&&y&&y instanceof u)return y;return new u(!1)}).stop=function(t){return new u(!0,t)}},function(t,e,n){var r=n(7),i=n(97),o=r("iterator"),a=Array.prototype;t.exports=function(t){return void 0!==t&&(i.Array===t||a[o]===t)}},function(t,e,n){var r,i,o,a=n(4),s=n(3),c=n(56),u=n(67),f=n(191),l=n(143),h=n(199),p=a.location,d=a.setImmediate,v=a.clearImmediate,y=a.process,g=a.MessageChannel,b=a.Dispatch,m=0,w={},E=function(t){if(w.hasOwnProperty(t)){var e=w[t];delete w[t],e()}},x=function(t){return function(){E(t)}},T=function(t){E(t.data)},O=function(t){a.postMessage(t+"",p.protocol+"//"+p.host)};d&&v||(d=function(t){for(var e=[],n=1;arguments.length>n;)e.push(arguments[n++]);return w[++m]=function(){("function"==typeof t?t:Function(t)).apply(void 0,e)},r(m),m},v=function(t){delete w[t]},"process"==c(y)?r=function(t){y.nextTick(x(t))}:b&&b.now?r=function(t){b.now(x(t))}:g&&!h?(o=(i=new g).port2,i.port1.onmessage=T,r=u(o.postMessage,o,1)):!a.addEventListener||"function"!=typeof postMessage||a.importScripts||s(O)?r="onreadystatechange"in l("script")?function(t){f.appendChild(l("script")).onreadystatechange=function(){f.removeChild(this),E(t)}}:function(t){setTimeout(x(t),0)}:(r=O,a.addEventListener("message",T,!1))),t.exports={set:d,clear:v}},function(t,e,n){var r,i,o=n(4),a=n(200),s=o.process,c=s&&s.versions,u=c&&c.v8;u?i=(r=u.split("."))[0]+r[1]:a&&(!(r=a.match(/Edge\/(\d+)/))||r[1]>=74)&&(r=a.match(/Chrome\/(\d+)/))&&(i=r[1]),t.exports=i&&+i},function(t,e,n){var r=n(65),i=n(75),o=function(t){return function(e,n){var o,a,s=String(i(e)),c=r(n),u=s.length;return c<0||c>=u?t?"":void 0:(o=s.charCodeAt(c))<55296||o>56319||c+1===u||(a=s.charCodeAt(c+1))<56320||a>57343?t?s.charAt(c):o:t?s.slice(c,c+2):a-56320+(o-55296<<10)+65536}};t.exports={codeAt:o(!1),charAt:o(!0)}},function(t,e,n){var r=n(68),i=n(36),o=n(91),a=n(20),s=function(t){return function(e,n,s,c){r(n);var u=i(e),f=o(u),l=a(u.length),h=t?l-1:0,p=t?-1:1;if(s<2)for(;;){if(h in f){c=f[h],h+=p;break}if(h+=p,t?h<0:l<=h)throw TypeError("Reduce of empty array with no initial value")}for(;t?h>=0:l>h;h+=p)h in f&&(c=n(c,f[h],h,u));return c}};t.exports={left:s(!1),right:s(!0)}},function(t,e,n){var r=n(73)(n(45),"Map");t.exports=r},function(t,e,n){var r=n(45).Symbol;t.exports=r},function(t,e,n){var r=n(214),i=n(316),o=n(169);t.exports=function(t){return o(t)?r(t):i(t)}},function(t,e){var n=Array.isArray;t.exports=n},function(t,e){t.exports=function(t){return function(e){return t(e)}}},function(t,e,n){(function(t){var r=n(209),i=e&&!e.nodeType&&e,o=i&&"object"==typeof t&&t&&!t.nodeType&&t,a=o&&o.exports===i&&r.process,s=function(){try{return o&&o.require&&o.require("util").types||a&&a.binding&&a.binding("util")}catch(t){}}();t.exports=s}).call(this,n(124)(t))},function(t,e){var n=Object.prototype;t.exports=function(t){var e=t&&t.constructor;return t===("function"==typeof e&&e.prototype||n)}},function(t,e,n){var r=n(208),i=n(217);t.exports=function(t){return null!=t&&i(t.length)&&!r(t)}},function(t,e,n){var r=n(220),i=n(221),o=Object.prototype.propertyIsEnumerable,a=Object.getOwnPropertySymbols,s=a?function(t){return null==t?[]:(t=Object(t),r(a(t),function(e){return o.call(t,e)}))}:i;t.exports=s},function(t,e,n){var r=n(327),i=n(162),o=n(328),a=n(329),s=n(330),c=n(120),u=n(210),f=u(r),l=u(i),h=u(o),p=u(a),d=u(s),v=c;(r&&"[object DataView]"!=v(new r(new ArrayBuffer(1)))||i&&"[object Map]"!=v(new i)||o&&"[object Promise]"!=v(o.resolve())||a&&"[object Set]"!=v(new a)||s&&"[object WeakMap]"!=v(new s))&&(v=function(t){var e=c(t),n="[object Object]"==e?t.constructor:void 0,r=n?u(n):"";if(r)switch(r){case f:return"[object DataView]";case l:return"[object Map]";case h:return"[object Promise]";case p:return"[object Set]";case d:return"[object WeakMap]"}return e}),t.exports=v},function(t,e,n){var r=n(333);t.exports=function(t){var e=new t.constructor(t.byteLength);return new r(e).set(new r(t)),e}},function(t,e,n){var r=n(94),i=n(11),o=n(19),a=n(24).f,s=n(93),c=n(231),u=s("meta"),f=0,l=Object.isExtensible||function(){return!0},h=function(t){a(t,u,{value:{objectID:"O"+ ++f,weakData:{}}})},p=t.exports={REQUIRED:!1,fastKey:function(t,e){if(!i(t))return"symbol"==typeof t?t:("string"==typeof t?"S":"P")+t;if(!o(t,u)){if(!l(t))return"F";if(!e)return"E";h(t)}return t[u].objectID},getWeakData:function(t,e){if(!o(t,u)){if(!l(t))return!0;if(!e)return!1;h(t)}return t[u].weakData},onFreeze:function(t){return c&&p.REQUIRED&&l(t)&&!o(t,u)&&h(t),t}};r[u]=!0},function(t,e,n){var r=function(t){"use strict";var e=Object.prototype,n=e.hasOwnProperty,r="function"==typeof Symbol?Symbol:{},i=r.iterator||"@@iterator",o=r.asyncIterator||"@@asyncIterator",a=r.toStringTag||"@@toStringTag";function s(t,e,n,r){var i=e&&e.prototype instanceof f?e:f,o=Object.create(i.prototype),a=new x(r||[]);return o._invoke=function(t,e,n){var r="suspendedStart";return function(i,o){if("executing"===r)throw new Error("Generator is already running");if("completed"===r){if("throw"===i)throw o;return{value:void 0,done:!0}}for(n.method=i,n.arg=o;;){var a=n.delegate;if(a){var s=m(a,n);if(s){if(s===u)continue;return s}}if("next"===n.method)n.sent=n._sent=n.arg;else if("throw"===n.method){if("suspendedStart"===r)throw r="completed",n.arg;n.dispatchException(n.arg)}else"return"===n.method&&n.abrupt("return",n.arg);r="executing";var f=c(t,e,n);if("normal"===f.type){if(r=n.done?"completed":"suspendedYield",f.arg===u)continue;return{value:f.arg,done:n.done}}"throw"===f.type&&(r="completed",n.method="throw",n.arg=f.arg)}}}(t,n,a),o}function c(t,e,n){try{return{type:"normal",arg:t.call(e,n)}}catch(t){return{type:"throw",arg:t}}}t.wrap=s;var u={};function f(){}function l(){}function h(){}var p={};p[i]=function(){return this};var d=Object.getPrototypeOf,v=d&&d(d(T([])));v&&v!==e&&n.call(v,i)&&(p=v);var y=h.prototype=f.prototype=Object.create(p);function g(t){["next","throw","return"].forEach(function(e){t[e]=function(t){return this._invoke(e,t)}})}function b(t){var e;this._invoke=function(r,i){function o(){return new Promise(function(e,o){!function e(r,i,o,a){var s=c(t[r],t,i);if("throw"!==s.type){var u=s.arg,f=u.value;return f&&"object"==typeof f&&n.call(f,"__await")?Promise.resolve(f.__await).then(function(t){e("next",t,o,a)},function(t){e("throw",t,o,a)}):Promise.resolve(f).then(function(t){u.value=t,o(u)},function(t){return e("throw",t,o,a)})}a(s.arg)}(r,i,e,o)})}return e=e?e.then(o,o):o()}}function m(t,e){var n=t.iterator[e.method];if(void 0===n){if(e.delegate=null,"throw"===e.method){if(t.iterator.return&&(e.method="return",e.arg=void 0,m(t,e),"throw"===e.method))return u;e.method="throw",e.arg=new TypeError("The iterator does not provide a 'throw' method")}return u}var r=c(n,t.iterator,e.arg);if("throw"===r.type)return e.method="throw",e.arg=r.arg,e.delegate=null,u;var i=r.arg;return i?i.done?(e[t.resultName]=i.value,e.next=t.nextLoc,"return"!==e.method&&(e.method="next",e.arg=void 0),e.delegate=null,u):i:(e.method="throw",e.arg=new TypeError("iterator result is not an object"),e.delegate=null,u)}function w(t){var e={tryLoc:t[0]};1 in t&&(e.catchLoc=t[1]),2 in t&&(e.finallyLoc=t[2],e.afterLoc=t[3]),this.tryEntries.push(e)}function E(t){var e=t.completion||{};e.type="normal",delete e.arg,t.completion=e}function x(t){this.tryEntries=[{tryLoc:"root"}],t.forEach(w,this),this.reset(!0)}function T(t){if(t){var e=t[i];if(e)return e.call(t);if("function"==typeof t.next)return t;if(!isNaN(t.length)){var r=-1,o=function e(){for(;++r<t.length;)if(n.call(t,r))return e.value=t[r],e.done=!1,e;return e.value=void 0,e.done=!0,e};return o.next=o}}return{next:O}}function O(){return{value:void 0,done:!0}}return l.prototype=y.constructor=h,h.constructor=l,h[a]=l.displayName="GeneratorFunction",t.isGeneratorFunction=function(t){var e="function"==typeof t&&t.constructor;return!!e&&(e===l||"GeneratorFunction"===(e.displayName||e.name))},t.mark=function(t){return Object.setPrototypeOf?Object.setPrototypeOf(t,h):(t.__proto__=h,a in t||(t[a]="GeneratorFunction")),t.prototype=Object.create(y),t},t.awrap=function(t){return{__await:t}},g(b.prototype),b.prototype[o]=function(){return this},t.AsyncIterator=b,t.async=function(e,n,r,i){var o=new b(s(e,n,r,i));return t.isGeneratorFunction(n)?o:o.next().then(function(t){return t.done?t.value:o.next()})},g(y),y[a]="Generator",y[i]=function(){return this},y.toString=function(){return"[object Generator]"},t.keys=function(t){var e=[];for(var n in t)e.push(n);return e.reverse(),function n(){for(;e.length;){var r=e.pop();if(r in t)return n.value=r,n.done=!1,n}return n.done=!0,n}},t.values=T,x.prototype={constructor:x,reset:function(t){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!t)for(var e in this)"t"===e.charAt(0)&&n.call(this,e)&&!isNaN(+e.slice(1))&&(this[e]=void 0)},stop:function(){this.done=!0;var t=this.tryEntries[0].completion;if("throw"===t.type)throw t.arg;return this.rval},dispatchException:function(t){if(this.done)throw t;var e=this;function r(n,r){return a.type="throw",a.arg=t,e.next=n,r&&(e.method="next",e.arg=void 0),!!r}for(var i=this.tryEntries.length-1;i>=0;--i){var o=this.tryEntries[i],a=o.completion;if("root"===o.tryLoc)return r("end");if(o.tryLoc<=this.prev){var s=n.call(o,"catchLoc"),c=n.call(o,"finallyLoc");if(s&&c){if(this.prev<o.catchLoc)return r(o.catchLoc,!0);if(this.prev<o.finallyLoc)return r(o.finallyLoc)}else if(s){if(this.prev<o.catchLoc)return r(o.catchLoc,!0)}else{if(!c)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return r(o.finallyLoc)}}}},abrupt:function(t,e){for(var r=this.tryEntries.length-1;r>=0;--r){var i=this.tryEntries[r];if(i.tryLoc<=this.prev&&n.call(i,"finallyLoc")&&this.prev<i.finallyLoc){var o=i;break}}o&&("break"===t||"continue"===t)&&o.tryLoc<=e&&e<=o.finallyLoc&&(o=null);var a=o?o.completion:{};return a.type=t,a.arg=e,o?(this.method="next",this.next=o.finallyLoc,u):this.complete(a)},complete:function(t,e){if("throw"===t.type)throw t.arg;return"break"===t.type||"continue"===t.type?this.next=t.arg:"return"===t.type?(this.rval=this.arg=t.arg,this.method="return",this.next="end"):"normal"===t.type&&e&&(this.next=e),u},finish:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.finallyLoc===t)return this.complete(n.completion,n.afterLoc),E(n),u}},catch:function(t){for(var e=this.tryEntries.length-1;e>=0;--e){var n=this.tryEntries[e];if(n.tryLoc===t){var r=n.completion;if("throw"===r.type){var i=r.arg;E(n)}return i}}throw new Error("illegal catch attempt")},delegateYield:function(t,e,n){return this.delegate={iterator:T(t),resultName:e,nextLoc:n},"next"===this.method&&(this.arg=void 0),u}},t}(t.exports);try{regeneratorRuntime=r}catch(t){Function("r","regeneratorRuntime = r")(r)}},function(t,e,n){"use strict";(function(e){var r=n(29).EventEmitter,i=n(5),o=n(61),a=n(106),s=n(39);function c(t,e,n){var i=this;r.call(this),setTimeout(function(){i._start(t,e,n)},0)}i(c,r),c.prototype._start=function(t,n,r){var i=this,a=new e.XDomainRequest;n=s.addQuery(n,"t="+ +new Date),a.onerror=function(){i._error()},a.ontimeout=function(){i._error()},a.onprogress=function(){a.responseText,i.emit("chunk",200,a.responseText)},a.onload=function(){i.emit("finish",200,a.responseText),i._cleanup(!1)},this.xdr=a,this.unloadRef=o.unloadAdd(function(){i._cleanup(!0)});try{this.xdr.open(t,n),this.timeout&&(this.xdr.timeout=this.timeout),this.xdr.send(r)}catch(t){this._error()}},c.prototype._error=function(){this.emit("finish",0,""),this._cleanup(!1)},c.prototype._cleanup=function(t){if(this.xdr){if(this.removeAllListeners(),o.unloadDel(this.unloadRef),this.xdr.ontimeout=this.xdr.onerror=this.xdr.onprogress=this.xdr.onload=null,t)try{this.xdr.abort()}catch(t){}this.unloadRef=this.xdr=null}},c.prototype.close=function(){this._cleanup(!0)},c.enabled=!(!e.XDomainRequest||!a.hasDomain()),t.exports=c}).call(this,n(6))},function(t,e,n){"use strict";(function(e){var r=n(5),i=n(239),o=n(177);t.exports=function(t){function n(e,n){i.call(this,t.transportName,e,n)}return r(n,i),n.enabled=function(n,r){if(!e.document)return!1;var a=o.extend({},r);return a.sameOrigin=!0,t.enabled(a)&&i.enabled()},n.transportName="iframe-"+t.transportName,n.needBody=!0,n.roundTrips=i.roundTrips+t.roundTrips-1,n.facadeTransport=t,n}}).call(this,n(6))},function(t,e,n){"use strict";t.exports={isObject:function(t){var e=typeof t;return"function"===e||"object"===e&&!!t},extend:function(t){if(!this.isObject(t))return t;for(var e,n,r=1,i=arguments.length;r<i;r++)for(n in e=arguments[r])Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t}}},function(t,e,n){"use strict";function r(t){this.type=t}r.prototype.initEvent=function(t,e,n){return this.type=t,this.bubbles=e,this.cancelable=n,this.timeStamp=+new Date,this},r.prototype.stopPropagation=function(){},r.prototype.preventDefault=function(){},r.CAPTURING_PHASE=1,r.AT_TARGET=2,r.BUBBLING_PHASE=3,t.exports=r},function(t,e,n){"use strict";var r=n(4),i=n(16),o=n(246),a=n(35),s=n(113),c=n(3),u=n(69),f=n(65),l=n(20),h=n(247),p=n(396),d=n(78),v=n(98),y=n(95).f,g=n(24).f,b=n(248),m=n(58),w=n(44),E=w.get,x=w.set,T=r.ArrayBuffer,O=T,S=r.DataView,_=S&&S.prototype,k=Object.prototype,A=r.RangeError,I=p.pack,C=p.unpack,j=function(t){return[255&t]},P=function(t){return[255&t,t>>8&255]},R=function(t){return[255&t,t>>8&255,t>>16&255,t>>24&255]},L=function(t){return t[3]<<24|t[2]<<16|t[1]<<8|t[0]},N=function(t){return I(t,23,4)},D=function(t){return I(t,52,8)},U=function(t,e){g(t.prototype,e,{get:function(){return E(this)[e]}})},M=function(t,e,n,r){var i=h(n),o=E(t);if(i+e>o.byteLength)throw A("Wrong index");var a=E(o.buffer).bytes,s=i+o.byteOffset,c=a.slice(s,s+e);return r?c:c.reverse()},B=function(t,e,n,r,i,o){var a=h(n),s=E(t);if(a+e>s.byteLength)throw A("Wrong index");for(var c=E(s.buffer).bytes,u=a+s.byteOffset,f=r(+i),l=0;l<e;l++)c[u+l]=f[o?l:e-l-1]};if(o){if(!c(function(){T(1)})||!c(function(){new T(-1)})||c(function(){return new T,new T(1.5),new T(NaN),"ArrayBuffer"!=T.name})){for(var F,H=(O=function(t){return u(this,O),new T(h(t))}).prototype=T.prototype,z=y(T),q=0;z.length>q;)(F=z[q++])in O||a(O,F,T[F]);H.constructor=O}v&&d(_)!==k&&v(_,k);var G=new S(new O(2)),$=_.setInt8;G.setInt8(0,2147483648),G.setInt8(1,2147483649),!G.getInt8(0)&&G.getInt8(1)||s(_,{setInt8:function(t,e){$.call(this,t,e<<24>>24)},setUint8:function(t,e){$.call(this,t,e<<24>>24)}},{unsafe:!0})}else O=function(t){u(this,O,"ArrayBuffer");var e=h(t);x(this,{bytes:b.call(new Array(e),0),byteLength:e}),i||(this.byteLength=e)},S=function(t,e,n){u(this,S,"DataView"),u(t,O,"DataView");var r=E(t).byteLength,o=f(e);if(o<0||o>r)throw A("Wrong offset");if(o+(n=void 0===n?r-o:l(n))>r)throw A("Wrong length");x(this,{buffer:t,byteLength:n,byteOffset:o}),i||(this.buffer=t,this.byteLength=n,this.byteOffset=o)},i&&(U(O,"byteLength"),U(S,"buffer"),U(S,"byteLength"),U(S,"byteOffset")),s(S.prototype,{getInt8:function(t){return M(this,1,t)[0]<<24>>24},getUint8:function(t){return M(this,1,t)[0]},getInt16:function(t){var e=M(this,2,t,arguments.length>1?arguments[1]:void 0);return(e[1]<<8|e[0])<<16>>16},getUint16:function(t){var e=M(this,2,t,arguments.length>1?arguments[1]:void 0);return e[1]<<8|e[0]},getInt32:function(t){return L(M(this,4,t,arguments.length>1?arguments[1]:void 0))},getUint32:function(t){return L(M(this,4,t,arguments.length>1?arguments[1]:void 0))>>>0},getFloat32:function(t){return C(M(this,4,t,arguments.length>1?arguments[1]:void 0),23)},getFloat64:function(t){return C(M(this,8,t,arguments.length>1?arguments[1]:void 0),52)},setInt8:function(t,e){B(this,1,t,j,e)},setUint8:function(t,e){B(this,1,t,j,e)},setInt16:function(t,e){B(this,2,t,P,e,arguments.length>2?arguments[2]:void 0)},setUint16:function(t,e){B(this,2,t,P,e,arguments.length>2?arguments[2]:void 0)},setInt32:function(t,e){B(this,4,t,R,e,arguments.length>2?arguments[2]:void 0)},setUint32:function(t,e){B(this,4,t,R,e,arguments.length>2?arguments[2]:void 0)},setFloat32:function(t,e){B(this,4,t,N,e,arguments.length>2?arguments[2]:void 0)},setFloat64:function(t,e){B(this,8,t,D,e,arguments.length>2?arguments[2]:void 0)}});m(O,"ArrayBuffer"),m(S,"DataView"),t.exports={ArrayBuffer:O,DataView:S}},function(t,e,n){"use strict";var r=Object.prototype.hasOwnProperty;function i(t){try{return decodeURIComponent(t.replace(/\+/g," "))}catch(t){return null}}e.stringify=function(t,e){e=e||"";var n,i,o=[];for(i in"string"!=typeof e&&(e="?"),t)if(r.call(t,i)){if((n=t[i])||null!=n&&!isNaN(n)||(n=""),i=encodeURIComponent(i),n=encodeURIComponent(n),null===i||null===n)continue;o.push(i+"="+n)}return o.length?e+o.join("&"):""},e.parse=function(t){for(var e,n=/([^=?&]+)=?([^&]*)/g,r={};e=n.exec(t);){var o=i(e[1]),a=i(e[2]);null===o||null===a||o in r||(r[o]=a)}return r}},function(t,e){t.exports=function(t){var e=null==t?0:t.length;return e?t[e-1]:void 0}},function(t,e,n){var r=n(348),i=n(349);t.exports=r("v5",80,i)},function(t,e,n){!function(r){var i=n(368);if(!i)throw new Error("vertx-eventbus.js requires sockjs-client, see http://sockjs.org");!function(n){function r(t,e){if(t){if(!e)return t;for(var n in t)t.hasOwnProperty(n)&&void 0===e[n]&&(e[n]=t[n])}return e||{}}var i=function(t,e){var r=this;e=e||{},this.pingInterval=e.vertxbus_ping_interval||5e3,this.pingTimerID=null,this.reconnectEnabled=!1,this.reconnectAttempts=0,this.reconnectTimerID=null,this.maxReconnectAttempts=e.vertxbus_reconnect_attempts_max||1/0,this.reconnectDelayMin=e.vertxbus_reconnect_delay_min||1e3,this.reconnectDelayMax=e.vertxbus_reconnect_delay_max||5e3,this.reconnectExponent=e.vertxbus_reconnect_exponent||2,this.randomizationFactor=e.vertxbus_randomization_factor||.5,this.defaultHeaders=null,this.onerror=function(t){try{console.error(t)}catch(t){}};var o=function(){r.sockJSConn=new n(t,null,e),r.state=i.CONNECTING,r.handlers={},r.replyHandlers={},r.sockJSConn.onopen=function(){r.enablePing(!0),r.state=i.OPEN,r.onopen&&r.onopen(),r.reconnectTimerID&&(r.reconnectAttempts=0,r.onreconnect&&r.onreconnect())},r.sockJSConn.onclose=function(t){r.state=i.CLOSED,r.pingTimerID&&clearInterval(r.pingTimerID),r.reconnectEnabled&&r.reconnectAttempts<r.maxReconnectAttempts&&(r.sockJSConn=null,r.reconnectTimerID=setTimeout(o,function(){var t=r.reconnectDelayMin*Math.pow(r.reconnectExponent,r.reconnectAttempts);if(r.randomizationFactor){var e=Math.random(),n=Math.floor(e*r.randomizationFactor*t);t=0==(1&Math.floor(10*e))?t-n:t+n}return 0|Math.min(t,r.reconnectDelayMax)}()),++r.reconnectAttempts),r.onclose&&r.onclose(t)},r.sockJSConn.onmessage=function(t){var e=JSON.parse(t.data);if(e.replyAddress&&Object.defineProperty(e,"reply",{value:function(t,n,i){r.send(e.replyAddress,t,n,i)}}),r.handlers[e.address])for(var n=r.handlers[e.address],i=0;i<n.length;i++)"err"===e.type?n[i]({failureCode:e.failureCode,failureType:e.failureType,message:e.message}):n[i](null,e);else if(r.replyHandlers[e.address]){var o=r.replyHandlers[e.address];delete r.replyHandlers[e.address],"err"===e.type?o({failureCode:e.failureCode,failureType:e.failureType,message:e.message}):o(null,e)}else if("err"===e.type)r.onerror(e);else try{console.warn("No handler found for message: ",e)}catch(t){}}};o()};i.prototype.send=function(t,e,n,o){if(this.state!=i.OPEN)throw new Error("INVALID_STATE_ERR");"function"==typeof n&&(o=n,n={});var a={type:"send",address:t,headers:r(this.defaultHeaders,n),body:e};if(o){var s="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t,e){return e=16*Math.random(),("y"==t?3&e|8:0|e).toString(16)});a.replyAddress=s,this.replyHandlers[s]=o}this.sockJSConn.send(JSON.stringify(a))},i.prototype.publish=function(t,e,n){if(this.state!=i.OPEN)throw new Error("INVALID_STATE_ERR");this.sockJSConn.send(JSON.stringify({type:"publish",address:t,headers:r(this.defaultHeaders,n),body:e}))},i.prototype.registerHandler=function(t,e,n){if(this.state!=i.OPEN)throw new Error("INVALID_STATE_ERR");"function"==typeof e&&(n=e,e={}),this.handlers[t]||(this.handlers[t]=[],this.sockJSConn.send(JSON.stringify({type:"register",address:t,headers:r(this.defaultHeaders,e)}))),this.handlers[t].push(n)},i.prototype.unregisterHandler=function(t,e,n){if(this.state!=i.OPEN)throw new Error("INVALID_STATE_ERR");var o=this.handlers[t];if(o){"function"==typeof e&&(n=e,e={});var a=o.indexOf(n);-1!=a&&(o.splice(a,1),0===o.length&&(this.sockJSConn.send(JSON.stringify({type:"unregister",address:t,headers:r(this.defaultHeaders,e)})),delete this.handlers[t]))}},i.prototype.close=function(){this.state=i.CLOSING,this.enableReconnect(!1),this.sockJSConn.close()},i.CONNECTING=0,i.OPEN=1,i.CLOSING=2,i.CLOSED=3,i.prototype.enablePing=function(t){var e=this;if(t){var n=function(){e.sockJSConn.send(JSON.stringify({type:"ping"}))};e.pingInterval>0&&(n(),e.pingTimerID=setInterval(n,e.pingInterval))}else e.pingTimerID&&(clearInterval(e.pingTimerID),e.pingTimerID=null)},i.prototype.enableReconnect=function(t){this.reconnectEnabled=t,!t&&this.reconnectTimerID&&(clearTimeout(this.reconnectTimerID),this.reconnectTimerID=null,this.reconnectAttempts=0)},t.exports?e=t.exports=i:e.EventBus=i}(i)}()},function(t,e,n){var r=n(16),i=n(3),o=n(143);t.exports=!r&&!i(function(){return 7!=Object.defineProperty(o("div"),"a",{get:function(){return 7}}).a})},function(t,e,n){var r=n(4),i=n(144),o=r["__core-js_shared__"]||i("__core-js_shared__",{});t.exports=o},function(t,e,n){var r=n(19),i=n(147),o=n(55),a=n(24);t.exports=function(t,e){for(var n=i(e),s=a.f,c=o.f,u=0;u<n.length;u++){var f=n[u];r(t,f)||s(t,f,c(e,f))}}},function(t,e,n){var r=n(4);t.exports=r},function(t,e,n){var r=n(19),i=n(41),o=n(96).indexOf,a=n(94);t.exports=function(t,e){var n,s=i(t),c=0,u=[];for(n in s)!r(a,n)&&r(s,n)&&u.push(n);for(;e.length>c;)r(s,n=e[c++])&&(~o(u,n)||u.push(n));return u}},function(t,e,n){var r=n(151);t.exports=r&&!Symbol.sham&&"symbol"==typeof Symbol.iterator},function(t,e,n){var r=n(16),i=n(24),o=n(17),a=n(112);t.exports=r?Object.defineProperties:function(t,e){o(t);for(var n,r=a(e),s=r.length,c=0;s>c;)i.f(t,n=r[c++],e[n]);return t}},function(t,e,n){var r=n(57);t.exports=r("document","documentElement")},function(t,e,n){var r=n(41),i=n(95).f,o={}.toString,a="object"==typeof window&&window&&Object.getOwnPropertyNames?Object.getOwnPropertyNames(window):[];t.exports.f=function(t){return a&&"[object Window]"==o.call(t)?function(t){try{return i(t)}catch(t){return a.slice()}}(t):i(r(t))}},function(t,e,n){var r=n(7);e.f=r},function(t,e,n){var r=n(187),i=n(19),o=n(193),a=n(24).f;t.exports=function(t){var e=r.Symbol||(r.Symbol={});i(e,t)||a(e,t,{value:o.f(t)})}},function(t,e,n){var r=n(11),i=n(111),o=n(7)("species");t.exports=function(t,e){var n;return i(t)&&("function"!=typeof(n=t.constructor)||n!==Array&&!i(n.prototype)?r(n)&&null===(n=n[o])&&(n=void 0):n=void 0),new(void 0===n?Array:n)(0===e?0:e)}},function(t,e,n){"use strict";var r=n(197).IteratorPrototype,i=n(66),o=n(64),a=n(58),s=n(97),c=function(){return this};t.exports=function(t,e,n){var u=e+" Iterator";return t.prototype=i(r,{next:o(1,n)}),a(t,u,!1,!0),s[u]=c,t}},function(t,e,n){"use strict";var r,i,o,a=n(78),s=n(35),c=n(19),u=n(7),f=n(76),l=u("iterator"),h=!1;[].keys&&("next"in(o=[].keys())?(i=a(a(o)))!==Object.prototype&&(r=i):h=!0),null==r&&(r={}),f||c(r,l)||s(r,l,function(){return this}),t.exports={IteratorPrototype:r,BUGGY_SAFARI_ITERATORS:h}},function(t,e,n){var r=n(17);t.exports=function(t,e,n,i){try{return i?e(r(n)[0],n[1]):e(n)}catch(e){var o=t.return;throw void 0!==o&&r(o.call(t)),e}}},function(t,e,n){var r=n(200);t.exports=/(iphone|ipod|ipad).*applewebkit/i.test(r)},function(t,e,n){var r=n(57);t.exports=r("navigator","userAgent")||""},function(t,e,n){"use strict";var r=n(68),i=function(t){var e,n;this.promise=new t(function(t,r){if(void 0!==e||void 0!==n)throw TypeError("Bad Promise constructor");e=t,n=r}),this.resolve=r(e),this.reject=r(n)};t.exports.f=function(t){return new i(t)}},function(t,e,n){"use strict";var r=n(17);t.exports=function(){var t=r(this),e="";return t.global&&(e+="g"),t.ignoreCase&&(e+="i"),t.multiline&&(e+="m"),t.dotAll&&(e+="s"),t.unicode&&(e+="u"),t.sticky&&(e+="y"),e}},function(t,e){t.exports={CSSRuleList:0,CSSStyleDeclaration:0,CSSValueList:0,ClientRectList:0,DOMRectList:0,DOMStringList:0,DOMTokenList:1,DataTransferItemList:0,FileList:0,HTMLAllCollection:0,HTMLCollection:0,HTMLFormElement:0,HTMLSelectElement:0,MediaList:0,MimeTypeArray:0,NamedNodeMap:0,NodeList:1,PaintRequestList:0,Plugin:0,PluginArray:0,SVGLengthList:0,SVGNumberList:0,SVGPathSegList:0,SVGPointList:0,SVGStringList:0,SVGTransformList:0,SourceBufferList:0,StyleSheetList:0,TextTrackCueList:0,TextTrackList:0,TouchList:0}},function(t,e){for(var n=[],r=0;r<256;++r)n[r]=(r+256).toString(16).substr(1);t.exports=function(t,e){var r=e||0,i=n;return[i[t[r++]],i[t[r++]],i[t[r++]],i[t[r++]],"-",i[t[r++]],i[t[r++]],"-",i[t[r++]],i[t[r++]],"-",i[t[r++]],i[t[r++]],"-",i[t[r++]],i[t[r++]],i[t[r++]],i[t[r++]],i[t[r++]],i[t[r++]]].join("")}},function(t,e,n){"use strict";var r=n(37).forEach,i=n(102),o=n(49),a=i("forEach"),s=o("forEach");t.exports=a&&s?[].forEach:function(t){return r(this,t,arguments.length>1?arguments[1]:void 0)}},function(t,e,n){"use strict";var r=n(16),i=n(3),o=n(112),a=n(149),s=n(142),c=n(36),u=n(91),f=Object.assign,l=Object.defineProperty;t.exports=!f||i(function(){if(r&&1!==f({b:1},f(l({},"a",{enumerable:!0,get:function(){l(this,"b",{value:3,enumerable:!1})}}),{b:2})).b)return!0;var t={},e={},n=Symbol();return t[n]=7,"abcdefghijklmnopqrst".split("").forEach(function(t){e[t]=t}),7!=f({},t)[n]||"abcdefghijklmnopqrst"!=o(f({},e)).join("")})?function(t,e){for(var n=c(t),i=arguments.length,f=1,l=a.f,h=s.f;i>f;)for(var p,d=u(arguments[f++]),v=l?o(d).concat(l(d)):o(d),y=v.length,g=0;y>g;)p=v[g++],r&&!h.call(d,p)||(n[p]=d[p]);return n}:f},function(t,e){t.exports=function(t,e){return t===e||t!=t&&e!=e}},function(t,e,n){var r=n(120),i=n(103);t.exports=function(t){if(!i(t))return!1;var e=r(t);return"[object Function]"==e||"[object GeneratorFunction]"==e||"[object AsyncFunction]"==e||"[object Proxy]"==e}},function(t,e,n){(function(e){var n="object"==typeof e&&e&&e.Object===Object&&e;t.exports=n}).call(this,n(6))},function(t,e){var n=Function.prototype.toString;t.exports=function(t){if(null!=t){try{return n.call(t)}catch(t){}try{return t+""}catch(t){}}return""}},function(t,e,n){var r=n(212),i=n(207),o=Object.prototype.hasOwnProperty;t.exports=function(t,e,n){var a=t[e];o.call(t,e)&&i(a,n)&&(void 0!==n||e in t)||r(t,e,n)}},function(t,e,n){var r=n(213);t.exports=function(t,e,n){"__proto__"==e&&r?r(t,e,{configurable:!0,enumerable:!0,value:n,writable:!0}):t[e]=n}},function(t,e,n){var r=n(73),i=function(){try{var t=r(Object,"defineProperty");return t({},"",{}),t}catch(t){}}();t.exports=i},function(t,e,n){var r=n(215),i=n(310),o=n(165),a=n(216),s=n(313),c=n(314),u=Object.prototype.hasOwnProperty;t.exports=function(t,e){var n=o(t),f=!n&&i(t),l=!n&&!f&&a(t),h=!n&&!f&&!l&&c(t),p=n||f||l||h,d=p?r(t.length,String):[],v=d.length;for(var y in t)!e&&!u.call(t,y)||p&&("length"==y||l&&("offset"==y||"parent"==y)||h&&("buffer"==y||"byteLength"==y||"byteOffset"==y)||s(y,v))||d.push(y);return d}},function(t,e){t.exports=function(t,e){for(var n=-1,r=Array(t);++n<t;)r[n]=e(n);return r}},function(t,e,n){(function(t){var r=n(45),i=n(312),o=e&&!e.nodeType&&e,a=o&&"object"==typeof t&&t&&!t.nodeType&&t,s=a&&a.exports===o?r.Buffer:void 0,c=(s?s.isBuffer:void 0)||i;t.exports=c}).call(this,n(124)(t))},function(t,e){t.exports=function(t){return"number"==typeof t&&t>-1&&t%1==0&&t<=9007199254740991}},function(t,e){t.exports=function(t,e){return function(n){return t(e(n))}}},function(t,e,n){var r=n(214),i=n(319),o=n(169);t.exports=function(t){return o(t)?r(t,!0):i(t)}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length,i=0,o=[];++n<r;){var a=t[n];e(a,n,t)&&(o[i++]=a)}return o}},function(t,e){t.exports=function(){return[]}},function(t,e,n){var r=n(223),i=n(224),o=n(170),a=n(221),s=Object.getOwnPropertySymbols?function(t){for(var e=[];t;)r(e,o(t)),t=i(t);return e}:a;t.exports=s},function(t,e){t.exports=function(t,e){for(var n=-1,r=e.length,i=t.length;++n<r;)t[i+n]=e[n];return t}},function(t,e,n){var r=n(218)(Object.getPrototypeOf,Object);t.exports=r},function(t,e,n){var r=n(223),i=n(165);t.exports=function(t,e,n){var o=e(t);return i(t)?o:r(o,n(t))}},function(t,e,n){"use strict";var r=n(345),i=n(227),o=n(17),a=n(75),s=n(70),c=n(346),u=n(20),f=n(347),l=n(126),h=n(3),p=[].push,d=Math.min,v=!h(function(){return!RegExp(4294967295,"y")});r("split",2,function(t,e,n){var r;return r="c"=="abbc".split(/(b)*/)[1]||4!="test".split(/(?:)/,-1).length||2!="ab".split(/(?:ab)*/).length||4!=".".split(/(.?)(.?)/).length||".".split(/()()/).length>1||"".split(/.?/).length?function(t,n){var r=String(a(this)),o=void 0===n?4294967295:n>>>0;if(0===o)return[];if(void 0===t)return[r];if(!i(t))return e.call(r,t,o);for(var s,c,u,f=[],h=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.unicode?"u":"")+(t.sticky?"y":""),d=0,v=new RegExp(t.source,h+"g");(s=l.call(v,r))&&!((c=v.lastIndex)>d&&(f.push(r.slice(d,s.index)),s.length>1&&s.index<r.length&&p.apply(f,s.slice(1)),u=s[0].length,d=c,f.length>=o));)v.lastIndex===s.index&&v.lastIndex++;return d===r.length?!u&&v.test("")||f.push(""):f.push(r.slice(d)),f.length>o?f.slice(0,o):f}:"0".split(void 0,0).length?function(t,n){return void 0===t&&0===n?[]:e.call(this,t,n)}:e,[function(e,n){var i=a(this),o=null==e?void 0:e[t];return void 0!==o?o.call(e,i,n):r.call(String(i),e,n)},function(t,i){var a=n(r,t,this,i,r!==e);if(a.done)return a.value;var l=o(t),h=String(this),p=s(l,RegExp),y=l.unicode,g=(l.ignoreCase?"i":"")+(l.multiline?"m":"")+(l.unicode?"u":"")+(v?"y":"g"),b=new p(v?l:"^(?:"+l.source+")",g),m=void 0===i?4294967295:i>>>0;if(0===m)return[];if(0===h.length)return null===f(b,h)?[h]:[];for(var w=0,E=0,x=[];E<h.length;){b.lastIndex=v?E:0;var T,O=f(b,v?h:h.slice(E));if(null===O||(T=d(u(b.lastIndex+(v?0:E)),h.length))===w)E=c(h,E,y);else{if(x.push(h.slice(w,E)),x.length===m)return x;for(var S=1;S<=O.length-1;S++)if(x.push(O[S]),x.length===m)return x;E=w=T}}return x.push(h.slice(w)),x}]},!v)},function(t,e,n){var r=n(11),i=n(56),o=n(7)("match");t.exports=function(t){var e;return r(t)&&(void 0!==(e=t[o])?!!e:"RegExp"==i(t))}},function(t,e,n){"use strict";var r=n(67),i=n(36),o=n(198),a=n(157),s=n(20),c=n(116),u=n(100);t.exports=function(t){var e,n,f,l,h,p,d=i(t),v="function"==typeof this?this:Array,y=arguments.length,g=y>1?arguments[1]:void 0,b=void 0!==g,m=u(d),w=0;if(b&&(g=r(g,y>2?arguments[2]:void 0,2)),null==m||v==Array&&a(m))for(n=new v(e=s(d.length));e>w;w++)p=b?g(d[w],w):d[w],c(n,w,p);else for(h=(l=m.call(d)).next,n=new v;!(f=h.call(l)).done;w++)p=b?o(l,g,[f.value,w],!0):f.value,c(n,w,p);return n.length=w,n}},function(t,e){t.exports=function(t){return t}},function(t,e){t.exports="\t\n\v\f\r                　\u2028\u2029\ufeff"},function(t,e,n){var r=n(3);t.exports=!r(function(){return Object.isExtensible(Object.preventExtensions({}))})},function(t,e,n){var r=n(11),i=n(98);t.exports=function(t,e,n){var o,a;return i&&"function"==typeof(o=e.constructor)&&o!==n&&r(a=o.prototype)&&a!==n.prototype&&i(t,a),t}},function(t,e,n){"use strict";function r(){this._listeners={}}r.prototype.addEventListener=function(t,e){t in this._listeners||(this._listeners[t]=[]);var n=this._listeners[t];-1===n.indexOf(e)&&(n=n.concat([e])),this._listeners[t]=n},r.prototype.removeEventListener=function(t,e){var n=this._listeners[t];if(n){var r=n.indexOf(e);-1===r||(n.length>1?this._listeners[t]=n.slice(0,r).concat(n.slice(r+1)):delete this._listeners[t])}},r.prototype.dispatchEvent=function(){var t=arguments[0],e=t.type,n=1===arguments.length?[t]:Array.apply(null,arguments);if(this["on"+e]&&this["on"+e].apply(this,n),e in this._listeners)for(var r=this._listeners[e],i=0;i<r.length;i++)r[i].apply(this,n)},t.exports=r},function(t,e,n){"use strict";var r=n(5),i=n(39),o=n(374),a=n(375);function s(t,e,n,r,s){var c=i.addPath(t,e),u=this;o.call(this,t,n),this.poll=new a(r,c,s),this.poll.on("message",function(t){u.emit("message",t)}),this.poll.once("close",function(t,e){u.poll=null,u.emit("close",t,e),u.close()})}r(s,o),s.prototype.close=function(){o.prototype.close.call(this),this.removeAllListeners(),this.poll&&(this.poll.abort(),this.poll=null)},t.exports=s},function(t,e,n){"use strict";(function(e){var r=n(29).EventEmitter,i=n(5),o=n(61),a=n(39),s=e.XMLHttpRequest;function c(t,e,n,i){var o=this;r.call(this),setTimeout(function(){o._start(t,e,n,i)},0)}i(c,r),c.prototype._start=function(t,e,n,r){var i=this;try{this.xhr=new s}catch(t){}if(!this.xhr)return this.emit("finish",0,"no xhr support"),void this._cleanup();e=a.addQuery(e,"t="+ +new Date),this.unloadRef=o.unloadAdd(function(){i._cleanup(!0)});try{this.xhr.open(t,e,!0),this.timeout&&"timeout"in this.xhr&&(this.xhr.timeout=this.timeout,this.xhr.ontimeout=function(){i.emit("finish",0,""),i._cleanup(!1)})}catch(t){return this.emit("finish",0,""),void this._cleanup(!1)}if(r&&r.noCredentials||!c.supportsCORS||(this.xhr.withCredentials=!0),r&&r.headers)for(var u in r.headers)this.xhr.setRequestHeader(u,r.headers[u]);this.xhr.onreadystatechange=function(){if(i.xhr){var t,e,n=i.xhr;switch(n.readyState,n.readyState){case 3:try{e=n.status,t=n.responseText}catch(t){}1223===e&&(e=204),200===e&&t&&t.length>0&&i.emit("chunk",e,t);break;case 4:1223===(e=n.status)&&(e=204),12005!==e&&12029!==e||(e=0),n.responseText,i.emit("finish",e,n.responseText),i._cleanup(!1)}}};try{i.xhr.send(n)}catch(t){i.emit("finish",0,""),i._cleanup(!1)}},c.prototype._cleanup=function(t){if(this.xhr){if(this.removeAllListeners(),o.unloadDel(this.unloadRef),this.xhr.onreadystatechange=function(){},this.xhr.ontimeout&&(this.xhr.ontimeout=null),t)try{this.xhr.abort()}catch(t){}this.unloadRef=this.xhr=null}},c.prototype.close=function(){this._cleanup(!0)},c.enabled=!!s;var u=["Active"].concat("Object").join("X");!c.enabled&&u in e&&(s=function(){try{return new e[u]("Microsoft.XMLHTTP")}catch(t){return null}},c.enabled=!!new s);var f=!1;try{f="withCredentials"in new s}catch(t){}c.supportsCORS=f,t.exports=c}).call(this,n(6))},function(t,e,n){"use strict";var r=n(5),i=n(83),o=n(130),a=n(175);function s(t){if(!a.enabled)throw new Error("Transport created when disabled");i.call(this,t,"/xhr_streaming",o,a)}r(s,i),s.enabled=function(t){return!t.cookie_needed&&!t.nullOrigin&&a.enabled&&t.sameScheme},s.transportName="xdr-streaming",s.roundTrips=2,t.exports=s},function(t,e,n){"use strict";var r=n(5),i=n(83),o=n(376),a=n(131),s=n(238);function c(t){if(!c.enabled())throw new Error("Transport created when disabled");i.call(this,t,"/eventsource",o,a)}r(c,i),c.enabled=function(){return!!s},c.transportName="eventsource",c.roundTrips=2,t.exports=c},function(t,e,n){(function(e){t.exports=e.EventSource}).call(this,n(6))},function(t,e,n){"use strict";var r=n(5),i=n(50),o=n(29).EventEmitter,a=n(240),s=n(39),c=n(107),u=n(61),f=n(82);function l(t,e,n){if(!l.enabled())throw new Error("Transport created when disabled");o.call(this);var r=this;this.origin=s.getOrigin(n),this.baseUrl=n,this.transUrl=e,this.transport=t,this.windowId=f.string(8);var i=s.addPath(n,"/iframe.html")+"#"+this.windowId;this.iframeObj=c.createIframe(i,function(t){r.emit("close",1006,"Unable to load an iframe ("+t+")"),r.close()}),this.onmessageCallback=this._message.bind(this),u.attachEvent("message",this.onmessageCallback)}r(l,o),l.prototype.close=function(){if(this.removeAllListeners(),this.iframeObj){u.detachEvent("message",this.onmessageCallback);try{this.postMessage("c")}catch(t){}this.iframeObj.cleanup(),this.iframeObj=null,this.onmessageCallback=this.iframeObj=null}},l.prototype._message=function(t){if(t.data,!s.isOriginEqual(t.origin,this.origin))return t.origin,void this.origin;var e;try{e=i.parse(t.data)}catch(e){return void t.data}if(e.windowId!==this.windowId)return e.windowId,void this.windowId;switch(e.type){case"s":this.iframeObj.loaded(),this.postMessage("s",i.stringify([a,this.transport,this.transUrl,this.baseUrl]));break;case"t":this.emit("message",e.data);break;case"c":var n;try{n=i.parse(e.data)}catch(t){return void e.data}this.emit("close",n[0],n[1]),this.close()}},l.prototype.postMessage=function(t,e){this.iframeObj.post(i.stringify({windowId:this.windowId,type:t,data:e||""}),this.origin)},l.prototype.send=function(t){this.postMessage("m",t)},l.enabled=function(){return c.iframeEnabled},l.transportName="iframe",l.roundTrips=2,t.exports=l},function(t,e){t.exports="1.4.0"},function(t,e,n){"use strict";var r=n(5),i=n(378),o=n(105),a=n(83);function s(t){if(!i.enabled)throw new Error("Transport created when disabled");a.call(this,t,"/htmlfile",i,o)}r(s,a),s.enabled=function(t){return i.enabled&&t.sameOrigin},s.transportName="htmlfile",s.roundTrips=2,t.exports=s},function(t,e,n){"use strict";var r=n(5),i=n(83),o=n(130),a=n(131),s=n(105);function c(t){if(!s.enabled&&!a.enabled)throw new Error("Transport created when disabled");i.call(this,t,"/xhr",o,a)}r(c,i),c.enabled=function(t){return!t.nullOrigin&&(!(!s.enabled||!t.sameOrigin)||a.enabled)},c.transportName="xhr-polling",c.roundTrips=2,t.exports=c},function(t,e,n){"use strict";(function(e){t.exports=e.location||{origin:"http://localhost:80",protocol:"http:",host:"localhost",port:80,href:"http://localhost/",hash:""}}).call(this,n(6))},function(t,e,n){"use strict";var r=n(5),i=n(29).EventEmitter,o=n(50),a=n(105),s=n(245);function c(t){var e=this;i.call(this),this.ir=new s(t,a),this.ir.once("finish",function(t,n){e.ir=null,e.emit("message",o.stringify([t,n]))})}r(c,i),c.transportName="iframe-info-receiver",c.prototype.close=function(){this.ir&&(this.ir.close(),this.ir=null),this.removeAllListeners()},t.exports=c},function(t,e,n){"use strict";var r=n(29).EventEmitter,i=n(5),o=n(50),a=n(177);function s(t,e){r.call(this);var n=this,i=+new Date;this.xo=new e("GET",t),this.xo.once("finish",function(t,e){var r,s;if(200===t){if(s=+new Date-i,e)try{r=o.parse(e)}catch(t){}a.isObject(r)||(r={})}n.emit("finish",r,s),n.removeAllListeners()})}i(s,r),s.prototype.close=function(){this.removeAllListeners(),this.xo.close()},t.exports=s},function(t,e){t.exports="undefined"!=typeof ArrayBuffer&&"undefined"!=typeof DataView},function(t,e,n){var r=n(65),i=n(20);t.exports=function(t){if(void 0===t)return 0;var e=r(t),n=i(e);if(e!==n)throw RangeError("Wrong length or index");return n}},function(t,e,n){"use strict";var r=n(36),i=n(77),o=n(20);t.exports=function(t){for(var e=r(this),n=o(e.length),a=arguments.length,s=i(a>1?arguments[1]:void 0,n),c=a>2?arguments[2]:void 0,u=void 0===c?n:i(c,n);u>s;)e[s++]=t;return e}},function(t,e,n){"use strict";var r=n(2),i=n(3),o=n(179),a=n(17),s=n(77),c=n(20),u=n(70),f=o.ArrayBuffer,l=o.DataView,h=f.prototype.slice;r({target:"ArrayBuffer",proto:!0,unsafe:!0,forced:i(function(){return!new f(2).slice(1,void 0).byteLength})},{slice:function(t,e){if(void 0!==h&&void 0===e)return h.call(a(this),t);for(var n=a(this).byteLength,r=s(t,n),i=s(void 0===e?n:e,n),o=new(u(this,f))(c(i-r)),p=new l(this),d=new l(o),v=0;r<i;)d.setUint8(v++,p.getUint8(r++));return o}})},function(t,e,n){var r=n(401);t.exports=function(t,e){var n=r(t);if(n%e)throw RangeError("Wrong offset");return n}},function(t,e,n){var r=n(3),i=n(7),o=n(76),a=i("iterator");t.exports=!r(function(){var t=new URL("b?a=1&b=2&c=3","http://a"),e=t.searchParams,n="";return t.pathname="c%20d",e.forEach(function(t,r){e.delete("b"),n+=r+t}),o&&!t.toJSON||!e.sort||"http://a/c%20d?a=1&c=3"!==t.href||"3"!==e.get("c")||"a=1"!==String(new URLSearchParams("?a=1"))||!e[a]||"a"!==new URL("https://a@b").username||"b"!==new URLSearchParams(new URLSearchParams("a=b")).get("a")||"xn--e1aybc"!==new URL("http://тест").host||"#%D0%B1"!==new URL("http://a#б").hash||"a1c3"!==n||"x"!==new URL("http://x",void 0).host})},function(t,e,n){var r=n(2),i=n(3),o=n(36),a=n(78),s=n(154);r({target:"Object",stat:!0,forced:i(function(){a(1)}),sham:!s},{getPrototypeOf:function(t){return a(o(t))}})},function(t,e,n){"use strict";e.a=function(){return/Edg(e|iOS|A)\//i.test(navigator.userAgent)}},function(module,exports,__webpack_require__){(function(global){var __WEBPACK_AMD_DEFINE_ARRAY__,__WEBPACK_AMD_DEFINE_RESULT__,t,e;t="undefined"!=typeof self?self:"undefined"!=typeof window?window:void 0!==global?global:this,e=function(global){"use strict";global=global||{};var _Base64=global.Base64,version="2.5.1",buffer;if(module.exports)try{buffer=eval("require('buffer').Buffer")}catch(t){buffer=void 0}var b64chars="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",b64tab=function(t){for(var e={},n=0,r=t.length;n<r;n++)e[t.charAt(n)]=n;return e}(b64chars),fromCharCode=String.fromCharCode,cb_utob=function(t){if(t.length<2)return(e=t.charCodeAt(0))<128?t:e<2048?fromCharCode(192|e>>>6)+fromCharCode(128|63&e):fromCharCode(224|e>>>12&15)+fromCharCode(128|e>>>6&63)+fromCharCode(128|63&e);var e=65536+1024*(t.charCodeAt(0)-55296)+(t.charCodeAt(1)-56320);return fromCharCode(240|e>>>18&7)+fromCharCode(128|e>>>12&63)+fromCharCode(128|e>>>6&63)+fromCharCode(128|63&e)},re_utob=/[\uD800-\uDBFF][\uDC00-\uDFFFF]|[^\x00-\x7F]/g,utob=function(t){return t.replace(re_utob,cb_utob)},cb_encode=function(t){var e=[0,2,1][t.length%3],n=t.charCodeAt(0)<<16|(t.length>1?t.charCodeAt(1):0)<<8|(t.length>2?t.charCodeAt(2):0);return[b64chars.charAt(n>>>18),b64chars.charAt(n>>>12&63),e>=2?"=":b64chars.charAt(n>>>6&63),e>=1?"=":b64chars.charAt(63&n)].join("")},btoa=global.btoa?function(t){return global.btoa(t)}:function(t){return t.replace(/[\s\S]{1,3}/g,cb_encode)},_encode=buffer?buffer.from&&Uint8Array&&buffer.from!==Uint8Array.from?function(t){return(t.constructor===buffer.constructor?t:buffer.from(t)).toString("base64")}:function(t){return(t.constructor===buffer.constructor?t:new buffer(t)).toString("base64")}:function(t){return btoa(utob(t))},encode=function(t,e){return e?_encode(String(t)).replace(/[+\/]/g,function(t){return"+"==t?"-":"_"}).replace(/=/g,""):_encode(String(t))},encodeURI=function(t){return encode(t,!0)},re_btou=new RegExp(["[À-ß][-¿]","[à-ï][-¿]{2}","[ð-÷][-¿]{3}"].join("|"),"g"),cb_btou=function(t){switch(t.length){case 4:var e=((7&t.charCodeAt(0))<<18|(63&t.charCodeAt(1))<<12|(63&t.charCodeAt(2))<<6|63&t.charCodeAt(3))-65536;return fromCharCode(55296+(e>>>10))+fromCharCode(56320+(1023&e));case 3:return fromCharCode((15&t.charCodeAt(0))<<12|(63&t.charCodeAt(1))<<6|63&t.charCodeAt(2));default:return fromCharCode((31&t.charCodeAt(0))<<6|63&t.charCodeAt(1))}},btou=function(t){return t.replace(re_btou,cb_btou)},cb_decode=function(t){var e=t.length,n=e%4,r=(e>0?b64tab[t.charAt(0)]<<18:0)|(e>1?b64tab[t.charAt(1)]<<12:0)|(e>2?b64tab[t.charAt(2)]<<6:0)|(e>3?b64tab[t.charAt(3)]:0),i=[fromCharCode(r>>>16),fromCharCode(r>>>8&255),fromCharCode(255&r)];return i.length-=[0,0,2,1][n],i.join("")},_atob=global.atob?function(t){return global.atob(t)}:function(t){return t.replace(/\S{1,4}/g,cb_decode)},atob=function(t){return _atob(String(t).replace(/[^A-Za-z0-9\+\/]/g,""))},_decode=buffer?buffer.from&&Uint8Array&&buffer.from!==Uint8Array.from?function(t){return(t.constructor===buffer.constructor?t:buffer.from(t,"base64")).toString()}:function(t){return(t.constructor===buffer.constructor?t:new buffer(t,"base64")).toString()}:function(t){return btou(_atob(t))},decode=function(t){return _decode(String(t).replace(/[-_]/g,function(t){return"-"==t?"+":"/"}).replace(/[^A-Za-z0-9\+\/]/g,""))},noConflict=function(){var t=global.Base64;return global.Base64=_Base64,t};if(global.Base64={VERSION:version,atob:atob,btoa:btoa,fromBase64:decode,toBase64:encode,utob:utob,encode:encode,encodeURI:encodeURI,btou:btou,decode:decode,noConflict:noConflict,__buffer__:buffer},"function"==typeof Object.defineProperty){var noEnum=function(t){return{value:t,enumerable:!1,writable:!0,configurable:!0}};global.Base64.extendString=function(){Object.defineProperty(String.prototype,"fromBase64",noEnum(function(){return decode(this)})),Object.defineProperty(String.prototype,"toBase64",noEnum(function(t){return encode(this,t)})),Object.defineProperty(String.prototype,"toBase64URI",noEnum(function(){return encode(this,!0)}))}}return global.Meteor&&(Base64=global.Base64),module.exports?module.exports.Base64=global.Base64:(__WEBPACK_AMD_DEFINE_ARRAY__=[],__WEBPACK_AMD_DEFINE_RESULT__=function(){return global.Base64}.apply(exports,__WEBPACK_AMD_DEFINE_ARRAY__),void 0===__WEBPACK_AMD_DEFINE_RESULT__||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)),{Base64:global.Base64}},module.exports=e(t)}).call(this,__webpack_require__(6))},function(t,e,n){"use strict";(function(t){var r=n(182),i=n.n(r),o=n(62),a=n.n(o),s="ksdk::common::reporter::playGuid";e.a=function(e){var n=t.sessionStorage.getItem(s);if(n)return n;var r=e?i()(e,i.a.DNS):a()();return t.sessionStorage.setItem(s,r),r}}).call(this,n(6))},function(t,e,n){var r=n(350)(n(357));t.exports=r},function(t,e,n){var r,i;void 0===(i="function"==typeof(r=function(){var t=/^v?(?:\d+)(\.(?:[x*]|\d+)(\.(?:[x*]|\d+)(\.(?:[x*]|\d+))?(?:-[\da-z\-]+(?:\.[\da-z\-]+)*)?(?:\+[\da-z\-]+(?:\.[\da-z\-]+)*)?)?)?$/i;function e(t){var e,n=t.replace(/^v/,"").replace(/\+.*$/,""),r=("-",-1===(e=n).indexOf("-")?e.length:e.indexOf("-")),i=n.substring(0,r).split(".");return i.push(n.substring(r+1)),i}function n(t){return isNaN(Number(t))?t:Number(t)}function r(e){if("string"!=typeof e)throw new TypeError("Invalid argument expected string");if(!t.test(e))throw new Error("Invalid argument not valid semver ('"+e+"' received)")}function i(t,i){[t,i].forEach(r);for(var o=e(t),a=e(i),s=0;s<Math.max(o.length-1,a.length-1);s++){var c=parseInt(o[s]||0,10),u=parseInt(a[s]||0,10);if(c>u)return 1;if(u>c)return-1}var f=o[o.length-1],l=a[a.length-1];if(f&&l){var h=f.split(".").map(n),p=l.split(".").map(n);for(s=0;s<Math.max(h.length,p.length);s++){if(void 0===h[s]||"string"==typeof p[s]&&"number"==typeof h[s])return-1;if(void 0===p[s]||"string"==typeof h[s]&&"number"==typeof p[s])return 1;if(h[s]>p[s])return 1;if(p[s]>h[s])return-1}}else if(f||l)return f?-1:1;return 0}var o=[">",">=","=","<","<="],a={">":[1],">=":[0,1],"=":[0],"<=":[-1,0],"<":[-1]};return i.compare=function(t,e,n){!function(t){if("string"!=typeof t)throw new TypeError("Invalid operator type, expected string but got "+typeof t);if(-1===o.indexOf(t))throw new TypeError("Invalid operator, expected one of "+o.join("|"))}(n);var r=i(t,e);return a[n].indexOf(r)>-1},i})?r.apply(e,[]):r)||(t.exports=i)},function(t,e,n){"use strict";n(13),n(22),n(108),n(15),n(60),n(31),n(32),n(28),n(18);var r=n(88),i=n.n(r);function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable})),n.push.apply(n,r)}return n}function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}e.a=function(t,e){return t&&t.sources?i()(e).map(function(e){return function(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach(function(e){a(t,e,n[e])}):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach(function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))})}return t}({},e,{src:function(t,e){var n=t.find(function(t){return t.url===e});return n&&n.kurl?n.kurl:e}(t.sources,e.src)})}):e}},function(t,e,n){"use strict";n(108);var r=n(30),i=n(1);e.a=function(t){if(t&&t.length>0){var e=r.a[i.c.DASH].mime,n=t.find(function(t){return t.type===e});return n?n.src:null}return null}},function(t,e,n){t.exports=n(439)},function(t,e,n){var r=n(4),i=n(145),o=r.WeakMap;t.exports="function"==typeof o&&/native code/.test(i(o))},function(t,e,n){var r=n(11);t.exports=function(t){if(!r(t)&&null!==t)throw TypeError("Can't set "+String(t)+" as a prototype");return t}},function(t,e,n){"use strict";var r=n(155),i=n(99);t.exports=r?{}.toString:function(){return"[object "+i(this)+"]"}},function(t,e,n){var r=n(4);t.exports=r.Promise},function(t,e,n){var r,i,o,a,s,c,u,f,l=n(4),h=n(55).f,p=n(56),d=n(158).set,v=n(199),y=l.MutationObserver||l.WebKitMutationObserver,g=l.process,b=l.Promise,m="process"==p(g),w=h(l,"queueMicrotask"),E=w&&w.value;E||(r=function(){var t,e;for(m&&(t=g.domain)&&t.exit();i;){e=i.fn,i=i.next;try{e()}catch(t){throw i?a():o=void 0,t}}o=void 0,t&&t.enter()},m?a=function(){g.nextTick(r)}:y&&!v?(s=!0,c=document.createTextNode(""),new y(r).observe(c,{characterData:!0}),a=function(){c.data=s=!s}):b&&b.resolve?(u=b.resolve(void 0),f=u.then,a=function(){f.call(u,r)}):a=function(){d.call(l,r)}),t.exports=E||function(t){var e={fn:t,next:void 0};o&&(o.next=e),i||(i=e,a()),o=e}},function(t,e,n){var r=n(17),i=n(11),o=n(201);t.exports=function(t,e){if(r(t),i(e)&&e.constructor===t)return e;var n=o.f(t);return(0,n.resolve)(e),n.promise}},function(t,e,n){var r=n(4);t.exports=function(t,e){var n=r.console;n&&n.error&&(1===arguments.length?n.error(t):n.error(t,e))}},function(t,e){t.exports=function(t){try{return{error:!1,value:t()}}catch(t){return{error:!0,value:t}}}},function(t,e,n){var r=n(2),i=n(16),o=n(17),a=n(55);r({target:"Reflect",stat:!0,sham:!i},{getOwnPropertyDescriptor:function(t,e){return a.f(o(t),e)}})},function(t,e,n){var r=n(2),i=n(17),o=n(78);r({target:"Reflect",stat:!0,sham:!n(154)},{getPrototypeOf:function(t){return o(i(t))}})},function(t,e,n){n(2)({target:"Reflect",stat:!0},{ownKeys:n(147)})},function(t,e){var n="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof window.msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto);if(n){var r=new Uint8Array(16);t.exports=function(){return n(r),r}}else{var i=new Array(16);t.exports=function(){for(var t,e=0;e<16;e++)0==(3&e)&&(t=4294967296*Math.random()),i[e]=t>>>((3&e)<<3)&255;return i}}},function(t,e,n){(function(t){var r=void 0!==t&&t||"undefined"!=typeof self&&self||window,i=Function.prototype.apply;function o(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new o(i.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new o(i.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},o.prototype.unref=o.prototype.ref=function(){},o.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(274),e.setImmediate="undefined"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate="undefined"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(6))},function(t,e,n){(function(t,e){!function(t,n){"use strict";if(!t.setImmediate){var r,i,o,a,s,c=1,u={},f=!1,l=t.document,h=Object.getPrototypeOf&&Object.getPrototypeOf(t);h=h&&h.setTimeout?h:t,"[object process]"==={}.toString.call(t.process)?r=function(t){e.nextTick(function(){d(t)})}:function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage("","*"),t.onmessage=n,e}}()?(a="setImmediate$"+Math.random()+"$",s=function(e){e.source===t&&"string"==typeof e.data&&0===e.data.indexOf(a)&&d(+e.data.slice(a.length))},t.addEventListener?t.addEventListener("message",s,!1):t.attachEvent("onmessage",s),r=function(e){t.postMessage(a+e,"*")}):t.MessageChannel?((o=new MessageChannel).port1.onmessage=function(t){d(t.data)},r=function(t){o.port2.postMessage(t)}):l&&"onreadystatechange"in l.createElement("script")?(i=l.documentElement,r=function(t){var e=l.createElement("script");e.onreadystatechange=function(){d(t),e.onreadystatechange=null,i.removeChild(e),e=null},i.appendChild(e)}):r=function(t){setTimeout(d,0,t)},h.setImmediate=function(t){"function"!=typeof t&&(t=new Function(""+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var i={callback:t,args:e};return u[c]=i,r(c),c++},h.clearImmediate=p}function p(t){delete u[t]}function d(t){if(f)setTimeout(d,0,t);else{var e=u[t];if(e){f=!0;try{!function(t){var e=t.callback,n=t.args;switch(n.length){case 0:e();break;case 1:e(n[0]);break;case 2:e(n[0],n[1]);break;case 3:e(n[0],n[1],n[2]);break;default:e.apply(void 0,n)}}(e)}finally{p(t),f=!1}}}}}("undefined"==typeof self?void 0===t?this:t:self)}).call(this,n(6),n(275))},function(t,e){var n,r,i=t.exports={};function o(){throw new Error("setTimeout has not been defined")}function a(){throw new Error("clearTimeout has not been defined")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===o||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n="function"==typeof setTimeout?setTimeout:o}catch(t){n=o}try{r="function"==typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var c,u=[],f=!1,l=-1;function h(){f&&c&&(f=!1,c.length?u=c.concat(u):l=-1,u.length&&p())}function p(){if(!f){var t=s(h);f=!0;for(var e=u.length;e;){for(c=u,u=[];++l<e;)c&&c[l].run();l=-1,e=u.length}c=null,f=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function v(){}i.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];u.push(new d(t,e)),1!==u.length||f||s(p)},d.prototype.run=function(){this.fun.apply(null,this.array)},i.title="browser",i.browser=!0,i.env={},i.argv=[],i.version="",i.versions={},i.on=v,i.addListener=v,i.once=v,i.off=v,i.removeListener=v,i.removeAllListeners=v,i.emit=v,i.prependListener=v,i.prependOnceListener=v,i.listeners=function(t){return[]},i.binding=function(t){throw new Error("process.binding is not supported")},i.cwd=function(){return"/"},i.chdir=function(t){throw new Error("process.chdir is not supported")},i.umask=function(){return 0}},function(t,e,n){var r=n(2),i=n(4),o=n(158);r({global:!0,bind:!0,enumerable:!0,forced:!i.setImmediate||!i.clearImmediate},{setImmediate:o.set,clearImmediate:o.clear})},function(t,e,n){var r=n(278),i=n(308),o=n(211),a=n(309),s=n(318),c=n(321),u=n(322),f=n(323),l=n(324),h=n(325),p=n(326),d=n(171),v=n(331),y=n(332),g=n(338),b=n(165),m=n(216),w=n(340),E=n(103),x=n(342),T=n(164),O={};O["[object Arguments]"]=O["[object Array]"]=O["[object ArrayBuffer]"]=O["[object DataView]"]=O["[object Boolean]"]=O["[object Date]"]=O["[object Float32Array]"]=O["[object Float64Array]"]=O["[object Int8Array]"]=O["[object Int16Array]"]=O["[object Int32Array]"]=O["[object Map]"]=O["[object Number]"]=O["[object Object]"]=O["[object RegExp]"]=O["[object Set]"]=O["[object String]"]=O["[object Symbol]"]=O["[object Uint8Array]"]=O["[object Uint8ClampedArray]"]=O["[object Uint16Array]"]=O["[object Uint32Array]"]=!0,O["[object Error]"]=O["[object Function]"]=O["[object WeakMap]"]=!1,t.exports=function t(e,n,S,_,k,A){var I,C=1&n,j=2&n,P=4&n;if(S&&(I=k?S(e,_,k,A):S(e)),void 0!==I)return I;if(!E(e))return e;var R=b(e);if(R){if(I=v(e),!C)return u(e,I)}else{var L=d(e),N="[object Function]"==L||"[object GeneratorFunction]"==L;if(m(e))return c(e,C);if("[object Object]"==L||"[object Arguments]"==L||N&&!k){if(I=j||N?{}:g(e),!C)return j?l(e,s(I,e)):f(e,a(I,e))}else{if(!O[L])return k?e:{};I=y(e,L,C)}}A||(A=new r);var D=A.get(e);if(D)return D;A.set(e,I),x(e)?e.forEach(function(r){I.add(t(r,n,S,r,e,A))}):w(e)&&e.forEach(function(r,i){I.set(i,t(r,n,S,i,e,A))});var U=P?j?p:h:j?keysIn:T,M=R?void 0:U(e);return i(M||e,function(r,i){M&&(r=e[i=r]),o(I,i,t(r,n,S,i,e,A))}),I}},function(t,e,n){var r=n(118),i=n(284),o=n(285),a=n(286),s=n(287),c=n(288);function u(t){var e=this.__data__=new r(t);this.size=e.size}u.prototype.clear=i,u.prototype.delete=o,u.prototype.get=a,u.prototype.has=s,u.prototype.set=c,t.exports=u},function(t,e){t.exports=function(){this.__data__=[],this.size=0}},function(t,e,n){var r=n(119),i=Array.prototype.splice;t.exports=function(t){var e=this.__data__,n=r(e,t);return!(n<0||(n==e.length-1?e.pop():i.call(e,n,1),--this.size,0))}},function(t,e,n){var r=n(119);t.exports=function(t){var e=this.__data__,n=r(e,t);return n<0?void 0:e[n][1]}},function(t,e,n){var r=n(119);t.exports=function(t){return r(this.__data__,t)>-1}},function(t,e,n){var r=n(119);t.exports=function(t,e){var n=this.__data__,i=r(n,t);return i<0?(++this.size,n.push([t,e])):n[i][1]=e,this}},function(t,e,n){var r=n(118);t.exports=function(){this.__data__=new r,this.size=0}},function(t,e){t.exports=function(t){var e=this.__data__,n=e.delete(t);return this.size=e.size,n}},function(t,e){t.exports=function(t){return this.__data__.get(t)}},function(t,e){t.exports=function(t){return this.__data__.has(t)}},function(t,e,n){var r=n(118),i=n(162),o=n(295);t.exports=function(t,e){var n=this.__data__;if(n instanceof r){var a=n.__data__;if(!i||a.length<199)return a.push([t,e]),this.size=++n.size,this;n=this.__data__=new o(a)}return n.set(t,e),this.size=n.size,this}},function(t,e,n){var r=n(208),i=n(292),o=n(103),a=n(210),s=/^\[object .+?Constructor\]$/,c=Function.prototype,u=Object.prototype,f=c.toString,l=u.hasOwnProperty,h=RegExp("^"+f.call(l).replace(/[\\^$.*+?()[\]{}|]/g,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$");t.exports=function(t){return!(!o(t)||i(t))&&(r(t)?h:s).test(a(t))}},function(t,e,n){var r=n(163),i=Object.prototype,o=i.hasOwnProperty,a=i.toString,s=r?r.toStringTag:void 0;t.exports=function(t){var e=o.call(t,s),n=t[s];try{t[s]=void 0;var r=!0}catch(t){}var i=a.call(t);return r&&(e?t[s]=n:delete t[s]),i}},function(t,e){var n=Object.prototype.toString;t.exports=function(t){return n.call(t)}},function(t,e,n){var r,i=n(293),o=(r=/[^.]+$/.exec(i&&i.keys&&i.keys.IE_PROTO||""))?"Symbol(src)_1."+r:"";t.exports=function(t){return!!o&&o in t}},function(t,e,n){var r=n(45)["__core-js_shared__"];t.exports=r},function(t,e){t.exports=function(t,e){return null==t?void 0:t[e]}},function(t,e,n){var r=n(296),i=n(303),o=n(305),a=n(306),s=n(307);function c(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=a,c.prototype.set=s,t.exports=c},function(t,e,n){var r=n(297),i=n(118),o=n(162);t.exports=function(){this.size=0,this.__data__={hash:new r,map:new(o||i),string:new r}}},function(t,e,n){var r=n(298),i=n(299),o=n(300),a=n(301),s=n(302);function c(t){var e=-1,n=null==t?0:t.length;for(this.clear();++e<n;){var r=t[e];this.set(r[0],r[1])}}c.prototype.clear=r,c.prototype.delete=i,c.prototype.get=o,c.prototype.has=a,c.prototype.set=s,t.exports=c},function(t,e,n){var r=n(121);t.exports=function(){this.__data__=r?r(null):{},this.size=0}},function(t,e){t.exports=function(t){var e=this.has(t)&&delete this.__data__[t];return this.size-=e?1:0,e}},function(t,e,n){var r=n(121),i=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;if(r){var n=e[t];return"__lodash_hash_undefined__"===n?void 0:n}return i.call(e,t)?e[t]:void 0}},function(t,e,n){var r=n(121),i=Object.prototype.hasOwnProperty;t.exports=function(t){var e=this.__data__;return r?void 0!==e[t]:i.call(e,t)}},function(t,e,n){var r=n(121);t.exports=function(t,e){var n=this.__data__;return this.size+=this.has(t)?0:1,n[t]=r&&void 0===e?"__lodash_hash_undefined__":e,this}},function(t,e,n){var r=n(122);t.exports=function(t){var e=r(this,t).delete(t);return this.size-=e?1:0,e}},function(t,e){t.exports=function(t){var e=typeof t;return"string"==e||"number"==e||"symbol"==e||"boolean"==e?"__proto__"!==t:null===t}},function(t,e,n){var r=n(122);t.exports=function(t){return r(this,t).get(t)}},function(t,e,n){var r=n(122);t.exports=function(t){return r(this,t).has(t)}},function(t,e,n){var r=n(122);t.exports=function(t,e){var n=r(this,t),i=n.size;return n.set(t,e),this.size+=n.size==i?0:1,this}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length;++n<r&&!1!==e(t[n],n,t););return t}},function(t,e,n){var r=n(123),i=n(164);t.exports=function(t,e){return t&&r(e,i(e),t)}},function(t,e,n){var r=n(311),i=n(81),o=Object.prototype,a=o.hasOwnProperty,s=o.propertyIsEnumerable,c=r(function(){return arguments}())?r:function(t){return i(t)&&a.call(t,"callee")&&!s.call(t,"callee")};t.exports=c},function(t,e,n){var r=n(120),i=n(81);t.exports=function(t){return i(t)&&"[object Arguments]"==r(t)}},function(t,e){t.exports=function(){return!1}},function(t,e){var n=/^(?:0|[1-9]\d*)$/;t.exports=function(t,e){var r=typeof t;return!!(e=null==e?9007199254740991:e)&&("number"==r||"symbol"!=r&&n.test(t))&&t>-1&&t%1==0&&t<e}},function(t,e,n){var r=n(315),i=n(166),o=n(167),a=o&&o.isTypedArray,s=a?i(a):r;t.exports=s},function(t,e,n){var r=n(120),i=n(217),o=n(81),a={};a["[object Float32Array]"]=a["[object Float64Array]"]=a["[object Int8Array]"]=a["[object Int16Array]"]=a["[object Int32Array]"]=a["[object Uint8Array]"]=a["[object Uint8ClampedArray]"]=a["[object Uint16Array]"]=a["[object Uint32Array]"]=!0,a["[object Arguments]"]=a["[object Array]"]=a["[object ArrayBuffer]"]=a["[object Boolean]"]=a["[object DataView]"]=a["[object Date]"]=a["[object Error]"]=a["[object Function]"]=a["[object Map]"]=a["[object Number]"]=a["[object Object]"]=a["[object RegExp]"]=a["[object Set]"]=a["[object String]"]=a["[object WeakMap]"]=!1,t.exports=function(t){return o(t)&&i(t.length)&&!!a[r(t)]}},function(t,e,n){var r=n(168),i=n(317),o=Object.prototype.hasOwnProperty;t.exports=function(t){if(!r(t))return i(t);var e=[];for(var n in Object(t))o.call(t,n)&&"constructor"!=n&&e.push(n);return e}},function(t,e,n){var r=n(218)(Object.keys,Object);t.exports=r},function(t,e,n){var r=n(123),i=n(219);t.exports=function(t,e){return t&&r(e,i(e),t)}},function(t,e,n){var r=n(103),i=n(168),o=n(320),a=Object.prototype.hasOwnProperty;t.exports=function(t){if(!r(t))return o(t);var e=i(t),n=[];for(var s in t)("constructor"!=s||!e&&a.call(t,s))&&n.push(s);return n}},function(t,e){t.exports=function(t){var e=[];if(null!=t)for(var n in Object(t))e.push(n);return e}},function(t,e,n){(function(t){var r=n(45),i=e&&!e.nodeType&&e,o=i&&"object"==typeof t&&t&&!t.nodeType&&t,a=o&&o.exports===i?r.Buffer:void 0,s=a?a.allocUnsafe:void 0;t.exports=function(t,e){if(e)return t.slice();var n=t.length,r=s?s(n):new t.constructor(n);return t.copy(r),r}}).call(this,n(124)(t))},function(t,e){t.exports=function(t,e){var n=-1,r=t.length;for(e||(e=Array(r));++n<r;)e[n]=t[n];return e}},function(t,e,n){var r=n(123),i=n(170);t.exports=function(t,e){return r(t,i(t),e)}},function(t,e,n){var r=n(123),i=n(222);t.exports=function(t,e){return r(t,i(t),e)}},function(t,e,n){var r=n(225),i=n(170),o=n(164);t.exports=function(t){return r(t,o,i)}},function(t,e,n){var r=n(225),i=n(222),o=n(219);t.exports=function(t){return r(t,o,i)}},function(t,e,n){var r=n(73)(n(45),"DataView");t.exports=r},function(t,e,n){var r=n(73)(n(45),"Promise");t.exports=r},function(t,e,n){var r=n(73)(n(45),"Set");t.exports=r},function(t,e,n){var r=n(73)(n(45),"WeakMap");t.exports=r},function(t,e){var n=Object.prototype.hasOwnProperty;t.exports=function(t){var e=t.length,r=new t.constructor(e);return e&&"string"==typeof t[0]&&n.call(t,"index")&&(r.index=t.index,r.input=t.input),r}},function(t,e,n){var r=n(172),i=n(334),o=n(335),a=n(336),s=n(337);t.exports=function(t,e,n){var c=t.constructor;switch(e){case"[object ArrayBuffer]":return r(t);case"[object Boolean]":case"[object Date]":return new c(+t);case"[object DataView]":return i(t,n);case"[object Float32Array]":case"[object Float64Array]":case"[object Int8Array]":case"[object Int16Array]":case"[object Int32Array]":case"[object Uint8Array]":case"[object Uint8ClampedArray]":case"[object Uint16Array]":case"[object Uint32Array]":return s(t,n);case"[object Map]":return new c;case"[object Number]":case"[object String]":return new c(t);case"[object RegExp]":return o(t);case"[object Set]":return new c;case"[object Symbol]":return a(t)}}},function(t,e,n){var r=n(45).Uint8Array;t.exports=r},function(t,e,n){var r=n(172);t.exports=function(t,e){var n=e?r(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.byteLength)}},function(t,e){var n=/\w*$/;t.exports=function(t){var e=new t.constructor(t.source,n.exec(t));return e.lastIndex=t.lastIndex,e}},function(t,e,n){var r=n(163),i=r?r.prototype:void 0,o=i?i.valueOf:void 0;t.exports=function(t){return o?Object(o.call(t)):{}}},function(t,e,n){var r=n(172);t.exports=function(t,e){var n=e?r(t.buffer):t.buffer;return new t.constructor(n,t.byteOffset,t.length)}},function(t,e,n){var r=n(339),i=n(224),o=n(168);t.exports=function(t){return"function"!=typeof t.constructor||o(t)?{}:r(i(t))}},function(t,e,n){var r=n(103),i=Object.create,o=function(){function t(){}return function(e){if(!r(e))return{};if(i)return i(e);t.prototype=e;var n=new t;return t.prototype=void 0,n}}();t.exports=o},function(t,e,n){var r=n(341),i=n(166),o=n(167),a=o&&o.isMap,s=a?i(a):r;t.exports=s},function(t,e,n){var r=n(171),i=n(81);t.exports=function(t){return i(t)&&"[object Map]"==r(t)}},function(t,e,n){var r=n(343),i=n(166),o=n(167),a=o&&o.isSet,s=a?i(a):r;t.exports=s},function(t,e,n){var r=n(171),i=n(81);t.exports=function(t){return i(t)&&"[object Set]"==r(t)}},function(t,e,n){"use strict";var r=n(3);function i(t,e){return RegExp(t,e)}e.UNSUPPORTED_Y=r(function(){var t=i("a","y");return t.lastIndex=2,null!=t.exec("abcd")}),e.BROKEN_CARET=r(function(){var t=i("^r","gy");return t.lastIndex=2,null!=t.exec("str")})},function(t,e,n){"use strict";n(125);var r=n(38),i=n(3),o=n(7),a=n(126),s=n(35),c=o("species"),u=!i(function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}),f="$0"==="a".replace(/./,"$0"),l=o("replace"),h=!!/./[l]&&""===/./[l]("a","$0"),p=!i(function(){var t=/(?:)/,e=t.exec;t.exec=function(){return e.apply(this,arguments)};var n="ab".split(t);return 2!==n.length||"a"!==n[0]||"b"!==n[1]});t.exports=function(t,e,n,l){var d=o(t),v=!i(function(){var e={};return e[d]=function(){return 7},7!=""[t](e)}),y=v&&!i(function(){var e=!1,n=/a/;return"split"===t&&((n={}).constructor={},n.constructor[c]=function(){return n},n.flags="",n[d]=/./[d]),n.exec=function(){return e=!0,null},n[d](""),!e});if(!v||!y||"replace"===t&&(!u||!f||h)||"split"===t&&!p){var g=/./[d],b=n(d,""[t],function(t,e,n,r,i){return e.exec===a?v&&!i?{done:!0,value:g.call(e,n,r)}:{done:!0,value:t.call(n,e,r)}:{done:!1}},{REPLACE_KEEPS_$0:f,REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE:h}),m=b[0],w=b[1];r(String.prototype,t,m),r(RegExp.prototype,d,2==e?function(t,e){return w.call(t,this,e)}:function(t){return w.call(t,this)})}l&&s(RegExp.prototype[d],"sham",!0)}},function(t,e,n){"use strict";var r=n(160).charAt;t.exports=function(t,e,n){return e+(n?r(t,e).length:1)}},function(t,e,n){var r=n(56),i=n(126);t.exports=function(t,e){var n=t.exec;if("function"==typeof n){var o=n.call(t,e);if("object"!=typeof o)throw TypeError("RegExp exec method returned something other than an Object or null");return o}if("RegExp"!==r(t))throw TypeError("RegExp#exec called on incompatible receiver");return i.call(t,e)}},function(t,e,n){var r=n(204);t.exports=function(t,e,n){var i=function(t,i,o,a){var s=o&&a||0;if("string"==typeof t&&(t=function(t){t=unescape(encodeURIComponent(t));for(var e=new Array(t.length),n=0;n<t.length;n++)e[n]=t.charCodeAt(n);return e}(t)),"string"==typeof i&&(i=function(t){var e=[];return i.replace(/[a-fA-F0-9]{2}/g,function(t){e.push(parseInt(t,16))}),e}()),!Array.isArray(t))throw TypeError("value must be an array of bytes");if(!Array.isArray(i)||16!==i.length)throw TypeError("namespace must be uuid string or an Array of 16 byte values");var c=n(i.concat(t));if(c[6]=15&c[6]|e,c[8]=63&c[8]|128,o)for(var u=0;u<16;++u)o[s+u]=c[u];return o||r(c)};try{i.name=t}catch(t){}return i.DNS="6ba7b810-9dad-11d1-80b4-00c04fd430c8",i.URL="6ba7b811-9dad-11d1-80b4-00c04fd430c8",i}},function(t,e,n){"use strict";function r(t,e,n,r){switch(t){case 0:return e&n^~e&r;case 1:return e^n^r;case 2:return e&n^e&r^n&r;case 3:return e^n^r}}function i(t,e){return t<<e|t>>>32-e}t.exports=function(t){var e=[1518500249,1859775393,2400959708,3395469782],n=[1732584193,4023233417,2562383102,271733878,3285377520];if("string"==typeof t){var o=unescape(encodeURIComponent(t));t=new Array(o.length);for(var a=0;a<o.length;a++)t[a]=o.charCodeAt(a)}t.push(128);var s=t.length/4+2,c=Math.ceil(s/16),u=new Array(c);for(a=0;a<c;a++){u[a]=new Array(16);for(var f=0;f<16;f++)u[a][f]=t[64*a+4*f]<<24|t[64*a+4*f+1]<<16|t[64*a+4*f+2]<<8|t[64*a+4*f+3]}for(u[c-1][14]=8*(t.length-1)/Math.pow(2,32),u[c-1][14]=Math.floor(u[c-1][14]),u[c-1][15]=8*(t.length-1)&4294967295,a=0;a<c;a++){for(var l=new Array(80),h=0;h<16;h++)l[h]=u[a][h];for(h=16;h<80;h++)l[h]=i(l[h-3]^l[h-8]^l[h-14]^l[h-16],1);var p=n[0],d=n[1],v=n[2],y=n[3],g=n[4];for(h=0;h<80;h++){var b=Math.floor(h/20),m=i(p,5)+r(b,d,v,y)+g+e[b]+l[h]>>>0;g=y,y=v,v=i(d,30)>>>0,d=p,p=m}n[0]=n[0]+p>>>0,n[1]=n[1]+d>>>0,n[2]=n[2]+v>>>0,n[3]=n[3]+y>>>0,n[4]=n[4]+g>>>0}return[n[0]>>24&255,n[0]>>16&255,n[0]>>8&255,255&n[0],n[1]>>24&255,n[1]>>16&255,n[1]>>8&255,255&n[1],n[2]>>24&255,n[2]>>16&255,n[2]>>8&255,255&n[2],n[3]>>24&255,n[3]>>16&255,n[3]>>8&255,255&n[3],n[4]>>24&255,n[4]>>16&255,n[4]>>8&255,255&n[4]]}},function(t,e,n){var r=n(229),i=n(351),o=n(353);t.exports=function(t,e){return o(i(t,e,r),t+"")}},function(t,e,n){var r=n(352),i=Math.max;t.exports=function(t,e,n){return e=i(void 0===e?t.length-1:e,0),function(){for(var o=arguments,a=-1,s=i(o.length-e,0),c=Array(s);++a<s;)c[a]=o[e+a];a=-1;for(var u=Array(e+1);++a<e;)u[a]=o[a];return u[e]=n(c),r(t,this,u)}}},function(t,e){t.exports=function(t,e,n){switch(n.length){case 0:return t.call(e);case 1:return t.call(e,n[0]);case 2:return t.call(e,n[0],n[1]);case 3:return t.call(e,n[0],n[1],n[2])}return t.apply(e,n)}},function(t,e,n){var r=n(354),i=n(356)(r);t.exports=i},function(t,e,n){var r=n(355),i=n(213),o=n(229),a=i?function(t,e){return i(t,"toString",{configurable:!0,enumerable:!1,value:r(e),writable:!0})}:o;t.exports=a},function(t,e){t.exports=function(t){return function(){return t}}},function(t,e){var n=Date.now;t.exports=function(t){var e=0,r=0;return function(){var i=n(),o=16-(i-r);if(r=i,o>0){if(++e>=800)return arguments[0]}else e=0;return t.apply(void 0,arguments)}}},function(t,e,n){var r=n(220),i=n(358),o=n(359),a=n(215),s=n(360),c=Math.max;t.exports=function(t){if(!t||!t.length)return[];var e=0;return t=r(t,function(t){if(s(t))return e=c(t.length,e),!0}),a(e,function(e){return i(t,o(e))})}},function(t,e){t.exports=function(t,e){for(var n=-1,r=null==t?0:t.length,i=Array(r);++n<r;)i[n]=e(t[n],n,t);return i}},function(t,e){t.exports=function(t){return function(e){return null==e?void 0:e[t]}}},function(t,e,n){var r=n(169),i=n(81);t.exports=function(t){return i(t)&&r(t)}},function(t,e,n){"use strict";var r=n(2),i=n(91),o=n(41),a=n(102),s=[].join,c=i!=Object,u=a("join",",");r({target:"Array",proto:!0,forced:c||!u},{join:function(t){return s.call(o(this),void 0===t?",":t)}})},function(t,e,n){"use strict";var r=n(2),i=n(363).trim;r({target:"String",proto:!0,forced:n(364)("trim")},{trim:function(){return i(this)}})},function(t,e,n){var r=n(75),i="["+n(230)+"]",o=RegExp("^"+i+i+"*"),a=RegExp(i+i+"*$"),s=function(t){return function(e){var n=String(r(e));return 1&t&&(n=n.replace(o,"")),2&t&&(n=n.replace(a,"")),n}};t.exports={start:s(1),end:s(2),trim:s(3)}},function(t,e,n){var r=n(3),i=n(230);t.exports=function(t){return r(function(){return!!i[t]()||"​᠎"!="​᠎"[t]()||i[t].name!==t})}},function(t,e,n){"use strict";t.exports=function(t,e){if(e=e.split(":")[0],!(t=+t))return!1;switch(e){case"http":case"ws":return 80!==t;case"https":case"wss":return 443!==t;case"ftp":return 21!==t;case"gopher":return 70!==t;case"file":return!1}return 0!==t}},function(t,e,n){"use strict";var r=n(2),i=n(4),o=n(150),a=n(38),s=n(173),c=n(156),u=n(69),f=n(11),l=n(3),h=n(115),p=n(58),d=n(232);t.exports=function(t,e,n){var v=-1!==t.indexOf("Map"),y=-1!==t.indexOf("Weak"),g=v?"set":"add",b=i[t],m=b&&b.prototype,w=b,E={},x=function(t){var e=m[t];a(m,t,"add"==t?function(t){return e.call(this,0===t?0:t),this}:"delete"==t?function(t){return!(y&&!f(t))&&e.call(this,0===t?0:t)}:"get"==t?function(t){return y&&!f(t)?void 0:e.call(this,0===t?0:t)}:"has"==t?function(t){return!(y&&!f(t))&&e.call(this,0===t?0:t)}:function(t,n){return e.call(this,0===t?0:t,n),this})};if(o(t,"function"!=typeof b||!(y||m.forEach&&!l(function(){(new b).entries().next()}))))w=n.getConstructor(e,t,v,g),s.REQUIRED=!0;else if(o(t,!0)){var T=new w,O=T[g](y?{}:-0,1)!=T,S=l(function(){T.has(1)}),_=h(function(t){new b(t)}),k=!y&&l(function(){for(var t=new b,e=5;e--;)t[g](e,e);return!t.has(-0)});_||((w=e(function(e,n){u(e,w,t);var r=d(new b,e,w);return null!=n&&c(n,r[g],r,v),r})).prototype=m,m.constructor=w),(S||k)&&(x("delete"),x("has"),v&&x("get")),(k||O)&&x(g),y&&m.clear&&delete m.clear}return E[t]=w,r({global:!0,forced:w!=b},E),p(w,t),y||n.setStrong(w,t,v),w}},function(t,e,n){"use strict";var r=n(24).f,i=n(66),o=n(113),a=n(67),s=n(69),c=n(156),u=n(153),f=n(114),l=n(16),h=n(173).fastKey,p=n(44),d=p.set,v=p.getterFor;t.exports={getConstructor:function(t,e,n,u){var f=t(function(t,r){s(t,f,e),d(t,{type:e,index:i(null),first:void 0,last:void 0,size:0}),l||(t.size=0),null!=r&&c(r,t[u],t,n)}),p=v(e),y=function(t,e,n){var r,i,o=p(t),a=g(t,e);return a?a.value=n:(o.last=a={index:i=h(e,!0),key:e,value:n,previous:r=o.last,next:void 0,removed:!1},o.first||(o.first=a),r&&(r.next=a),l?o.size++:t.size++,"F"!==i&&(o.index[i]=a)),t},g=function(t,e){var n,r=p(t),i=h(e);if("F"!==i)return r.index[i];for(n=r.first;n;n=n.next)if(n.key==e)return n};return o(f.prototype,{clear:function(){for(var t=p(this),e=t.index,n=t.first;n;)n.removed=!0,n.previous&&(n.previous=n.previous.next=void 0),delete e[n.index],n=n.next;t.first=t.last=void 0,l?t.size=0:this.size=0},delete:function(t){var e=p(this),n=g(this,t);if(n){var r=n.next,i=n.previous;delete e.index[n.index],n.removed=!0,i&&(i.next=r),r&&(r.previous=i),e.first==n&&(e.first=r),e.last==n&&(e.last=i),l?e.size--:this.size--}return!!n},forEach:function(t){for(var e,n=p(this),r=a(t,arguments.length>1?arguments[1]:void 0,3);e=e?e.next:n.first;)for(r(e.value,e.key,this);e&&e.removed;)e=e.previous},has:function(t){return!!g(this,t)}}),o(f.prototype,n?{get:function(t){var e=g(this,t);return e&&e.value},set:function(t,e){return y(this,0===t?0:t,e)}}:{add:function(t){return y(this,t=0===t?0:t,t)}}),l&&r(f.prototype,"size",{get:function(){return p(this).size}}),f},setStrong:function(t,e,n){var r=e+" Iterator",i=v(e),o=v(r);u(t,e,function(t,e){d(this,{type:r,target:t,state:i(t),kind:e,last:void 0})},function(){for(var t=o(this),e=t.kind,n=t.last;n&&n.removed;)n=n.previous;return t.target&&(t.last=n=n?n.next:t.state.first)?"keys"==e?{value:n.key,done:!1}:"values"==e?{value:n.value,done:!1}:{value:[n.key,n.value],done:!1}:(t.target=void 0,{value:void 0,done:!0})},n?"entries":"values",!n,!0),f(e)}}},function(t,e,n){"use strict";(function(e){var r=n(369);t.exports=n(383)(r),"_sockjs_onload"in e&&setTimeout(e._sockjs_onload,1)}).call(this,n(6))},function(t,e,n){"use strict";t.exports=[n(370),n(373),n(236),n(237),n(176)(n(237)),n(241),n(176)(n(241)),n(242),n(379),n(176)(n(242)),n(380)]},function(t,e,n){"use strict";var r=n(61),i=n(39),o=n(5),a=n(29).EventEmitter,s=n(372);function c(t,e,n){if(!c.enabled())throw new Error("Transport created when disabled");a.call(this);var o=this,u=i.addPath(t,"/websocket");u="https"===u.slice(0,5)?"wss"+u.slice(5):"ws"+u.slice(4),this.url=u,this.ws=new s(this.url,[],n),this.ws.onmessage=function(t){t.data,o.emit("message",t.data)},this.unloadRef=r.unloadAdd(function(){o.ws.close()}),this.ws.onclose=function(t){t.code,t.reason,o.emit("close",t.code,t.reason),o._cleanup()},this.ws.onerror=function(t){o.emit("close",1006,"WebSocket connection broken"),o._cleanup()}}o(c,a),c.prototype.send=function(t){var e="["+t+"]";this.ws.send(e)},c.prototype.close=function(){var t=this.ws;this._cleanup(),t&&t.close()},c.prototype._cleanup=function(){var t=this.ws;t&&(t.onmessage=t.onclose=t.onerror=null),r.unloadDel(this.unloadRef),this.unloadRef=this.ws=null,this.removeAllListeners()},c.enabled=function(){return!!s},c.transportName="websocket",c.roundTrips=2,t.exports=c},function(t,e,n){"use strict";(function(e){e.crypto&&e.crypto.getRandomValues?t.exports.randomBytes=function(t){var n=new Uint8Array(t);return e.crypto.getRandomValues(n),n}:t.exports.randomBytes=function(t){for(var e=new Array(t),n=0;n<t;n++)e[n]=Math.floor(256*Math.random());return e}}).call(this,n(6))},function(t,e,n){"use strict";(function(e){var n=e.WebSocket||e.MozWebSocket;t.exports=n?function(t){return new n(t)}:void 0}).call(this,n(6))},function(t,e,n){"use strict";(function(e){var r=n(5),i=n(83),o=n(130),a=n(131),s=n(105),c=n(106);function u(t){if(!s.enabled&&!a.enabled)throw new Error("Transport created when disabled");i.call(this,t,"/xhr_streaming",o,a)}r(u,i),u.enabled=function(t){return!t.nullOrigin&&!c.isOpera()&&a.enabled},u.transportName="xhr-streaming",u.roundTrips=2,u.needBody=!!e.document,t.exports=u}).call(this,n(6))},function(t,e,n){"use strict";var r=n(5),i=n(29).EventEmitter;function o(t,e){i.call(this),this.sendBuffer=[],this.sender=e,this.url=t}r(o,i),o.prototype.send=function(t){this.sendBuffer.push(t),this.sendStop||this.sendSchedule()},o.prototype.sendScheduleWait=function(){var t,e=this;this.sendStop=function(){e.sendStop=null,clearTimeout(t)},t=setTimeout(function(){e.sendStop=null,e.sendSchedule()},25)},o.prototype.sendSchedule=function(){this.sendBuffer.length;var t=this;if(this.sendBuffer.length>0){var e="["+this.sendBuffer.join(",")+"]";this.sendStop=this.sender(this.url,e,function(e){t.sendStop=null,e?(t.emit("close",e.code||1006,"Sending error: "+e),t.close()):t.sendScheduleWait()}),this.sendBuffer=[]}},o.prototype._cleanup=function(){this.removeAllListeners()},o.prototype.close=function(){this._cleanup(),this.sendStop&&(this.sendStop(),this.sendStop=null)},t.exports=o},function(t,e,n){"use strict";var r=n(5),i=n(29).EventEmitter;function o(t,e,n){i.call(this),this.Receiver=t,this.receiveUrl=e,this.AjaxObject=n,this._scheduleReceiver()}r(o,i),o.prototype._scheduleReceiver=function(){var t=this,e=this.poll=new this.Receiver(this.receiveUrl,this.AjaxObject);e.on("message",function(e){t.emit("message",e)}),e.once("close",function(n,r){t.pollIsClosing,t.poll=e=null,t.pollIsClosing||("network"===r?t._scheduleReceiver():(t.emit("close",n||1006,r),t.removeAllListeners()))})},o.prototype.abort=function(){this.removeAllListeners(),this.pollIsClosing=!0,this.poll&&this.poll.abort()},t.exports=o},function(t,e,n){"use strict";var r=n(5),i=n(29).EventEmitter,o=n(238);function a(t){i.call(this);var e=this,n=this.es=new o(t);n.onmessage=function(t){t.data,e.emit("message",decodeURI(t.data))},n.onerror=function(t){n.readyState;var r=2!==n.readyState?"network":"permanent";e._cleanup(),e._close(r)}}r(a,i),a.prototype.abort=function(){this._cleanup(),this._close("user")},a.prototype._cleanup=function(){var t=this.es;t&&(t.onmessage=t.onerror=null,t.close(),this.es=null)},a.prototype._close=function(t){var e=this;setTimeout(function(){e.emit("close",null,t),e.removeAllListeners()},200)},t.exports=a},function(t,e){(function(e){t.exports=e}).call(this,{})},function(t,e,n){"use strict";(function(e){var r=n(5),i=n(107),o=n(39),a=n(29).EventEmitter,s=n(82);function c(t){a.call(this);var n=this;i.polluteGlobalNamespace(),this.id="a"+s.string(6),t=o.addQuery(t,"c="+decodeURIComponent(i.WPrefix+"."+this.id)),c.htmlfileEnabled;var r=c.htmlfileEnabled?i.createHtmlfile:i.createIframe;e[i.WPrefix][this.id]={start:function(){n.iframeObj.loaded()},message:function(t){n.emit("message",t)},stop:function(){n._cleanup(),n._close("network")}},this.iframeObj=r(t,function(){n._cleanup(),n._close("permanent")})}r(c,a),c.prototype.abort=function(){this._cleanup(),this._close("user")},c.prototype._cleanup=function(){this.iframeObj&&(this.iframeObj.cleanup(),this.iframeObj=null),delete e[i.WPrefix][this.id]},c.prototype._close=function(t){this.emit("close",null,t),this.removeAllListeners()},c.htmlfileEnabled=!1;var u=["Active"].concat("Object").join("X");if(u in e)try{c.htmlfileEnabled=!!new e[u]("htmlfile")}catch(t){}c.enabled=c.htmlfileEnabled||i.iframeEnabled,t.exports=c}).call(this,n(6))},function(t,e,n){"use strict";var r=n(5),i=n(83),o=n(236),a=n(130),s=n(175);function c(t){if(!s.enabled)throw new Error("Transport created when disabled");i.call(this,t,"/xhr",a,s)}r(c,i),c.enabled=o.enabled,c.transportName="xdr-polling",c.roundTrips=2,t.exports=c},function(t,e,n){"use strict";(function(e){var r=n(5),i=n(234),o=n(381),a=n(382);function s(t){if(!s.enabled())throw new Error("Transport created when disabled");i.call(this,t,"/jsonp",a,o)}r(s,i),s.enabled=function(){return!!e.document},s.transportName="jsonp-polling",s.roundTrips=1,s.needBody=!0,t.exports=s}).call(this,n(6))},function(t,e,n){"use strict";(function(e){var r=n(107),i=n(82),o=n(106),a=n(39),s=n(5),c=n(29).EventEmitter;function u(t){var n=this;c.call(this),r.polluteGlobalNamespace(),this.id="a"+i.string(6);var o=a.addQuery(t,"c="+encodeURIComponent(r.WPrefix+"."+this.id));e[r.WPrefix][this.id]=this._callback.bind(this),this._createScript(o),this.timeoutId=setTimeout(function(){n._abort(new Error("JSONP script loaded abnormally (timeout)"))},u.timeout)}s(u,c),u.prototype.abort=function(){if(e[r.WPrefix][this.id]){var t=new Error("JSONP user aborted read");t.code=1e3,this._abort(t)}},u.timeout=35e3,u.scriptErrorTimeout=1e3,u.prototype._callback=function(t){this._cleanup(),this.aborting||(t&&this.emit("message",t),this.emit("close",null,"network"),this.removeAllListeners())},u.prototype._abort=function(t){this._cleanup(),this.aborting=!0,this.emit("close",t.code,t.message),this.removeAllListeners()},u.prototype._cleanup=function(){if(clearTimeout(this.timeoutId),this.script2&&(this.script2.parentNode.removeChild(this.script2),this.script2=null),this.script){var t=this.script;t.parentNode.removeChild(t),t.onreadystatechange=t.onerror=t.onload=t.onclick=null,this.script=null}delete e[r.WPrefix][this.id]},u.prototype._scriptError=function(){var t=this;this.errorTimer||(this.errorTimer=setTimeout(function(){t.loadedOkay||t._abort(new Error("JSONP script loaded abnormally (onerror)"))},u.scriptErrorTimeout))},u.prototype._createScript=function(t){var n,r=this,a=this.script=e.document.createElement("script");if(a.id="a"+i.string(8),a.src=t,a.type="text/javascript",a.charset="UTF-8",a.onerror=this._scriptError.bind(this),a.onload=function(){r._abort(new Error("JSONP script loaded abnormally (onload)"))},a.onreadystatechange=function(){if(a.readyState,/loaded|closed/.test(a.readyState)){if(a&&a.htmlFor&&a.onclick){r.loadedOkay=!0;try{a.onclick()}catch(t){}}a&&r._abort(new Error("JSONP script loaded abnormally (onreadystatechange)"))}},void 0===a.async&&e.document.attachEvent)if(o.isOpera())(n=this.script2=e.document.createElement("script")).text="try{var a = document.getElementById('"+a.id+"'); if(a)a.onerror();}catch(x){};",a.async=n.async=!1;else{try{a.htmlFor=a.id,a.event="onclick"}catch(t){}a.async=!0}void 0!==a.async&&(a.async=!0);var s=e.document.getElementsByTagName("head")[0];s.insertBefore(a,s.firstChild),n&&s.insertBefore(n,s.firstChild)},t.exports=u}).call(this,n(6))},function(t,e,n){"use strict";(function(e){var r,i,o=n(82),a=n(39);t.exports=function(t,n,s){r||((r=e.document.createElement("form")).style.display="none",r.style.position="absolute",r.method="POST",r.enctype="application/x-www-form-urlencoded",r.acceptCharset="UTF-8",(i=e.document.createElement("textarea")).name="d",r.appendChild(i),e.document.body.appendChild(r));var c="a"+o.string(8);r.target=c,r.action=a.addQuery(a.addPath(t,"/jsonp_send"),"i="+c);var u=function(t){try{return e.document.createElement('<iframe name="'+t+'">')}catch(r){var n=e.document.createElement("iframe");return n.name=t,n}}(c);u.id=c,u.style.display="none",r.appendChild(u);try{i.value=n}catch(t){}r.submit();var f=function(t){u.onerror&&(u.onreadystatechange=u.onerror=u.onload=null,setTimeout(function(){u.parentNode.removeChild(u),u=null},500),i.value="",s(t))};return u.onerror=function(){f()},u.onload=function(){f()},u.onreadystatechange=function(t){u.readyState,"complete"===u.readyState&&f()},function(){f(new Error("Aborted"))}}}).call(this,n(6))},function(t,e,n){"use strict";(function(e){n(384);var r,i=n(134),o=n(5),a=n(50),s=n(82),c=n(385),u=n(39),f=n(61),l=n(386),h=n(177),p=n(106),d=n(387),v=n(178),y=n(233),g=n(243),b=n(388),m=n(389),w=n(390);function E(t,e,n){if(!(this instanceof E))return new E(t,e,n);if(arguments.length<1)throw new TypeError("Failed to construct 'SockJS: 1 argument required, but only 0 present");y.call(this),this.readyState=E.CONNECTING,this.extensions="",this.protocol="",(n=n||{}).protocols_whitelist&&d.warn("'protocols_whitelist' is DEPRECATED. Use 'transports' instead."),this._transportsWhitelist=n.transports,this._transportOptions=n.transportOptions||{},this._timeout=n.timeout||0;var r=n.sessionId||8;if("function"==typeof r)this._generateSessionId=r;else{if("number"!=typeof r)throw new TypeError("If sessionId is used in the options, it needs to be a number or a function.");this._generateSessionId=function(){return s.string(r)}}this._server=n.server||s.numberString(1e3);var o=new i(t);if(!o.host||!o.protocol)throw new SyntaxError("The URL '"+t+"' is invalid");if(o.hash)throw new SyntaxError("The URL must not contain a fragment");if("http:"!==o.protocol&&"https:"!==o.protocol)throw new SyntaxError("The URL's scheme must be either 'http:' or 'https:'. '"+o.protocol+"' is not allowed.");var a="https:"===o.protocol;if("https:"===g.protocol&&!a)throw new Error("SecurityError: An insecure SockJS connection may not be initiated from a page loaded over HTTPS");e?Array.isArray(e)||(e=[e]):e=[];var c=e.sort();c.forEach(function(t,e){if(!t)throw new SyntaxError("The protocols entry '"+t+"' is invalid.");if(e<c.length-1&&t===c[e+1])throw new SyntaxError("The protocols entry '"+t+"' is duplicated.")});var f=u.getOrigin(g.href);this._origin=f?f.toLowerCase():null,o.set("pathname",o.pathname.replace(/\/+$/,"")),this.url=o.href,this.url,this._urlInfo={nullOrigin:!p.hasDomain(),sameOrigin:u.isOriginEqual(this.url,g.href),sameScheme:u.isSchemeEqual(this.url,g.href)},this._ir=new w(this.url,this._urlInfo),this._ir.once("finish",this._receiveInfo.bind(this))}function x(t){return 1e3===t||t>=3e3&&t<=4999}o(E,y),E.prototype.close=function(t,e){if(t&&!x(t))throw new Error("InvalidAccessError: Invalid code");if(e&&e.length>123)throw new SyntaxError("reason argument has an invalid length");this.readyState!==E.CLOSING&&this.readyState!==E.CLOSED&&this._close(t||1e3,e||"Normal closure",!0)},E.prototype.send=function(t){if("string"!=typeof t&&(t=""+t),this.readyState===E.CONNECTING)throw new Error("InvalidStateError: The connection has not been established yet");this.readyState===E.OPEN&&this._transport.send(c.quote(t))},E.version=n(240),E.CONNECTING=0,E.OPEN=1,E.CLOSING=2,E.CLOSED=3,E.prototype._receiveInfo=function(t,e){if(this._ir=null,t){this._rto=this.countRTO(e),this._transUrl=t.base_url?t.base_url:this.url,t=h.extend(t,this._urlInfo);var n=r.filterToEnabled(this._transportsWhitelist,t);this._transports=n.main,this._transports.length,this._connect()}else this._close(1002,"Cannot connect to server")},E.prototype._connect=function(){for(var t=this._transports.shift();t;t=this._transports.shift()){if(t.transportName,t.needBody&&(!e.document.body||void 0!==e.document.readyState&&"complete"!==e.document.readyState&&"interactive"!==e.document.readyState))return this._transports.unshift(t),void f.attachEvent("load",this._connect.bind(this));var n=Math.max(this._timeout,this._rto*t.roundTrips||5e3);this._transportTimeoutId=setTimeout(this._transportTimeout.bind(this),n);var r=u.addPath(this._transUrl,"/"+this._server+"/"+this._generateSessionId()),i=this._transportOptions[t.transportName],o=new t(r,this._transUrl,i);return o.on("message",this._transportMessage.bind(this)),o.once("close",this._transportClose.bind(this)),o.transportName=t.transportName,void(this._transport=o)}this._close(2e3,"All transports failed",!1)},E.prototype._transportTimeout=function(){this.readyState===E.CONNECTING&&(this._transport&&this._transport.close(),this._transportClose(2007,"Transport timed out"))},E.prototype._transportMessage=function(t){var e,n=this,r=t.slice(0,1),i=t.slice(1);switch(r){case"o":return void this._open();case"h":return this.dispatchEvent(new v("heartbeat")),void this.transport}if(i)try{e=a.parse(i)}catch(t){}if(void 0!==e)switch(r){case"a":Array.isArray(e)&&e.forEach(function(t){n.transport,n.dispatchEvent(new m(t))});break;case"m":this.transport,this.dispatchEvent(new m(e));break;case"c":Array.isArray(e)&&2===e.length&&this._close(e[0],e[1],!0)}},E.prototype._transportClose=function(t,e){this.transport,this._transport&&(this._transport.removeAllListeners(),this._transport=null,this.transport=null),x(t)||2e3===t||this.readyState!==E.CONNECTING?this._close(t,e):this._connect()},E.prototype._open=function(){this._transport&&this._transport.transportName,this.readyState,this.readyState===E.CONNECTING?(this._transportTimeoutId&&(clearTimeout(this._transportTimeoutId),this._transportTimeoutId=null),this.readyState=E.OPEN,this.transport=this._transport.transportName,this.dispatchEvent(new v("open")),this.transport):this._close(1006,"Server lost session")},E.prototype._close=function(t,e,n){this.transport,this.readyState;var r=!1;if(this._ir&&(r=!0,this._ir.close(),this._ir=null),this._transport&&(this._transport.close(),this._transport=null,this.transport=null),this.readyState===E.CLOSED)throw new Error("InvalidStateError: SockJS has already been closed");this.readyState=E.CLOSING,setTimeout(function(){this.readyState=E.CLOSED,r&&this.dispatchEvent(new v("error"));var i=new b("close");i.wasClean=n||!1,i.code=t||1e3,i.reason=e,this.dispatchEvent(i),this.onmessage=this.onclose=this.onerror=null}.bind(this),0)},E.prototype.countRTO=function(t){return t>100?4*t:300+t},t.exports=function(t){return r=l(t),n(393)(E,t),E}}).call(this,n(6))},function(t,e,n){"use strict";var r,i=Array.prototype,o=Object.prototype,a=Function.prototype,s=String.prototype,c=i.slice,u=o.toString,f=function(t){return"[object Function]"===o.toString.call(t)},l=function(t){return"[object String]"===u.call(t)},h=Object.defineProperty&&function(){try{return Object.defineProperty({},"x",{}),!0}catch(t){return!1}}();r=h?function(t,e,n,r){!r&&e in t||Object.defineProperty(t,e,{configurable:!0,enumerable:!1,writable:!0,value:n})}:function(t,e,n,r){!r&&e in t||(t[e]=n)};var p=function(t,e,n){for(var i in e)o.hasOwnProperty.call(e,i)&&r(t,i,e[i],n)},d=function(t){if(null==t)throw new TypeError("can't convert "+t+" to object");return Object(t)};function v(){}p(a,{bind:function(t){var e=this;if(!f(e))throw new TypeError("Function.prototype.bind called on incompatible "+e);for(var n=c.call(arguments,1),r=Math.max(0,e.length-n.length),i=[],o=0;o<r;o++)i.push("$"+o);var a=Function("binder","return function ("+i.join(",")+"){ return binder.apply(this, arguments); }")(function(){if(this instanceof a){var r=e.apply(this,n.concat(c.call(arguments)));return Object(r)===r?r:this}return e.apply(t,n.concat(c.call(arguments)))});return e.prototype&&(v.prototype=e.prototype,a.prototype=new v,v.prototype=null),a}}),p(Array,{isArray:function(t){return"[object Array]"===u.call(t)}});var y,g,b,m=Object("a"),w="a"!==m[0]||!(0 in m);p(i,{forEach:function(t){var e=d(this),n=w&&l(this)?this.split(""):e,r=arguments[1],i=-1,o=n.length>>>0;if(!f(t))throw new TypeError;for(;++i<o;)i in n&&t.call(r,n[i],i,e)}},(y=i.forEach,g=!0,b=!0,y&&(y.call("foo",function(t,e,n){"object"!=typeof n&&(g=!1)}),y.call([1],function(){b="string"==typeof this},"x")),!(y&&g&&b)));var E=Array.prototype.indexOf&&-1!==[0,1].indexOf(1,2);p(i,{indexOf:function(t){var e=w&&l(this)?this.split(""):d(this),n=e.length>>>0;if(!n)return-1;var r=0;for(arguments.length>1&&(r=function(t){var e=+t;return e!=e?e=0:0!==e&&e!==1/0&&e!==-1/0&&(e=(e>0||-1)*Math.floor(Math.abs(e))),e}(arguments[1])),r=r>=0?r:Math.max(0,n+r);r<n;r++)if(r in e&&e[r]===t)return r;return-1}},E);var x,T=s.split;2!=="ab".split(/(?:ab)*/).length||4!==".".split(/(.?)(.?)/).length||"t"==="tesst".split(/(s)*/)[1]||4!=="test".split(/(?:)/,-1).length||"".split(/.?/).length||".".split(/()()/).length>1?(x=void 0===/()??/.exec("")[1],s.split=function(t,e){var n=this;if(void 0===t&&0===e)return[];if("[object RegExp]"!==u.call(t))return T.call(this,t,e);var r,o,a,s,c=[],f=(t.ignoreCase?"i":"")+(t.multiline?"m":"")+(t.extended?"x":"")+(t.sticky?"y":""),l=0;for(t=new RegExp(t.source,f+"g"),n+="",x||(r=new RegExp("^"+t.source+"$(?!\\s)",f)),e=void 0===e?-1>>>0:e>>>0;(o=t.exec(n))&&!((a=o.index+o[0].length)>l&&(c.push(n.slice(l,o.index)),!x&&o.length>1&&o[0].replace(r,function(){for(var t=1;t<arguments.length-2;t++)void 0===arguments[t]&&(o[t]=void 0)}),o.length>1&&o.index<n.length&&i.push.apply(c,o.slice(1)),s=o[0].length,l=a,c.length>=e));)t.lastIndex===o.index&&t.lastIndex++;return l===n.length?!s&&t.test("")||c.push(""):c.push(n.slice(l)),c.length>e?c.slice(0,e):c}):"0".split(void 0,0).length&&(s.split=function(t,e){return void 0===t&&0===e?[]:T.call(this,t,e)});var O=s.substr;p(s,{substr:function(t,e){return O.call(this,t<0&&(t=this.length+t)<0?0:t,e)}},"".substr&&"b"!=="0b".substr(-1))},function(t,e,n){"use strict";var r,i=n(50),o=/[\x00-\x1f\ud800-\udfff\ufffe\uffff\u0300-\u0333\u033d-\u0346\u034a-\u034c\u0350-\u0352\u0357-\u0358\u035c-\u0362\u0374\u037e\u0387\u0591-\u05af\u05c4\u0610-\u0617\u0653-\u0654\u0657-\u065b\u065d-\u065e\u06df-\u06e2\u06eb-\u06ec\u0730\u0732-\u0733\u0735-\u0736\u073a\u073d\u073f-\u0741\u0743\u0745\u0747\u07eb-\u07f1\u0951\u0958-\u095f\u09dc-\u09dd\u09df\u0a33\u0a36\u0a59-\u0a5b\u0a5e\u0b5c-\u0b5d\u0e38-\u0e39\u0f43\u0f4d\u0f52\u0f57\u0f5c\u0f69\u0f72-\u0f76\u0f78\u0f80-\u0f83\u0f93\u0f9d\u0fa2\u0fa7\u0fac\u0fb9\u1939-\u193a\u1a17\u1b6b\u1cda-\u1cdb\u1dc0-\u1dcf\u1dfc\u1dfe\u1f71\u1f73\u1f75\u1f77\u1f79\u1f7b\u1f7d\u1fbb\u1fbe\u1fc9\u1fcb\u1fd3\u1fdb\u1fe3\u1feb\u1fee-\u1fef\u1ff9\u1ffb\u1ffd\u2000-\u2001\u20d0-\u20d1\u20d4-\u20d7\u20e7-\u20e9\u2126\u212a-\u212b\u2329-\u232a\u2adc\u302b-\u302c\uaab2-\uaab3\uf900-\ufa0d\ufa10\ufa12\ufa15-\ufa1e\ufa20\ufa22\ufa25-\ufa26\ufa2a-\ufa2d\ufa30-\ufa6d\ufa70-\ufad9\ufb1d\ufb1f\ufb2a-\ufb36\ufb38-\ufb3c\ufb3e\ufb40-\ufb41\ufb43-\ufb44\ufb46-\ufb4e\ufff0-\uffff]/g;t.exports={quote:function(t){var e=i.stringify(t);return o.lastIndex=0,o.test(e)?(r||(r=function(t){var e,n={},r=[];for(e=0;e<65536;e++)r.push(String.fromCharCode(e));return t.lastIndex=0,r.join("").replace(t,function(t){return n[t]="\\u"+("0000"+t.charCodeAt(0).toString(16)).slice(-4),""}),t.lastIndex=0,n}(o)),e.replace(o,function(t){return r[t]})):e}}},function(t,e,n){"use strict";t.exports=function(t){return{filterToEnabled:function(e,n){var r={main:[],facade:[]};return e?"string"==typeof e&&(e=[e]):e=[],t.forEach(function(t){t&&("websocket"===t.transportName&&!1===n.websocket||(e.length&&-1===e.indexOf(t.transportName)?t.transportName:t.enabled(n)?(t.transportName,r.main.push(t),t.facadeTransport&&r.facade.push(t.facadeTransport)):t.transportName))}),r}}}},function(t,e,n){"use strict";(function(e){var n={};["log","debug","warn"].forEach(function(t){var r;try{r=e.console&&e.console[t]&&e.console[t].apply}catch(t){}n[t]=r?function(){return e.console[t].apply(e.console,arguments)}:"log"===t?function(){}:n.log}),t.exports=n}).call(this,n(6))},function(t,e,n){"use strict";var r=n(5),i=n(178);function o(){i.call(this),this.initEvent("close",!1,!1),this.wasClean=!1,this.code=0,this.reason=""}r(o,i),t.exports=o},function(t,e,n){"use strict";var r=n(5),i=n(178);function o(t){i.call(this),this.initEvent("message",!1,!1),this.data=t}r(o,i),t.exports=o},function(t,e,n){"use strict";var r=n(29).EventEmitter,i=n(5),o=n(39),a=n(175),s=n(131),c=n(105),u=n(391),f=n(392),l=n(245);function h(t,e){var n=this;r.call(this),setTimeout(function(){n.doXhr(t,e)},0)}i(h,r),h._getReceiver=function(t,e,n){return n.sameOrigin?new l(e,c):s.enabled?new l(e,s):a.enabled&&n.sameScheme?new l(e,a):f.enabled()?new f(t,e):new l(e,u)},h.prototype.doXhr=function(t,e){var n=this,r=o.addPath(t,"/info");this.xo=h._getReceiver(t,r,e),this.timeoutRef=setTimeout(function(){n._cleanup(!1),n.emit("finish")},h.timeout),this.xo.once("finish",function(t,e){n._cleanup(!0),n.emit("finish",t,e)})},h.prototype._cleanup=function(t){clearTimeout(this.timeoutRef),this.timeoutRef=null,!t&&this.xo&&this.xo.close(),this.xo=null},h.prototype.close=function(){this.removeAllListeners(),this._cleanup(!1)},h.timeout=8e3,t.exports=h},function(t,e,n){"use strict";var r=n(29).EventEmitter;function i(){var t=this;r.call(this),this.to=setTimeout(function(){t.emit("finish",200,"{}")},i.timeout)}n(5)(i,r),i.prototype.close=function(){clearTimeout(this.to)},i.timeout=2e3,t.exports=i},function(t,e,n){"use strict";(function(e){var r=n(29).EventEmitter,i=n(5),o=n(50),a=n(61),s=n(239),c=n(244);function u(t,n){var i=this;r.call(this);var u=function(){var e=i.ifr=new s(c.transportName,n,t);e.once("message",function(t){if(t){var e;try{e=o.parse(t)}catch(t){return i.emit("finish"),void i.close()}var n=e[0],r=e[1];i.emit("finish",n,r)}i.close()}),e.once("close",function(){i.emit("finish"),i.close()})};e.document.body?u():a.attachEvent("load",u)}i(u,r),u.enabled=function(){return s.enabled()},u.prototype.close=function(){this.ifr&&this.ifr.close(),this.removeAllListeners(),this.ifr=null},t.exports=u}).call(this,n(6))},function(t,e,n){"use strict";var r=n(39),i=n(61),o=n(50),a=n(394),s=n(244),c=n(107),u=n(243);t.exports=function(t,e){var n,f={};e.forEach(function(t){t.facadeTransport&&(f[t.facadeTransport.transportName]=t.facadeTransport)}),f[s.transportName]=s,t.bootstrap_iframe=function(){var e;c.currentWindowId=u.hash.slice(1),i.attachEvent("message",function(i){if(i.source===parent&&(void 0===n&&(n=i.origin),i.origin===n)){var s;try{s=o.parse(i.data)}catch(t){return void i.data}if(s.windowId===c.currentWindowId)switch(s.type){case"s":var l;try{l=o.parse(s.data)}catch(t){s.data;break}var h=l[0],p=l[1],d=l[2],v=l[3];if(h!==t.version)throw new Error('Incompatible SockJS! Main site uses: "'+h+'", the iframe: "'+t.version+'".');if(!r.isOriginEqual(d,u.href)||!r.isOriginEqual(v,u.href))throw new Error("Can't connect to different domain from within an iframe. ("+u.href+", "+d+", "+v+")");e=new a(new f[p](d,v));break;case"m":e._send(s.data);break;case"c":e&&e._close(),e=null}}}),c.postMessage("s")}}},function(t,e,n){"use strict";var r=n(50),i=n(107);function o(t){this._transport=t,t.on("message",this._transportMessage.bind(this)),t.on("close",this._transportClose.bind(this))}o.prototype._transportClose=function(t,e){i.postMessage("c",r.stringify([t,e]))},o.prototype._transportMessage=function(t){i.postMessage("t",t)},o.prototype._send=function(t){this._transport.send(t)},o.prototype._close=function(){this._transport.close(),this._transport.removeAllListeners()},t.exports=o},function(t,e,n){"use strict";var r=n(2),i=n(4),o=n(179),a=n(114),s=o.ArrayBuffer;r({global:!0,forced:i.ArrayBuffer!==s},{ArrayBuffer:s}),a("ArrayBuffer")},function(t,e){var n=Math.abs,r=Math.pow,i=Math.floor,o=Math.log,a=Math.LN2;t.exports={pack:function(t,e,s){var c,u,f,l=new Array(s),h=8*s-e-1,p=(1<<h)-1,d=p>>1,v=23===e?r(2,-24)-r(2,-77):0,y=t<0||0===t&&1/t<0?1:0,g=0;for((t=n(t))!=t||t===1/0?(u=t!=t?1:0,c=p):(c=i(o(t)/a),t*(f=r(2,-c))<1&&(c--,f*=2),(t+=c+d>=1?v/f:v*r(2,1-d))*f>=2&&(c++,f/=2),c+d>=p?(u=0,c=p):c+d>=1?(u=(t*f-1)*r(2,e),c+=d):(u=t*r(2,d-1)*r(2,e),c=0));e>=8;l[g++]=255&u,u/=256,e-=8);for(c=c<<e|u,h+=e;h>0;l[g++]=255&c,c/=256,h-=8);return l[--g]|=128*y,l},unpack:function(t,e){var n,i=t.length,o=8*i-e-1,a=(1<<o)-1,s=a>>1,c=o-7,u=i-1,f=t[u--],l=127&f;for(f>>=7;c>0;l=256*l+t[u],u--,c-=8);for(n=l&(1<<-c)-1,l>>=-c,c+=e;c>0;n=256*n+t[u],u--,c-=8);if(0===l)l=1-s;else{if(l===a)return n?NaN:f?-1/0:1/0;n+=r(2,e),l-=s}return(f?-1:1)*n*r(2,l-e)}}},function(t,e,n){var r,i;void 0===(i="function"==typeof(r=function(){"use strict";function t(t,e,n){this.low=0|t,this.high=0|e,this.unsigned=!!n}function e(t){return!0===(t&&t.__isLong__)}t.prototype.__isLong__,Object.defineProperty(t.prototype,"__isLong__",{value:!0,enumerable:!1,configurable:!1}),t.isLong=e;var n={},r={};function i(t,e){var i,o,s;return e?(s=0<=(t>>>=0)&&t<256)&&(o=r[t])?o:(i=a(t,(0|t)<0?-1:0,!0),s&&(r[t]=i),i):(s=-128<=(t|=0)&&t<128)&&(o=n[t])?o:(i=a(t,t<0?-1:0,!1),s&&(n[t]=i),i)}function o(t,e){if(isNaN(t)||!isFinite(t))return e?v:d;if(e){if(t<0)return v;if(t>=l)return w}else{if(t<=-h)return E;if(t+1>=h)return m}return t<0?o(-t,e).neg():a(t%f|0,t/f|0,e)}function a(e,n,r){return new t(e,n,r)}t.fromInt=i,t.fromNumber=o,t.fromBits=a;var s=Math.pow;function c(t,e,n){if(0===t.length)throw Error("empty string");if("NaN"===t||"Infinity"===t||"+Infinity"===t||"-Infinity"===t)return d;if("number"==typeof e?(n=e,e=!1):e=!!e,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=t.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(t.substring(1),e,n).neg();for(var i=o(s(n,8)),a=d,u=0;u<t.length;u+=8){var f=Math.min(8,t.length-u),l=parseInt(t.substring(u,u+f),n);if(f<8){var h=o(s(n,f));a=a.mul(h).add(o(l))}else a=(a=a.mul(i)).add(o(l))}return a.unsigned=e,a}function u(e){return e instanceof t?e:"number"==typeof e?o(e):"string"==typeof e?c(e):a(e.low,e.high,e.unsigned)}t.fromString=c,t.fromValue=u;var f=4294967296,l=f*f,h=l/2,p=i(1<<24),d=i(0);t.ZERO=d;var v=i(0,!0);t.UZERO=v;var y=i(1);t.ONE=y;var g=i(1,!0);t.UONE=g;var b=i(-1);t.NEG_ONE=b;var m=a(-1,2147483647,!1);t.MAX_VALUE=m;var w=a(-1,-1,!0);t.MAX_UNSIGNED_VALUE=w;var E=a(0,-2147483648,!1);t.MIN_VALUE=E;var x=t.prototype;return x.toInt=function(){return this.unsigned?this.low>>>0:this.low},x.toNumber=function(){return this.unsigned?(this.high>>>0)*f+(this.low>>>0):this.high*f+(this.low>>>0)},x.toString=function(t){if((t=t||10)<2||36<t)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(E)){var e=o(t),n=this.div(e),r=n.mul(e).sub(this);return n.toString(t)+r.toInt().toString(t)}return"-"+this.neg().toString(t)}for(var i=o(s(t,6),this.unsigned),a=this,c="";;){var u=a.div(i),f=(a.sub(u.mul(i)).toInt()>>>0).toString(t);if((a=u).isZero())return f+c;for(;f.length<6;)f="0"+f;c=""+f+c}},x.getHighBits=function(){return this.high},x.getHighBitsUnsigned=function(){return this.high>>>0},x.getLowBits=function(){return this.low},x.getLowBitsUnsigned=function(){return this.low>>>0},x.getNumBitsAbs=function(){if(this.isNegative())return this.eq(E)?64:this.neg().getNumBitsAbs();for(var t=0!=this.high?this.high:this.low,e=31;e>0&&0==(t&1<<e);e--);return 0!=this.high?e+33:e+1},x.isZero=function(){return 0===this.high&&0===this.low},x.isNegative=function(){return!this.unsigned&&this.high<0},x.isPositive=function(){return this.unsigned||this.high>=0},x.isOdd=function(){return 1==(1&this.low)},x.isEven=function(){return 0==(1&this.low)},x.equals=function(t){return e(t)||(t=u(t)),(this.unsigned===t.unsigned||this.high>>>31!=1||t.high>>>31!=1)&&this.high===t.high&&this.low===t.low},x.eq=x.equals,x.notEquals=function(t){return!this.eq(t)},x.neq=x.notEquals,x.lessThan=function(t){return this.comp(t)<0},x.lt=x.lessThan,x.lessThanOrEqual=function(t){return this.comp(t)<=0},x.lte=x.lessThanOrEqual,x.greaterThan=function(t){return this.comp(t)>0},x.gt=x.greaterThan,x.greaterThanOrEqual=function(t){return this.comp(t)>=0},x.gte=x.greaterThanOrEqual,x.compare=function(t){if(e(t)||(t=u(t)),this.eq(t))return 0;var n=this.isNegative(),r=t.isNegative();return n&&!r?-1:!n&&r?1:this.unsigned?t.high>>>0>this.high>>>0||t.high===this.high&&t.low>>>0>this.low>>>0?-1:1:this.sub(t).isNegative()?-1:1},x.comp=x.compare,x.negate=function(){return!this.unsigned&&this.eq(E)?E:this.not().add(y)},x.neg=x.negate,x.add=function(t){e(t)||(t=u(t));var n=this.high>>>16,r=65535&this.high,i=this.low>>>16,o=65535&this.low,s=t.high>>>16,c=65535&t.high,f=t.low>>>16,l=0,h=0,p=0,d=0;return p+=(d+=o+(65535&t.low))>>>16,h+=(p+=i+f)>>>16,l+=(h+=r+c)>>>16,l+=n+s,a((p&=65535)<<16|(d&=65535),(l&=65535)<<16|(h&=65535),this.unsigned)},x.subtract=function(t){return e(t)||(t=u(t)),this.add(t.neg())},x.sub=x.subtract,x.multiply=function(t){if(this.isZero())return d;if(e(t)||(t=u(t)),t.isZero())return d;if(this.eq(E))return t.isOdd()?E:d;if(t.eq(E))return this.isOdd()?E:d;if(this.isNegative())return t.isNegative()?this.neg().mul(t.neg()):this.neg().mul(t).neg();if(t.isNegative())return this.mul(t.neg()).neg();if(this.lt(p)&&t.lt(p))return o(this.toNumber()*t.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,i=this.low>>>16,s=65535&this.low,c=t.high>>>16,f=65535&t.high,l=t.low>>>16,h=65535&t.low,v=0,y=0,g=0,b=0;return g+=(b+=s*h)>>>16,y+=(g+=i*h)>>>16,g&=65535,y+=(g+=s*l)>>>16,v+=(y+=r*h)>>>16,y&=65535,v+=(y+=i*l)>>>16,y&=65535,v+=(y+=s*f)>>>16,v+=n*h+r*l+i*f+s*c,a((g&=65535)<<16|(b&=65535),(v&=65535)<<16|(y&=65535),this.unsigned)},x.mul=x.multiply,x.divide=function(t){if(e(t)||(t=u(t)),t.isZero())throw Error("division by zero");if(this.isZero())return this.unsigned?v:d;var n,r,i;if(this.unsigned){if(t.unsigned||(t=t.toUnsigned()),t.gt(this))return v;if(t.gt(this.shru(1)))return g;i=v}else{if(this.eq(E))return t.eq(y)||t.eq(b)?E:t.eq(E)?y:(n=this.shr(1).div(t).shl(1)).eq(d)?t.isNegative()?y:b:(r=this.sub(t.mul(n)),i=n.add(r.div(t)));if(t.eq(E))return this.unsigned?v:d;if(this.isNegative())return t.isNegative()?this.neg().div(t.neg()):this.neg().div(t).neg();if(t.isNegative())return this.div(t.neg()).neg();i=d}for(r=this;r.gte(t);){n=Math.max(1,Math.floor(r.toNumber()/t.toNumber()));for(var a=Math.ceil(Math.log(n)/Math.LN2),c=a<=48?1:s(2,a-48),f=o(n),l=f.mul(t);l.isNegative()||l.gt(r);)l=(f=o(n-=c,this.unsigned)).mul(t);f.isZero()&&(f=y),i=i.add(f),r=r.sub(l)}return i},x.div=x.divide,x.modulo=function(t){return e(t)||(t=u(t)),this.sub(this.div(t).mul(t))},x.mod=x.modulo,x.not=function(){return a(~this.low,~this.high,this.unsigned)},x.and=function(t){return e(t)||(t=u(t)),a(this.low&t.low,this.high&t.high,this.unsigned)},x.or=function(t){return e(t)||(t=u(t)),a(this.low|t.low,this.high|t.high,this.unsigned)},x.xor=function(t){return e(t)||(t=u(t)),a(this.low^t.low,this.high^t.high,this.unsigned)},x.shiftLeft=function(t){return e(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?a(this.low<<t,this.high<<t|this.low>>>32-t,this.unsigned):a(0,this.low<<t-32,this.unsigned)},x.shl=x.shiftLeft,x.shiftRight=function(t){return e(t)&&(t=t.toInt()),0==(t&=63)?this:t<32?a(this.low>>>t|this.high<<32-t,this.high>>t,this.unsigned):a(this.high>>t-32,this.high>=0?0:-1,this.unsigned)},x.shr=x.shiftRight,x.shiftRightUnsigned=function(t){if(e(t)&&(t=t.toInt()),0==(t&=63))return this;var n=this.high;return t<32?a(this.low>>>t|n<<32-t,n>>>t,this.unsigned):a(32===t?n:n>>>t-32,0,this.unsigned)},x.shru=x.shiftRightUnsigned,x.toSigned=function(){return this.unsigned?a(this.low,this.high,!1):this},x.toUnsigned=function(){return this.unsigned?this:a(this.low,this.high,!0)},x.toBytes=function(t){return t?this.toBytesLE():this.toBytesBE()},x.toBytesLE=function(){var t=this.high,e=this.low;return[255&e,e>>>8&255,e>>>16&255,e>>>24&255,255&t,t>>>8&255,t>>>16&255,t>>>24&255]},x.toBytesBE=function(){var t=this.high,e=this.low;return[t>>>24&255,t>>>16&255,t>>>8&255,255&t,e>>>24&255,e>>>16&255,e>>>8&255,255&e]},t})?r.apply(e,[]):r)||(t.exports=i)},function(t,e,n){n(399)("Uint8",function(t){return function(e,n,r){return t(this,e,n,r)}})},function(t,e,n){"use strict";var r=n(2),i=n(4),o=n(16),a=n(400),s=n(8),c=n(179),u=n(69),f=n(64),l=n(35),h=n(20),p=n(247),d=n(250),v=n(92),y=n(19),g=n(99),b=n(11),m=n(66),w=n(98),E=n(95).f,x=n(402),T=n(37).forEach,O=n(114),S=n(24),_=n(55),k=n(44),A=n(232),I=k.get,C=k.set,j=S.f,P=_.f,R=Math.round,L=i.RangeError,N=c.ArrayBuffer,D=c.DataView,U=s.NATIVE_ARRAY_BUFFER_VIEWS,M=s.TYPED_ARRAY_TAG,B=s.TypedArray,F=s.TypedArrayPrototype,H=s.aTypedArrayConstructor,z=s.isTypedArray,q=function(t,e){for(var n=0,r=e.length,i=new(H(t))(r);r>n;)i[n]=e[n++];return i},G=function(t,e){j(t,e,{get:function(){return I(this)[e]}})},$=function(t){var e;return t instanceof N||"ArrayBuffer"==(e=g(t))||"SharedArrayBuffer"==e},V=function(t,e){return z(t)&&"symbol"!=typeof e&&e in t&&String(+e)==String(e)},W=function(t,e){return V(t,e=v(e,!0))?f(2,t[e]):P(t,e)},Y=function(t,e,n){return!(V(t,e=v(e,!0))&&b(n)&&y(n,"value"))||y(n,"get")||y(n,"set")||n.configurable||y(n,"writable")&&!n.writable||y(n,"enumerable")&&!n.enumerable?j(t,e,n):(t[e]=n.value,t)};o?(U||(_.f=W,S.f=Y,G(F,"buffer"),G(F,"byteOffset"),G(F,"byteLength"),G(F,"length")),r({target:"Object",stat:!0,forced:!U},{getOwnPropertyDescriptor:W,defineProperty:Y}),t.exports=function(t,e,n){var o=t.match(/\d+$/)[0]/8,s=t+(n?"Clamped":"")+"Array",c="get"+t,f="set"+t,v=i[s],y=v,g=y&&y.prototype,S={},_=function(t,e){j(t,e,{get:function(){return function(t,e){var n=I(t);return n.view[c](e*o+n.byteOffset,!0)}(this,e)},set:function(t){return function(t,e,r){var i=I(t);n&&(r=(r=R(r))<0?0:r>255?255:255&r),i.view[f](e*o+i.byteOffset,r,!0)}(this,e,t)},enumerable:!0})};U?a&&(y=e(function(t,e,n,r){return u(t,y,s),A(b(e)?$(e)?void 0!==r?new v(e,d(n,o),r):void 0!==n?new v(e,d(n,o)):new v(e):z(e)?q(y,e):x.call(y,e):new v(p(e)),t,y)}),w&&w(y,B),T(E(v),function(t){t in y||l(y,t,v[t])}),y.prototype=g):(y=e(function(t,e,n,r){u(t,y,s);var i,a,c,f=0,l=0;if(b(e)){if(!$(e))return z(e)?q(y,e):x.call(y,e);i=e,l=d(n,o);var v=e.byteLength;if(void 0===r){if(v%o)throw L("Wrong length");if((a=v-l)<0)throw L("Wrong length")}else if((a=h(r)*o)+l>v)throw L("Wrong length");c=a/o}else c=p(e),i=new N(a=c*o);for(C(t,{buffer:i,byteOffset:l,byteLength:a,length:c,view:new D(i)});f<c;)_(t,f++)}),w&&w(y,B),g=y.prototype=m(F)),g.constructor!==y&&l(g,"constructor",y),M&&l(g,M,s),S[s]=y,r({global:!0,forced:y!=v,sham:!U},S),"BYTES_PER_ELEMENT"in y||l(y,"BYTES_PER_ELEMENT",o),"BYTES_PER_ELEMENT"in g||l(g,"BYTES_PER_ELEMENT",o),O(s)}):t.exports=function(){}},function(t,e,n){var r=n(4),i=n(3),o=n(115),a=n(8).NATIVE_ARRAY_BUFFER_VIEWS,s=r.ArrayBuffer,c=r.Int8Array;t.exports=!a||!i(function(){c(1)})||!i(function(){new c(-1)})||!o(function(t){new c,new c(null),new c(1.5),new c(t)},!0)||i(function(){return 1!==new c(new s(2),1,void 0).length})},function(t,e,n){var r=n(65);t.exports=function(t){var e=r(t);if(e<0)throw RangeError("The argument can't be less than 0");return e}},function(t,e,n){var r=n(36),i=n(20),o=n(100),a=n(157),s=n(67),c=n(8).aTypedArrayConstructor;t.exports=function(t){var e,n,u,f,l,h,p=r(t),d=arguments.length,v=d>1?arguments[1]:void 0,y=void 0!==v,g=o(p);if(null!=g&&!a(g))for(h=(l=g.call(p)).next,p=[];!(f=h.call(l)).done;)p.push(f.value);for(y&&d>2&&(v=s(v,arguments[2],2)),n=i(p.length),u=new(c(this))(n),e=0;n>e;e++)u[e]=y?v(p[e],e):p[e];return u}},function(t,e,n){"use strict";var r=n(8),i=n(404),o=r.aTypedArray;(0,r.exportTypedArrayMethod)("copyWithin",function(t,e){return i.call(o(this),t,e,arguments.length>2?arguments[2]:void 0)})},function(t,e,n){"use strict";var r=n(36),i=n(77),o=n(20),a=Math.min;t.exports=[].copyWithin||function(t,e){var n=r(this),s=o(n.length),c=i(t,s),u=i(e,s),f=arguments.length>2?arguments[2]:void 0,l=a((void 0===f?s:i(f,s))-u,s-c),h=1;for(u<c&&c<u+l&&(h=-1,u+=l-1,c+=l-1);l-- >0;)u in n?n[c]=n[u]:delete n[c],c+=h,u+=h;return n}},function(t,e,n){"use strict";var r=n(8),i=n(37).every,o=r.aTypedArray;(0,r.exportTypedArrayMethod)("every",function(t){return i(o(this),t,arguments.length>1?arguments[1]:void 0)})},function(t,e,n){"use strict";var r=n(8),i=n(248),o=r.aTypedArray;(0,r.exportTypedArrayMethod)("fill",function(t){return i.apply(o(this),arguments)})},function(t,e,n){"use strict";var r=n(8),i=n(37).filter,o=n(70),a=r.aTypedArray,s=r.aTypedArrayConstructor;(0,r.exportTypedArrayMethod)("filter",function(t){for(var e=i(a(this),t,arguments.length>1?arguments[1]:void 0),n=o(this,this.constructor),r=0,c=e.length,u=new(s(n))(c);c>r;)u[r]=e[r++];return u})},function(t,e,n){"use strict";var r=n(8),i=n(37).find,o=r.aTypedArray;(0,r.exportTypedArrayMethod)("find",function(t){return i(o(this),t,arguments.length>1?arguments[1]:void 0)})},function(t,e,n){"use strict";var r=n(8),i=n(37).findIndex,o=r.aTypedArray;(0,r.exportTypedArrayMethod)("findIndex",function(t){return i(o(this),t,arguments.length>1?arguments[1]:void 0)})},function(t,e,n){"use strict";var r=n(8),i=n(37).forEach,o=r.aTypedArray;(0,r.exportTypedArrayMethod)("forEach",function(t){i(o(this),t,arguments.length>1?arguments[1]:void 0)})},function(t,e,n){"use strict";var r=n(8),i=n(96).includes,o=r.aTypedArray;(0,r.exportTypedArrayMethod)("includes",function(t){return i(o(this),t,arguments.length>1?arguments[1]:void 0)})},function(t,e,n){"use strict";var r=n(8),i=n(96).indexOf,o=r.aTypedArray;(0,r.exportTypedArrayMethod)("indexOf",function(t){return i(o(this),t,arguments.length>1?arguments[1]:void 0)})},function(t,e,n){"use strict";var r=n(4),i=n(8),o=n(14),a=n(7)("iterator"),s=r.Uint8Array,c=o.values,u=o.keys,f=o.entries,l=i.aTypedArray,h=i.exportTypedArrayMethod,p=s&&s.prototype[a],d=!!p&&("values"==p.name||null==p.name),v=function(){return c.call(l(this))};h("entries",function(){return f.call(l(this))}),h("keys",function(){return u.call(l(this))}),h("values",v,!d),h(a,v,!d)},function(t,e,n){"use strict";var r=n(8),i=r.aTypedArray,o=r.exportTypedArrayMethod,a=[].join;o("join",function(t){return a.apply(i(this),arguments)})},function(t,e,n){"use strict";var r=n(8),i=n(416),o=r.aTypedArray;(0,r.exportTypedArrayMethod)("lastIndexOf",function(t){return i.apply(o(this),arguments)})},function(t,e,n){"use strict";var r=n(41),i=n(65),o=n(20),a=n(102),s=n(49),c=Math.min,u=[].lastIndexOf,f=!!u&&1/[1].lastIndexOf(1,-0)<0,l=a("lastIndexOf"),h=s("indexOf",{ACCESSORS:!0,1:0}),p=f||!l||!h;t.exports=p?function(t){if(f)return u.apply(this,arguments)||0;var e=r(this),n=o(e.length),a=n-1;for(arguments.length>1&&(a=c(a,i(arguments[1]))),a<0&&(a=n+a);a>=0;a--)if(a in e&&e[a]===t)return a||0;return-1}:u},function(t,e,n){"use strict";var r=n(8),i=n(37).map,o=n(70),a=r.aTypedArray,s=r.aTypedArrayConstructor;(0,r.exportTypedArrayMethod)("map",function(t){return i(a(this),t,arguments.length>1?arguments[1]:void 0,function(t,e){return new(s(o(t,t.constructor)))(e)})})},function(t,e,n){"use strict";var r=n(8),i=n(161).left,o=r.aTypedArray;(0,r.exportTypedArrayMethod)("reduce",function(t){return i(o(this),t,arguments.length,arguments.length>1?arguments[1]:void 0)})},function(t,e,n){"use strict";var r=n(8),i=n(161).right,o=r.aTypedArray;(0,r.exportTypedArrayMethod)("reduceRight",function(t){return i(o(this),t,arguments.length,arguments.length>1?arguments[1]:void 0)})},function(t,e,n){"use strict";var r=n(8),i=r.aTypedArray,o=r.exportTypedArrayMethod,a=Math.floor;o("reverse",function(){for(var t,e=i(this).length,n=a(e/2),r=0;r<n;)t=this[r],this[r++]=this[--e],this[e]=t;return this})},function(t,e,n){"use strict";var r=n(8),i=n(20),o=n(250),a=n(36),s=n(3),c=r.aTypedArray;(0,r.exportTypedArrayMethod)("set",function(t){c(this);var e=o(arguments.length>1?arguments[1]:void 0,1),n=this.length,r=a(t),s=i(r.length),u=0;if(s+e>n)throw RangeError("Wrong length");for(;u<s;)this[e+u]=r[u++]},s(function(){new Int8Array(1).set({})}))},function(t,e,n){"use strict";var r=n(8),i=n(70),o=n(3),a=r.aTypedArray,s=r.aTypedArrayConstructor,c=r.exportTypedArrayMethod,u=[].slice;c("slice",function(t,e){for(var n=u.call(a(this),t,e),r=i(this,this.constructor),o=0,c=n.length,f=new(s(r))(c);c>o;)f[o]=n[o++];return f},o(function(){new Int8Array(1).slice()}))},function(t,e,n){"use strict";var r=n(8),i=n(37).some,o=r.aTypedArray;(0,r.exportTypedArrayMethod)("some",function(t){return i(o(this),t,arguments.length>1?arguments[1]:void 0)})},function(t,e,n){"use strict";var r=n(8),i=r.aTypedArray,o=r.exportTypedArrayMethod,a=[].sort;o("sort",function(t){return a.call(i(this),t)})},function(t,e,n){"use strict";var r=n(8),i=n(20),o=n(77),a=n(70),s=r.aTypedArray;(0,r.exportTypedArrayMethod)("subarray",function(t,e){var n=s(this),r=n.length,c=o(t,r);return new(a(n,n.constructor))(n.buffer,n.byteOffset+c*n.BYTES_PER_ELEMENT,i((void 0===e?r:o(e,r))-c))})},function(t,e,n){"use strict";var r=n(4),i=n(8),o=n(3),a=r.Int8Array,s=i.aTypedArray,c=i.exportTypedArrayMethod,u=[].toLocaleString,f=[].slice,l=!!a&&o(function(){u.call(new a(1))});c("toLocaleString",function(){return u.apply(l?f.call(s(this)):s(this),arguments)},o(function(){return[1,2].toLocaleString()!=new a([1,2]).toLocaleString()})||!o(function(){a.prototype.toLocaleString.call([1,2])}))},function(t,e,n){"use strict";var r=n(8).exportTypedArrayMethod,i=n(3),o=n(4).Uint8Array,a=o&&o.prototype||{},s=[].toString,c=[].join;i(function(){s.call({})})&&(s=function(){return c.call(this)});var u=a.toString!=s;r("toString",s,u)},function(t,e,n){var r=n(2),i=n(231),o=n(3),a=n(11),s=n(173).onFreeze,c=Object.freeze;r({target:"Object",stat:!0,forced:o(function(){c(1)}),sham:!i},{freeze:function(t){return c&&a(t)?c(s(t)):t}})},function(t,e,n){"use strict";n(21);var r,i=n(2),o=n(16),a=n(251),s=n(4),c=n(190),u=n(38),f=n(69),l=n(19),h=n(206),p=n(228),d=n(160).codeAt,v=n(430),y=n(58),g=n(431),b=n(44),m=s.URL,w=g.URLSearchParams,E=g.getState,x=b.set,T=b.getterFor("URL"),O=Math.floor,S=Math.pow,_=/[A-Za-z]/,k=/[\d+\-.A-Za-z]/,A=/\d/,I=/^(0x|0X)/,C=/^[0-7]+$/,j=/^\d+$/,P=/^[\dA-Fa-f]+$/,R=/[\u0000\u0009\u000A\u000D #%/:?@[\\]]/,L=/[\u0000\u0009\u000A\u000D #/:?@[\\]]/,N=/^[\u0000-\u001F ]+|[\u0000-\u001F ]+$/g,D=/[\u0009\u000A\u000D]/g,U=function(t,e){var n,r,i;if("["==e.charAt(0)){if("]"!=e.charAt(e.length-1))return"Invalid host";if(!(n=B(e.slice(1,-1))))return"Invalid host";t.host=n}else if(W(t)){if(e=v(e),R.test(e))return"Invalid host";if(null===(n=M(e)))return"Invalid host";t.host=n}else{if(L.test(e))return"Invalid host";for(n="",r=p(e),i=0;i<r.length;i++)n+=$(r[i],H);t.host=n}},M=function(t){var e,n,r,i,o,a,s,c=t.split(".");if(c.length&&""==c[c.length-1]&&c.pop(),(e=c.length)>4)return t;for(n=[],r=0;r<e;r++){if(""==(i=c[r]))return t;if(o=10,i.length>1&&"0"==i.charAt(0)&&(o=I.test(i)?16:8,i=i.slice(8==o?1:2)),""===i)a=0;else{if(!(10==o?j:8==o?C:P).test(i))return t;a=parseInt(i,o)}n.push(a)}for(r=0;r<e;r++)if(a=n[r],r==e-1){if(a>=S(256,5-e))return null}else if(a>255)return null;for(s=n.pop(),r=0;r<n.length;r++)s+=n[r]*S(256,3-r);return s},B=function(t){var e,n,r,i,o,a,s,c=[0,0,0,0,0,0,0,0],u=0,f=null,l=0,h=function(){return t.charAt(l)};if(":"==h()){if(":"!=t.charAt(1))return;l+=2,f=++u}for(;h();){if(8==u)return;if(":"!=h()){for(e=n=0;n<4&&P.test(h());)e=16*e+parseInt(h(),16),l++,n++;if("."==h()){if(0==n)return;if(l-=n,u>6)return;for(r=0;h();){if(i=null,r>0){if(!("."==h()&&r<4))return;l++}if(!A.test(h()))return;for(;A.test(h());){if(o=parseInt(h(),10),null===i)i=o;else{if(0==i)return;i=10*i+o}if(i>255)return;l++}c[u]=256*c[u]+i,2!=++r&&4!=r||u++}if(4!=r)return;break}if(":"==h()){if(l++,!h())return}else if(h())return;c[u++]=e}else{if(null!==f)return;l++,f=++u}}if(null!==f)for(a=u-f,u=7;0!=u&&a>0;)s=c[u],c[u--]=c[f+a-1],c[f+--a]=s;else if(8!=u)return;return c},F=function(t){var e,n,r,i;if("number"==typeof t){for(e=[],n=0;n<4;n++)e.unshift(t%256),t=O(t/256);return e.join(".")}if("object"==typeof t){for(e="",r=function(t){for(var e=null,n=1,r=null,i=0,o=0;o<8;o++)0!==t[o]?(i>n&&(e=r,n=i),r=null,i=0):(null===r&&(r=o),++i);return i>n&&(e=r,n=i),e}(t),n=0;n<8;n++)i&&0===t[n]||(i&&(i=!1),r===n?(e+=n?":":"::",i=!0):(e+=t[n].toString(16),n<7&&(e+=":")));return"["+e+"]"}return t},H={},z=h({},H,{" ":1,'"':1,"<":1,">":1,"`":1}),q=h({},z,{"#":1,"?":1,"{":1,"}":1}),G=h({},q,{"/":1,":":1,";":1,"=":1,"@":1,"[":1,"\\":1,"]":1,"^":1,"|":1}),$=function(t,e){var n=d(t,0);return n>32&&n<127&&!l(e,t)?t:encodeURIComponent(t)},V={ftp:21,file:null,http:80,https:443,ws:80,wss:443},W=function(t){return l(V,t.scheme)},Y=function(t){return""!=t.username||""!=t.password},J=function(t){return!t.host||t.cannotBeABaseURL||"file"==t.scheme},Z=function(t,e){var n;return 2==t.length&&_.test(t.charAt(0))&&(":"==(n=t.charAt(1))||!e&&"|"==n)},K=function(t){var e;return t.length>1&&Z(t.slice(0,2))&&(2==t.length||"/"===(e=t.charAt(2))||"\\"===e||"?"===e||"#"===e)},X=function(t){var e=t.path,n=e.length;!n||"file"==t.scheme&&1==n&&Z(e[0],!0)||e.pop()},Q=function(t){return"."===t||"%2e"===t.toLowerCase()},tt={},et={},nt={},rt={},it={},ot={},at={},st={},ct={},ut={},ft={},lt={},ht={},pt={},dt={},vt={},yt={},gt={},bt={},mt={},wt={},Et=function(t,e,n,i){var o,a,s,c,u,f=n||tt,h=0,d="",v=!1,y=!1,g=!1;for(n||(t.scheme="",t.username="",t.password="",t.host=null,t.port=null,t.path=[],t.query=null,t.fragment=null,t.cannotBeABaseURL=!1,e=e.replace(N,"")),e=e.replace(D,""),o=p(e);h<=o.length;){switch(a=o[h],f){case tt:if(!a||!_.test(a)){if(n)return"Invalid scheme";f=nt;continue}d+=a.toLowerCase(),f=et;break;case et:if(a&&(k.test(a)||"+"==a||"-"==a||"."==a))d+=a.toLowerCase();else{if(":"!=a){if(n)return"Invalid scheme";d="",f=nt,h=0;continue}if(n&&(W(t)!=l(V,d)||"file"==d&&(Y(t)||null!==t.port)||"file"==t.scheme&&!t.host))return;if(t.scheme=d,n)return void(W(t)&&V[t.scheme]==t.port&&(t.port=null));d="","file"==t.scheme?f=pt:W(t)&&i&&i.scheme==t.scheme?f=rt:W(t)?f=st:"/"==o[h+1]?(f=it,h++):(t.cannotBeABaseURL=!0,t.path.push(""),f=bt)}break;case nt:if(!i||i.cannotBeABaseURL&&"#"!=a)return"Invalid scheme";if(i.cannotBeABaseURL&&"#"==a){t.scheme=i.scheme,t.path=i.path.slice(),t.query=i.query,t.fragment="",t.cannotBeABaseURL=!0,f=wt;break}f="file"==i.scheme?pt:ot;continue;case rt:if("/"!=a||"/"!=o[h+1]){f=ot;continue}f=ct,h++;break;case it:if("/"==a){f=ut;break}f=gt;continue;case ot:if(t.scheme=i.scheme,a==r)t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,t.path=i.path.slice(),t.query=i.query;else if("/"==a||"\\"==a&&W(t))f=at;else if("?"==a)t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,t.path=i.path.slice(),t.query="",f=mt;else{if("#"!=a){t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,t.path=i.path.slice(),t.path.pop(),f=gt;continue}t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,t.path=i.path.slice(),t.query=i.query,t.fragment="",f=wt}break;case at:if(!W(t)||"/"!=a&&"\\"!=a){if("/"!=a){t.username=i.username,t.password=i.password,t.host=i.host,t.port=i.port,f=gt;continue}f=ut}else f=ct;break;case st:if(f=ct,"/"!=a||"/"!=d.charAt(h+1))continue;h++;break;case ct:if("/"!=a&&"\\"!=a){f=ut;continue}break;case ut:if("@"==a){v&&(d="%40"+d),v=!0,s=p(d);for(var b=0;b<s.length;b++){var m=s[b];if(":"!=m||g){var w=$(m,G);g?t.password+=w:t.username+=w}else g=!0}d=""}else if(a==r||"/"==a||"?"==a||"#"==a||"\\"==a&&W(t)){if(v&&""==d)return"Invalid authority";h-=p(d).length+1,d="",f=ft}else d+=a;break;case ft:case lt:if(n&&"file"==t.scheme){f=vt;continue}if(":"!=a||y){if(a==r||"/"==a||"?"==a||"#"==a||"\\"==a&&W(t)){if(W(t)&&""==d)return"Invalid host";if(n&&""==d&&(Y(t)||null!==t.port))return;if(c=U(t,d))return c;if(d="",f=yt,n)return;continue}"["==a?y=!0:"]"==a&&(y=!1),d+=a}else{if(""==d)return"Invalid host";if(c=U(t,d))return c;if(d="",f=ht,n==lt)return}break;case ht:if(!A.test(a)){if(a==r||"/"==a||"?"==a||"#"==a||"\\"==a&&W(t)||n){if(""!=d){var E=parseInt(d,10);if(E>65535)return"Invalid port";t.port=W(t)&&E===V[t.scheme]?null:E,d=""}if(n)return;f=yt;continue}return"Invalid port"}d+=a;break;case pt:if(t.scheme="file","/"==a||"\\"==a)f=dt;else{if(!i||"file"!=i.scheme){f=gt;continue}if(a==r)t.host=i.host,t.path=i.path.slice(),t.query=i.query;else if("?"==a)t.host=i.host,t.path=i.path.slice(),t.query="",f=mt;else{if("#"!=a){K(o.slice(h).join(""))||(t.host=i.host,t.path=i.path.slice(),X(t)),f=gt;continue}t.host=i.host,t.path=i.path.slice(),t.query=i.query,t.fragment="",f=wt}}break;case dt:if("/"==a||"\\"==a){f=vt;break}i&&"file"==i.scheme&&!K(o.slice(h).join(""))&&(Z(i.path[0],!0)?t.path.push(i.path[0]):t.host=i.host),f=gt;continue;case vt:if(a==r||"/"==a||"\\"==a||"?"==a||"#"==a){if(!n&&Z(d))f=gt;else if(""==d){if(t.host="",n)return;f=yt}else{if(c=U(t,d))return c;if("localhost"==t.host&&(t.host=""),n)return;d="",f=yt}continue}d+=a;break;case yt:if(W(t)){if(f=gt,"/"!=a&&"\\"!=a)continue}else if(n||"?"!=a)if(n||"#"!=a){if(a!=r&&(f=gt,"/"!=a))continue}else t.fragment="",f=wt;else t.query="",f=mt;break;case gt:if(a==r||"/"==a||"\\"==a&&W(t)||!n&&("?"==a||"#"==a)){if(".."===(u=(u=d).toLowerCase())||"%2e."===u||".%2e"===u||"%2e%2e"===u?(X(t),"/"==a||"\\"==a&&W(t)||t.path.push("")):Q(d)?"/"==a||"\\"==a&&W(t)||t.path.push(""):("file"==t.scheme&&!t.path.length&&Z(d)&&(t.host&&(t.host=""),d=d.charAt(0)+":"),t.path.push(d)),d="","file"==t.scheme&&(a==r||"?"==a||"#"==a))for(;t.path.length>1&&""===t.path[0];)t.path.shift();"?"==a?(t.query="",f=mt):"#"==a&&(t.fragment="",f=wt)}else d+=$(a,q);break;case bt:"?"==a?(t.query="",f=mt):"#"==a?(t.fragment="",f=wt):a!=r&&(t.path[0]+=$(a,H));break;case mt:n||"#"!=a?a!=r&&("'"==a&&W(t)?t.query+="%27":t.query+="#"==a?"%23":$(a,H)):(t.fragment="",f=wt);break;case wt:a!=r&&(t.fragment+=$(a,z))}h++}},xt=function(t){var e,n,r=f(this,xt,"URL"),i=arguments.length>1?arguments[1]:void 0,a=String(t),s=x(r,{type:"URL"});if(void 0!==i)if(i instanceof xt)e=T(i);else if(n=Et(e={},String(i)))throw TypeError(n);if(n=Et(s,a,null,e))throw TypeError(n);var c=s.searchParams=new w,u=E(c);u.updateSearchParams(s.query),u.updateURL=function(){s.query=String(c)||null},o||(r.href=Ot.call(r),r.origin=St.call(r),r.protocol=_t.call(r),r.username=kt.call(r),r.password=At.call(r),r.host=It.call(r),r.hostname=Ct.call(r),r.port=jt.call(r),r.pathname=Pt.call(r),r.search=Rt.call(r),r.searchParams=Lt.call(r),r.hash=Nt.call(r))},Tt=xt.prototype,Ot=function(){var t=T(this),e=t.scheme,n=t.username,r=t.password,i=t.host,o=t.port,a=t.path,s=t.query,c=t.fragment,u=e+":";return null!==i?(u+="//",Y(t)&&(u+=n+(r?":"+r:"")+"@"),u+=F(i),null!==o&&(u+=":"+o)):"file"==e&&(u+="//"),u+=t.cannotBeABaseURL?a[0]:a.length?"/"+a.join("/"):"",null!==s&&(u+="?"+s),null!==c&&(u+="#"+c),u},St=function(){var t=T(this),e=t.scheme,n=t.port;if("blob"==e)try{return new URL(e.path[0]).origin}catch(t){return"null"}return"file"!=e&&W(t)?e+"://"+F(t.host)+(null!==n?":"+n:""):"null"},_t=function(){return T(this).scheme+":"},kt=function(){return T(this).username},At=function(){return T(this).password},It=function(){var t=T(this),e=t.host,n=t.port;return null===e?"":null===n?F(e):F(e)+":"+n},Ct=function(){var t=T(this).host;return null===t?"":F(t)},jt=function(){var t=T(this).port;return null===t?"":String(t)},Pt=function(){var t=T(this),e=t.path;return t.cannotBeABaseURL?e[0]:e.length?"/"+e.join("/"):""},Rt=function(){var t=T(this).query;return t?"?"+t:""},Lt=function(){return T(this).searchParams},Nt=function(){var t=T(this).fragment;return t?"#"+t:""},Dt=function(t,e){return{get:t,set:e,configurable:!0,enumerable:!0}};if(o&&c(Tt,{href:Dt(Ot,function(t){var e=T(this),n=String(t),r=Et(e,n);if(r)throw TypeError(r);E(e.searchParams).updateSearchParams(e.query)}),origin:Dt(St),protocol:Dt(_t,function(t){var e=T(this);Et(e,String(t)+":",tt)}),username:Dt(kt,function(t){var e=T(this),n=p(String(t));if(!J(e)){e.username="";for(var r=0;r<n.length;r++)e.username+=$(n[r],G)}}),password:Dt(At,function(t){var e=T(this),n=p(String(t));if(!J(e)){e.password="";for(var r=0;r<n.length;r++)e.password+=$(n[r],G)}}),host:Dt(It,function(t){var e=T(this);e.cannotBeABaseURL||Et(e,String(t),ft)}),hostname:Dt(Ct,function(t){var e=T(this);e.cannotBeABaseURL||Et(e,String(t),lt)}),port:Dt(jt,function(t){var e=T(this);J(e)||(""==(t=String(t))?e.port=null:Et(e,t,ht))}),pathname:Dt(Pt,function(t){var e=T(this);e.cannotBeABaseURL||(e.path=[],Et(e,t+"",yt))}),search:Dt(Rt,function(t){var e=T(this);""==(t=String(t))?e.query=null:("?"==t.charAt(0)&&(t=t.slice(1)),e.query="",Et(e,t,mt)),E(e.searchParams).updateSearchParams(e.query)}),searchParams:Dt(Lt),hash:Dt(Nt,function(t){var e=T(this);""!=(t=String(t))?("#"==t.charAt(0)&&(t=t.slice(1)),e.fragment="",Et(e,t,wt)):e.fragment=null})}),u(Tt,"toJSON",function(){return Ot.call(this)},{enumerable:!0}),u(Tt,"toString",function(){return Ot.call(this)},{enumerable:!0}),m){var Ut=m.createObjectURL,Mt=m.revokeObjectURL;Ut&&u(xt,"createObjectURL",function(t){return Ut.apply(m,arguments)}),Mt&&u(xt,"revokeObjectURL",function(t){return Mt.apply(m,arguments)})}y(xt,"URL"),i({global:!0,forced:!a,sham:!o},{URL:xt})},function(t,e,n){"use strict";var r=/[^\0-\u007E]/,i=/[.\u3002\uFF0E\uFF61]/g,o="Overflow: input needs wider integers to process",a=Math.floor,s=String.fromCharCode,c=function(t){return t+22+75*(t<26)},u=function(t,e,n){var r=0;for(t=n?a(t/700):t>>1,t+=a(t/e);t>455;r+=36)t=a(t/35);return a(r+36*t/(t+38))},f=function(t){var e,n,r=[],i=(t=function(t){for(var e=[],n=0,r=t.length;n<r;){var i=t.charCodeAt(n++);if(i>=55296&&i<=56319&&n<r){var o=t.charCodeAt(n++);56320==(64512&o)?e.push(((1023&i)<<10)+(1023&o)+65536):(e.push(i),n--)}else e.push(i)}return e}(t)).length,f=128,l=0,h=72;for(e=0;e<t.length;e++)(n=t[e])<128&&r.push(s(n));var p=r.length,d=p;for(p&&r.push("-");d<i;){var v=2147483647;for(e=0;e<t.length;e++)(n=t[e])>=f&&n<v&&(v=n);var y=d+1;if(v-f>a((2147483647-l)/y))throw RangeError(o);for(l+=(v-f)*y,f=v,e=0;e<t.length;e++){if((n=t[e])<f&&++l>2147483647)throw RangeError(o);if(n==f){for(var g=l,b=36;;b+=36){var m=b<=h?1:b>=h+26?26:b-h;if(g<m)break;var w=g-m,E=36-m;r.push(s(c(m+w%E))),g=a(w/E)}r.push(s(c(g))),h=u(l,y,d==p),l=0,++d}}++l,++f}return r.join("")};t.exports=function(t){var e,n,o=[],a=t.toLowerCase().replace(i,".").split(".");for(e=0;e<a.length;e++)n=a[e],o.push(r.test(n)?"xn--"+f(n):n);return o.join(".")}},function(t,e,n){"use strict";n(14);var r=n(2),i=n(57),o=n(251),a=n(38),s=n(113),c=n(58),u=n(196),f=n(44),l=n(69),h=n(19),p=n(67),d=n(99),v=n(17),y=n(11),g=n(66),b=n(64),m=n(432),w=n(100),E=n(7),x=i("fetch"),T=i("Headers"),O=E("iterator"),S=f.set,_=f.getterFor("URLSearchParams"),k=f.getterFor("URLSearchParamsIterator"),A=/\+/g,I=Array(4),C=function(t){return I[t-1]||(I[t-1]=RegExp("((?:%[\\da-f]{2}){"+t+"})","gi"))},j=function(t){try{return decodeURIComponent(t)}catch(e){return t}},P=function(t){var e=t.replace(A," "),n=4;try{return decodeURIComponent(e)}catch(t){for(;n;)e=e.replace(C(n--),j);return e}},R=/[!'()~]|%20/g,L={"!":"%21","'":"%27","(":"%28",")":"%29","~":"%7E","%20":"+"},N=function(t){return L[t]},D=function(t){return encodeURIComponent(t).replace(R,N)},U=function(t,e){if(e)for(var n,r,i=e.split("&"),o=0;o<i.length;)(n=i[o++]).length&&(r=n.split("="),t.push({key:P(r.shift()),value:P(r.join("="))}))},M=function(t){this.entries.length=0,U(this.entries,t)},B=function(t,e){if(t<e)throw TypeError("Not enough arguments")},F=u(function(t,e){S(this,{type:"URLSearchParamsIterator",iterator:m(_(t).entries),kind:e})},"Iterator",function(){var t=k(this),e=t.kind,n=t.iterator.next(),r=n.value;return n.done||(n.value="keys"===e?r.key:"values"===e?r.value:[r.key,r.value]),n}),H=function(){l(this,H,"URLSearchParams");var t,e,n,r,i,o,a,s,c,u=arguments.length>0?arguments[0]:void 0,f=[];if(S(this,{type:"URLSearchParams",entries:f,updateURL:function(){},updateSearchParams:M}),void 0!==u)if(y(u))if("function"==typeof(t=w(u)))for(n=(e=t.call(u)).next;!(r=n.call(e)).done;){if((a=(o=(i=m(v(r.value))).next).call(i)).done||(s=o.call(i)).done||!o.call(i).done)throw TypeError("Expected sequence with length 2");f.push({key:a.value+"",value:s.value+""})}else for(c in u)h(u,c)&&f.push({key:c,value:u[c]+""});else U(f,"string"==typeof u?"?"===u.charAt(0)?u.slice(1):u:u+"")},z=H.prototype;s(z,{append:function(t,e){B(arguments.length,2);var n=_(this);n.entries.push({key:t+"",value:e+""}),n.updateURL()},delete:function(t){B(arguments.length,1);for(var e=_(this),n=e.entries,r=t+"",i=0;i<n.length;)n[i].key===r?n.splice(i,1):i++;e.updateURL()},get:function(t){B(arguments.length,1);for(var e=_(this).entries,n=t+"",r=0;r<e.length;r++)if(e[r].key===n)return e[r].value;return null},getAll:function(t){B(arguments.length,1);for(var e=_(this).entries,n=t+"",r=[],i=0;i<e.length;i++)e[i].key===n&&r.push(e[i].value);return r},has:function(t){B(arguments.length,1);for(var e=_(this).entries,n=t+"",r=0;r<e.length;)if(e[r++].key===n)return!0;return!1},set:function(t,e){B(arguments.length,1);for(var n,r=_(this),i=r.entries,o=!1,a=t+"",s=e+"",c=0;c<i.length;c++)(n=i[c]).key===a&&(o?i.splice(c--,1):(o=!0,n.value=s));o||i.push({key:a,value:s}),r.updateURL()},sort:function(){var t,e,n,r=_(this),i=r.entries,o=i.slice();for(i.length=0,n=0;n<o.length;n++){for(t=o[n],e=0;e<n;e++)if(i[e].key>t.key){i.splice(e,0,t);break}e===n&&i.push(t)}r.updateURL()},forEach:function(t){for(var e,n=_(this).entries,r=p(t,arguments.length>1?arguments[1]:void 0,3),i=0;i<n.length;)r((e=n[i++]).value,e.key,this)},keys:function(){return new F(this,"keys")},values:function(){return new F(this,"values")},entries:function(){return new F(this,"entries")}},{enumerable:!0}),a(z,O,z.entries),a(z,"toString",function(){for(var t,e=_(this).entries,n=[],r=0;r<e.length;)t=e[r++],n.push(D(t.key)+"="+D(t.value));return n.join("&")},{enumerable:!0}),c(H,"URLSearchParams"),r({global:!0,forced:!o},{URLSearchParams:H}),o||"function"!=typeof x||"function"!=typeof T||r({global:!0,enumerable:!0,forced:!0},{fetch:function(t){var e,n,r,i=[t];return arguments.length>1&&(e=arguments[1],y(e)&&(n=e.body,"URLSearchParams"===d(n)&&((r=e.headers?new T(e.headers):new T).has("content-type")||r.set("content-type","application/x-www-form-urlencoded;charset=UTF-8"),e=g(e,{body:b(0,String(n)),headers:b(0,r)}))),i.push(e)),x.apply(this,i)}}),t.exports={URLSearchParams:H,getState:_}},function(t,e,n){var r=n(17),i=n(100);t.exports=function(t){var e=i(t);if("function"!=typeof e)throw TypeError(String(t)+" is not iterable");return r(e.call(t))}},function(t,e,n){"use strict";var r=n(2),i=n(96).includes,o=n(152);r({target:"Array",proto:!0,forced:!n(49)("indexOf",{ACCESSORS:!0,1:0})},{includes:function(t){return i(this,t,arguments.length>1?arguments[1]:void 0)}}),o("includes")},function(t,e,n){"use strict";var r=n(2),i=n(435),o=n(75);r({target:"String",proto:!0,forced:!n(436)("includes")},{includes:function(t){return!!~String(o(this)).indexOf(i(t),arguments.length>1?arguments[1]:void 0)}})},function(t,e,n){var r=n(227);t.exports=function(t){if(r(t))throw TypeError("The method doesn't accept regular expressions");return t}},function(t,e,n){var r=n(7)("match");t.exports=function(t){var e=/./;try{"/./"[t](e)}catch(n){try{return e[r]=!1,"/./"[t](e)}catch(t){}}return!1}},function(t,e,n){var r=n(2),i=n(57),o=n(68),a=n(17),s=n(11),c=n(66),u=n(438),f=n(3),l=i("Reflect","construct"),h=f(function(){function t(){}return!(l(function(){},[],t)instanceof t)}),p=!f(function(){l(function(){})}),d=h||p;r({target:"Reflect",stat:!0,forced:d,sham:d},{construct:function(t,e){o(t),a(e);var n=arguments.length<3?t:o(arguments[2]);if(p&&!h)return l(t,e,n);if(t==n){switch(e.length){case 0:return new t;case 1:return new t(e[0]);case 2:return new t(e[0],e[1]);case 3:return new t(e[0],e[1],e[2]);case 4:return new t(e[0],e[1],e[2],e[3])}var r=[null];return r.push.apply(r,e),new(u.apply(t,r))}var i=n.prototype,f=c(s(i)?i:Object.prototype),d=Function.apply.call(t,f,e);return s(d)?d:f}})},function(t,e,n){"use strict";var r=n(68),i=n(11),o=[].slice,a={},s=function(t,e,n){if(!(e in a)){for(var r=[],i=0;i<e;i++)r[i]="a["+i+"]";a[e]=Function("C,a","return new C("+r.join(",")+")")}return a[e](t,n)};t.exports=Function.bind||function(t){var e=r(this),n=o.call(arguments,1),a=function(){var r=n.concat(o.call(arguments));return this instanceof a?s(e,r.length,r):e.apply(t,r)};return i(e.prototype)&&(a.prototype=e.prototype),a}},function(t,e,n){"use strict";n.r(e),n(13),n(47),n(48),n(14),n(9),n(25),n(71),n(21),n(26);var r=n(0),i=n(23);function o(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}n(59),n(72);var a=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.version="2.1.0",e&&e.name?this.integration=e:this.integration={name:"ksdk"},this.reportInterval=n||3e5}var e,n;return e=t,(n=[{key:"setIntegration",value:function(t){return t&&t.name&&(this.integration=t),this}},{key:"setReportInterval",value:function(t){return t&&t>0&&(this.reportInterval=t),this}},{key:"integrationName",value:function(){return this.integration.name}}])&&o(e.prototype,n),t}(),s=n(1),c=n(27),u=n(137),f=n(87);n(129),n(54),n(52),n(135);var l=n(140),h=n(136);n(108),n(252),n(30);h.a,n(43),n(133);var p=n(138),d=n(51),v=n(132),y=(n(86),n(85));function g(){}var b=function(t){return"function"==typeof t?t:g},m=n(84),w=function(t,e,n,r){var i=Object(d.a)(t),o={method:"GET",url:"".concat(i,"/api/content/").concat(e,"/").concat(n),async:!0,headers:{Authorization:"Bearer ".concat(r)}};return Object(y.a)(o)};function E(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function x(t){return t.map(function(t){return{src:t.url,type:t.data.mime}})}n(60);var T=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.player=e}var e,n;return e=t,(n=[{key:"bindInterceptor",value:function(t,e){!function(t,e,n){t.ready(function(){var r,i=t.tech({IWillNotUseThisInPlugins:!0});r=setInterval(function(){i.hls&&(clearInterval(r),i.hls.xhr.beforeRequest=function(t){e()&&(t.xhr=new l.a(n()))})},2)})}(this.player,t,e)}},{key:"switchToCDN",value:function(t){var e=x(t);this.player.src(e)}},{key:"fallbackToCDN",value:function(t){var e=x(t);this.player.src(e)}},{key:"playKollective",value:function(t){var e=x(t);this.player.src(e)}},{key:"videoElement",value:function(){return Object(m.b)(this.player)}}])&&E(e.prototype,n),t}();function O(t){return new Error("".concat(t," integration has yet to be implemented, but it's planned. Feel free to reach out to Kollective regarding this issue."))}var S=function(t,e){switch(e){case"AMP":case"HLSjs":throw O(e);case"VideoJS":return new T(t);case"SHAKA":throw O(e);default:throw new Error("".concat(e," has yet to be implemented, and it is not planned. Feel free to reach out to Kollective for any questions."))}};function _(t){return(_="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function k(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}function A(t){var e="function"==typeof Map?new Map:void 0;return(A=function(t){if(null===t||(n=t,-1===Function.toString.call(n).indexOf("[native code]")))return t;var n;if("function"!=typeof t)throw new TypeError("Super expression must either be null or a function");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,r)}function r(){return function(t,e,n){return(function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],function(){})),!0}catch(t){return!1}}()?Reflect.construct:function(t,e,n){var r=[null];r.push.apply(r,e);var i=new(Function.bind.apply(t,r));return n&&I(i,n.prototype),i}).apply(null,arguments)}(t,arguments,C(this).constructor)}return r.prototype=Object.create(t.prototype,{constructor:{value:r,enumerable:!1,writable:!0,configurable:!0}}),I(r,t)})(t)}function I(t,e){return(I=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function C(t){return(C=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}n(433),n(434),n(127),n(128),n(104),n(437);var j=function(t){function e(t){var n;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),(n=function(t,e){return!e||"object"!==_(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}(this,C(e).call(this,t))).name="CompositeError",n.errors=[],n}var n,r;return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&I(t,e)}(e,A(Error)),n=e,(r=[{key:"addError",value:function(t){this.errors.push(t)}}])&&k(n.prototype,r),e}();function P(t){return function(t){if(Array.isArray(t)){for(var e=0,n=new Array(t.length);e<t.length;e++)n[e]=t[e];return n}}(t)||function(t){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function R(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var L=function(){function t(e,n){var o=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),Object(i.a)(this),this.player=n,this.playerType=e,this.playerInteraction=S(n,e),this.availablePlayerTypes=["VideoJS"],this.sdkConfig=new a({name:"ksdk"},2e4),console.log("Ksdk  v"+this.sdkConfig.version+" loaded"),this.log=r.a,this.playerInteraction.bindInterceptor(function(){return o.enableWebRTC},function(){return o.playbackModule.peerManager})}var e,n;return e=t,(n=[{key:"getContext",value:function(){return this.sdkConfig.integrationName()}},{key:"load",value:function(t){var e=this;this.contentToken=t.contentToken,this.userToken=t.userToken,this.title=t.contentTitle,this.contentUrl=t.contentUrl,this.sourceType=t.sourceType,this.videoElement=t.videoElement,this.callbacks=t.callbacks||{},this.start=Date.now(),this.config=t.config;var n=Object(v.a)(this.contentToken);if(!n)throw new Error("Invalid contentToken. Could not decode token.");this.tenantId=n.tid,this.contentId=n.cid,this.contentHost=n.contentHost||n.iss,function t(e,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:new j("wrapRetry");return function(){var i=arguments;return e.apply(void 0,P(i)).catch(function(o){if(r.addError(o),n>1)return t(e,n-1,r).apply(void 0,P(i));throw r})}}(w,3)(this.contentHost,this.tenantId,this.contentId,this.contentToken).then(function(t){var n=t.data;n.config&&(e.config=n.config),r.a.i("config:",e.config),e.legacyConfig=n.legacy||{},e.jwt=n.token,e.contentSources=n.items;var i=function(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(Symbol.iterator in Object(t)||"[object Arguments]"===Object.prototype.toString.call(t)){var n=[],r=!0,i=!1,o=void 0;try{for(var a,s=t[Symbol.iterator]();!(r=(a=s.next()).done)&&(n.push(a.value),!e||n.length!==e);r=!0);}catch(t){i=!0,o=t}finally{try{r||null==s.return||s.return()}finally{if(i)throw o}}return n}}(t,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}(e.contentSources,1)[0];if(e.contentId=i.id,e.tenantId=i.tenantId,e.contentUrl||(e.contentUrl=i.url),!e.sourceType){var o=i.mime||i.data.mime;e.sourceType=function(t,e){switch(t){case"application/vnd.ms-sstr+xml":return s.c.SMOOTH;case"application/dash+xml":return s.c.DASH;case"application/vnd.apple.mpegurl":case"application/x-mpegURL":return s.c.HLS;case"video/mp4":return s.c.MP4;default:return function(t){if(t){if(t.includes(".m3u8"))return s.c.HLS;if(t.includes(".mdp")||t.includes("playlist.ism/Manifest(format=mpd-time-csf)"))return s.c.DASH;if(t.includes("playlist.ism/Manifest"))return s.c.SMOOTH;if(t.includes(".mp4"))return s.c.MP4}return null}(e)}}(o,e.contentUrl)}if(e.config.ch!==e.contentHost&&r.a.e("SdkConfig return content host that differs from host requested for config.",e.config.ch,e.contentHost),!e.config)throw r.a.e("No config found: failing"),Error("No config provided. a config is necessary for playback with the Kollective sdk");if(e.sdkConfig.setIntegration({name:e.config.app}),e.sdkConfig.setReportInterval(e.config.iar),e.contentHost=e.config.ch,e.signalHost=e.config.sgh,e.statsHost=e.config.sth,!e.contentUrl||!e.sourceType)return Promise.reject(new Error("One of contentUrl or sourceType was not found."));e.reporter=function(t){var e=t.title,n=t.contentId,r=t.statsHost,i=t.jwt,o=t.sdkConfig,a=t.legacyConfig,s={sth:r},u=new c.a({config:s},o),f=c.a.Sections,l=f.ECDN10,h=f.ECDN11;return u.jwt=i,u.rpk=a.rpk,u.set({content:n},c.a.Sections.ECDN11),u.set({title:e}),a.urn&&(this.prepareDeliveryGuid(a.urn,u,l),u.set({content:a.urn},l)),n&&u.set({content:n},h),u}(e);var a={url:e.contentUrl,sourceType:e.sourceType};return Object(u.a)(e.reporter,a,e.config).then(function(t){return Promise.resolve(Object(p.a)(t.mode)).then(function(t){var n=t===f.a;e.enableWebRTC=n,e.playbackModule=new t(e.reporter,{content:{id:e.contentId,tenantId:e.tenantId,token:e.contentToken},detectionSource:a,sourceType:e.sourceType,config:e.config,switchToCDN:e.switchToCDN},e.sdkConfig)})}).then(function(){return e.playbackModule.init()}).then(function(){return e.playbackModule.startDelivery()}).then(e.playKollective).then(function(){return e.reporter.attachVideoElement(e.getVideoElement())})}).catch(function(t){r.a.e(t),e.fallbackToCDN()})}},{key:"switchToCDN",value:function(t){r.a.e(this.getContext()+":switch2cdn:"+t),this.sdnPlaybackFailed=!0,this.playerInteraction.switchToCDN(this.contentSources),b(this.callbacks.switchToCDN)()}},{key:"fallbackToCDN",value:function(t){r.a.e(this.getContext()+":fallback2cdn:"+t),this.playbackModule&&this.playbackModule.stop(),this.sdnPlaybackFailed=!0,this.playerInteraction.fallbackToCDN(this.contentSources),r.a.e("failed to attach reporter on ksdk with error:",t),b(this.callbacks.fallbackToCDN)()}},{key:"playKollective",value:function(t){var e=(t&&t.length)>0?t:this.contentSources;this.playerInteraction.playKollective(e),b(this.callbacks.playKollective)()}},{key:"getVideoElement",value:function(){return this.videoElement?this.videoElement:this.playerInteraction.videoElement()}},{key:"stop",value:function(){this.playbackModule&&this.playbackModule.stop(),this.reporter&&this.reporter.cleanup()}}])&&R(e.prototype,n),t}();function N(t,e){return new L(t,e)}N.prototype.forVideoJS=function(t){return new L("VideoJS",t)},N.prototype.forHLSjs=function(t){return new L("HLSjs",t)},N.prototype.forAMP=function(t){return new L("AMP",t)},e.default=N}]);function reArrangeSomeElements(){if(window.outerWidth>=1201){var t=$("#hero-carousel .hero-carousel"),e=$(".main-content section.channels"),n=$(".body-background").outerHeight();n<800&&(n=800);var r=n-t.height()-parseInt(t.css("margin-top"))+48;r>48&&$(e).css("margin-top",r);var i=0,o=setInterval(function(){++i>=50&&clearInterval(o),$(".body-background").outerHeight()>n&&($(t).css("margin-top",$(".body-background").outerHeight()/2),$(e).css("margin-top",$(".body-background").outerHeight()-t.height()-parseInt(t.css("margin-top"))+48)),(window.navigator.userAgent.indexOf("MSIE ")>0||navigator.userAgent.match(/Trident.*rv\:11\./))&&(console.log($(".body-background").outerHeight()),console.log(n),$(".body-background").outerHeight()<n&&($(t).css("margin-top",$(".body-background").outerHeight()/2),$(e).css("margin-top",$(".body-background").outerHeight()-t.height()-parseInt(t.css("margin-top"))+48)))},100)}}$(document).ready(function(){if(window.constants&&"channel"==window.constants.CURRENT_SCREEN){if(new window.myGui.RestfulItemCarousel({selector:"#hero-carousel",apiUrl:window.constants.BASE_URL+"/api/channel/"+window.constants.CURRENT_CHANNEL_ID+"/videos/featured",deserializer:window.myUtil.VideoListDeserializer,guiBuilder:window.myGui.HeroCarouselGuiBuilder,itemLinkTemplate:window.constants.BASE_URL+"/playlist/"+window.constants.CURRENT_CHANNEL_ID+"/featured/{{itemId}}/"+window.constants.LANGUAGE,pageSize:18,slidePageSize:1}).fetch(0,function(){reArrangeSomeElements(),$(window).on("resize",function(){reArrangeSomeElements()});let t=$(".hero-carousel .item.slick-current.slick-active .carousel-item-info");if(t&&1==t.length){let e=$(t[0]).find("[name=background-image-url]");e&&1==e.length&&$(".body-background img").attr("src",e[0].value)}}),new window.myGui.RestfulItemCarousel({selector:"#featured-playlist",icon:"sharp-playlist-white",title:"Featured playlists",subtitle:moment().format("MMMM YYYY"),apiUrl:window.constants.BASE_URL+"/api/channel/"+window.constants.CURRENT_CHANNEL_ID+"/playlist/featured",deserializer:window.myUtil.PlayListDeserializer,guiBuilder:window.myGui.ListCarouselGuiBuilder,itemLinkTemplate:window.constants.BASE_URL+"/playlist/"+window.constants.CURRENT_CHANNEL_ID+"/{{itemId}}"+window.constants.LANGUAGE,pageSize:6,slidePageSize:3}).fetch(),window.constants.CURRENT_PLAYLIST_MOST_WATCHED)new window.myGui.RestfulItemCarousel({selector:"#most-watched-videos",icon:"sharp-playbutton-white",title:"Most watched",apiUrl:window.constants.BASE_URL+"/api/channel/"+window.constants.CURRENT_CHANNEL_ID+"/videolist/most-watched",apiUrl:window.constants.BASE_URL+"/api/channel/"+window.constants.CURRENT_CHANNEL_ID+"/playlist/"+window.constants.CURRENT_PLAYLIST_MOST_WATCHED+"/videos",deserializer:window.myUtil.VideoListDeserializer,guiBuilder:window.myGui.ListCarouselGuiBuilder,itemLinkTemplate:window.constants.BASE_URL+"/playlist/"+window.constants.CURRENT_CHANNEL_ID+"/"+window.constants.CURRENT_PLAYLIST_MOST_WATCHED+"/{{itemId}}/"+window.constants.LANGUAGE,pageSize:18,slidePageSize:3}).fetch();if(window.constants.CURRENT_PLAYLIST_RECENT_EVENTS)new window.myGui.RestfulItemCarousel({selector:"#recent-events-videos",icon:"sharp-playbutton-white",title:"Recent Events",apiUrl:window.constants.BASE_URL+"/api/channel/"+window.constants.CURRENT_CHANNEL_ID+"/videolist/recent-events",apiUrl:window.constants.BASE_URL+"/api/channel/"+window.constants.CURRENT_CHANNEL_ID+"/playlist/"+window.constants.CURRENT_PLAYLIST_RECENT_EVENTS+"/videos",deserializer:window.myUtil.VideoListDeserializer,guiBuilder:window.myGui.ListCarouselGuiBuilder,itemLinkTemplate:window.constants.BASE_URL+"/playlist/"+window.constants.CURRENT_CHANNEL_ID+"/"+window.constants.CURRENT_PLAYLIST_RECENT_EVENTS+"/{{itemId}}/"+window.constants.LANGUAGE,pageSize:18,slidePageSize:3}).fetch();if(window.constants.CURRENT_PLAYLIST_UPCOMING_EVENTS)new window.myGui.RestfulItemCarousel({selector:"#upcoming-events-videos",icon:"sharp-playbutton-white",title:"Upcoming Events",deserializer:window.myUtil.VideoListDeserializer,guiBuilder:window.myGui.ListCarouselGuiBuilder,itemLinkTemplate:window.constants.BASE_URL+"/playlist/"+window.constants.CURRENT_CHANNEL_ID+"/"+window.constants.CURRENT_PLAYLIST_RECENT_EVENTS+"/{{itemId}}/"+window.constants.LANGUAGE,pageSize:18,slidePageSize:3}).fetch()}$("body").on("click",".slide-unactive-mask",function(){let t=$(this).parent(),e=!1;if(1==t.parent().length&&$(t.parent()[0]).hasClass("channel-carousel")?e=t.parent():1==t.parent().parent().length&&$(t.parent().parent()[0]).hasClass("channel-carousel")?e=t.parent().parent():1==t.parent().parent().parent().length&&$(t.parent().parent().parent()[0]).hasClass("channel-carousel")?e=t.parent().parent().parent():1==t.parent().parent().parent().parent().length&&$(t.parent().parent().parent().parent()[0]).hasClass("channel-carousel")&&(e=t.parent().parent().parent().parent()),!e)return;let n=t.prev(),r=t.next();1==n.length&&$(n[0]).hasClass("slick-active")?$(e).slick("slickNext"):1==r.length&&$(r[0]).hasClass("slick-active")&&$(e).slick("slickPrev")})}),$(document).ready(function(){var t=new MobileDetect(window.navigator.userAgent);t.mobile()&&($("body").addClass("mobile-device-wrapper"),t.phone()&&$("body").addClass("phone-device-wrapper"),t.tablet()&&$("body").addClass("tablet-device-wrapper"))}),function(){window.myGui||(window.myGui={}),window.myGui.RestfulItemCarousel=e;var t=window.myGui.ItemCarousel;function e(e){if(t.call(this,e),!e.apiUrl)throw Error("no api url provided");this.currentPage=1,this.pageSize=this.options.pageSize||9,this.slidePageSize=this.options.slidePageSize||3,this.paging={}}e.prototype=Object.create(t.prototype),e.prototype.constructor=t,e.prototype.fetchNext=function(){var t=this;console.log("fetchNext:"+t.currentPage);var e=t.currentPage;t.fetch(t.currentPage+1,function(n){console.log("fetching result ",n),n.items&&n.items.length||(console.log("reset current page: ",e),t.currentPage=e)})},e.prototype.fetch=function(t,e){var n=this;t&&(n.currentPage=t),$.get(this.options.apiUrl+"?pagesize="+n.pageSize+"&page="+n.currentPage,function(t){var r=t;n.options.deserializer&&(r=(new n.options.deserializer).deserialize(t.data));n.addItems(r.items),n.paging=r.paging,e&&"function"==typeof e&&e(r)})},e.prototype.onRenderCompleted=function(){var t=this;let e=new MobileDetect(window.navigator.userAgent).mobile()?1:t.slidePageSize;this.carousel.on("afterChange",function(n,r,i){i+e>=t.items.length&&t.fetchNext()})}}(),$(document).ready(function(){if(window.constants&&"playlist"==window.constants.CURRENT_SCREEN){setTimeout(function(){$(".video-player-container .loader-container").css("display","none"),$(".video-player-container .video-player").css("display","block")},5e3);var t=new window.myGui.RestfulItemCarousel({selector:"#current-playlist-carousel",apiUrl:window.constants.BASE_URL+"/api/channel/"+window.constants.CURRENT_CHANNEL_ID+"/playlist/"+window.constants.CURRENT_PLAYLIST_ID+"/videos",deserializer:window.myUtil.VideoListDeserializer,guiBuilder:window.myGui.ListCarouselGuiBuilder,itemLinkTemplate:window.constants.BASE_URL+"/playlist/"+window.constants.CURRENT_CHANNEL_ID+"/"+window.constants.CURRENT_PLAYLIST_ID+"/{{itemId}}/"+window.constants.LANGUAGE,pageSize:18,slidePageSize:3});t.fetch(0,function(){if("featured"==window.constants.CURRENT_PLAYLIST_ID){t.updateHeadTitle("Featured playlist");var e=t.paging.item_count;let n=(null==e?"":e)+" video"+(e>1?"s":"");t.updateHeadMetas([{id:"total-videos",icon:"sharp-playlist",text:n}])}else $.get(window.constants.BASE_URL+"/api/channel/"+window.constants.CURRENT_CHANNEL_ID+"/playlist/"+window.constants.CURRENT_PLAYLIST_ID,function(e){if(e&&e.data&&e.data.playlist){var n=e.data.playlist,r=Math.round(parseFloat(n.total_duration)/60),i=t.paging.item_count;let o=(null==i?"":i)+" video"+(i>1?"s":""),a=r+" min"+(r>1?"s":"");t.updateHeadTitle(n.title),t.updateHeadMetas([{id:"total-videos",icon:"sharp-playlist",text:o},{id:"duration",icon:"clock-icon",text:a}])}})})}});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
